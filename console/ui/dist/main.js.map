{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/account/authentication/authentication.component.ts","./src/app/account/authentication/authentication.component.html","./src/app/account/friends/friends.component.ts","./src/app/account/friends/friends.component.html","./src/app/account/groups/groups.component.ts","./src/app/account/groups/groups.component.html","./src/app/account/profile/profile.component.ts","./src/app/account/profile/profile.component.html","./src/app/account/purchases/purchases.component.ts","./src/app/account/purchases/purchases.component.html","./src/app/account/subscriptions/subscriptions.component.ts","./src/app/account/subscriptions/subscriptions.component.html","./src/app/account/wallet/wallet.component.ts","./src/app/account/wallet/wallet.component.html","./src/app/accounts/accounts.component.ts","./src/app/accounts/accounts.component.html","./src/app/apiexplorer/apiexplorer.component.ts","./src/app/apiexplorer/apiexplorer.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication-error.interceptor.ts","./src/app/authentication.guard.ts","./src/app/authentication.service.ts","./src/app/base/base.component.ts","./src/app/base/base.component.html","./src/app/channels/chat-list.component.ts","./src/app/channels/chat-list.component.html","./src/app/config/config.component.ts","./src/app/config/config.component.html","./src/app/console.service.ts","./src/app/globals.ts","./src/app/group/details/groupDetailsComponent.ts","./src/app/group/details/groupDetails.component.html","./src/app/group/group.component.ts","./src/app/group/group.component.html","./src/app/group/members/groupMembers.component.ts","./src/app/group/members/groupMembers.component.html","./src/app/groups/groups.component.ts","./src/app/groups/groups.component.html","./src/app/leaderboard/details/details.component.ts","./src/app/leaderboard/details/details.component.html","./src/app/leaderboard/leaderboard.component.ts","./src/app/leaderboard/leaderboard.component.html","./src/app/leaderboard/records/records.component.ts","./src/app/leaderboard/records/records.component.html","./src/app/leaderboards/leaderboards.component.ts","./src/app/leaderboards/leaderboards.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/matches/matches.component.ts","./src/app/matches/matches.component.html","./src/app/mfa-setup/mfa-setup.component.ts","./src/app/mfa-setup/mfa-setup.component.html","./src/app/purchases/purchases-list.component.ts","./src/app/purchases/purchases-list.component.html","./src/app/runtime/runtime.component.html","./src/app/runtime/runtime.component.ts","./src/app/session.interceptor.ts","./src/app/shared/delete-confirm-dialog/delete-confirm-dialog.component.ts","./src/app/shared/delete-confirm-dialog/delete-confirm-dialog.component.html","./src/app/shared/delete-confirm.service.ts","./src/app/status/status.component.ts","./src/app/status/status.component.html","./src/app/storage-object/storage-object.component.ts","./src/app/storage-object/storage-object.component.html","./src/app/storage/storage.component.ts","./src/app/storage/storage.component.html","./src/app/subscriptions/subscriptions-list.component.ts","./src/app/subscriptions/subscriptions-list.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/window.provider.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ApiAccount, ConsoleService, UserRole} from '../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {saveAs} from 'file-saver';\r\nimport {Observable} from 'rxjs';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {DeleteConfirmDialogComponent} from '../shared/delete-confirm-dialog/delete-confirm-dialog.component';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  public account: ApiAccount;\r\n  public error = '';\r\n\r\n  public views = [\r\n    {label: 'Profile', path: 'profile'},\r\n    {label: 'Authentication', path: 'authentication'},\r\n    {label: 'Friends', path: 'friends'},\r\n    {label: 'Groups', path: 'groups'},\r\n    {label: 'Wallet', path: 'wallet'},\r\n    {label: 'Purchases', path: 'purchases'},\r\n    {label: 'Subscriptions', path: 'subscriptions'},\r\n  ];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  deleteAccount(event, recorded: boolean): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        this.error = '';\r\n        this.consoleService.deleteAccount('', this.account.user.id, recorded).subscribe(() => {\r\n          this.error = '';\r\n          this.router.navigate(['/accounts']);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  banUnbanAccount(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n    if (this.account.disable_time) {\r\n      this.consoleService.unbanAccount('', this.account.user.id).subscribe(() => {\r\n        this.error = '';\r\n        this.account.disable_time = null;\r\n        event.target.disabled = false;\r\n      }, err => {\r\n        this.error = err;\r\n        event.target.disabled = false;\r\n      });\r\n    } else {\r\n      this.consoleService.banAccount('', this.account.user.id).subscribe(() => {\r\n        this.error = '';\r\n        this.account.disable_time = Date.now().toString();\r\n        event.target.disabled = false;\r\n      }, err => {\r\n        this.error = err;\r\n        event.target.disabled = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  exportAccount(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n    this.consoleService.exportAccount('', this.account.user.id).subscribe(accountExport => {\r\n      this.error = '';\r\n      const fileName = this.account.user.id + '-export.json';\r\n      const json = JSON.stringify(accountExport, null, 2);\r\n      const bytes = new TextEncoder().encode(json);\r\n      const blob = new Blob([bytes], {type: 'application/json;charset=utf-8'});\r\n      saveAs(blob, fileName);\r\n      event.target.disabled = false;\r\n    }, err => {\r\n      event.target.disabled = false;\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  exportAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  banAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AccountResolver implements Resolve<ApiAccount> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiAccount> {\r\n    const userId = route.paramMap.get('id');\r\n    return this.consoleService.getAccount('', userId);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">User Account</h2>\r\n<div class=\"account-top-nav d-flex justify-content-between align-items-baseline mb-4\">\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/accounts']\">Account</a></li>\r\n      <li class=\"breadcrumb-item active\">{{account.user.id}}</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  <div>\r\n    <button *ngIf=\"exportAllowed()\" (click)=\"exportAccount($event)\" type=\"button\" class=\"btn  btn-outline-secondary mr-2\"><img class=\"mr-2\" src=\"/static/svg/export.svg\" alt=\"\" width=\"13\" height=\"13\">Export</button>\r\n    <button *ngIf=\"banAllowed()\" (click)=\"banUnbanAccount($event)\" type=\"button\" class=\"btn  btn-outline-secondary mr-2\"><img class=\"mr-2\" src=\"/static/svg/ban.svg\" alt=\"\" width=\"13\" height=\"13\">\r\n      <span *ngIf=\"account.disable_time\">Unban</span>\r\n      <span *ngIf=\"!account.disable_time\">Ban</span>\r\n    </button>\r\n    <button *ngIf=\"deleteAllowed()\" (click)=\"deleteAccount($event, false)\" type=\"button\" class=\"btn btn-danger btn-danger-icon mr-2\"><img class=\"mr-2\" src=\"/static/svg/bin-red.svg\" alt=\"\" width=\"14\" height=\"\">Delete</button>\r\n    <button *ngIf=\"deleteAllowed()\" (click)=\"deleteAccount($event, true)\" type=\"button\" class=\"btn btn-danger btn-danger-icon mr-2\"><img class=\"mr-2\" src=\"/static/svg/bin-recorded.svg\" alt=\"\" width=\"15\" height=\"\">Recorded delete</button>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<nav ngbNav #accountNav=\"ngbNav\" class=\"navbar-expand-sm p-0 mb-3\">\r\n  <div *ngFor=\"let v of views\">\r\n    <ng-container [ngbNavItem]=\"v.path\">\r\n      <a ngbNavLink routerLinkActive=\"account-link-active\" [routerLink]=\"['/accounts', account.user.id, v.path]\">{{v.label}}</a>\r\n    </ng-container>\r\n  </div>\r\n  <div>\r\n    <ng-container ngbNavItem=\"storage\">\r\n      <a ngbNavLink [routerLink]=\"['/storage']\" [queryParams]=\"{'user_id': this.account.user.id}\">\r\n        Storage\r\n      </a>\r\n    </ng-container>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {ApiAccount, ConsoleService, UnlinkDeviceRequest, UpdateAccountRequest, UserRole} from '../../console.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.scss']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n  public error = '';\r\n  public account: ApiAccount;\r\n  public accountForm: UntypedFormGroup;\r\n  public updating = false;\r\n  public updated = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountForm = this.formBuilder.group({\r\n      email: [''],\r\n      password: [''],\r\n      selected_device_id_index: [''],\r\n    });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n        this.f.email.setValue(this.account.email);\r\n        this.f.password.setValue('');\r\n        this.f.selected_device_id_index.setValue(0);\r\n\r\n        if (this.account.devices.length === 0) {\r\n          this.f.selected_device_id_index.disable();\r\n        }\r\n\r\n        if (!this.updateAllowed()) {\r\n          this.accountForm.disable();\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  updateAccount(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = true;\r\n\r\n    let body: UpdateAccountRequest = {email: this.f.email.value};\r\n    if (this.f.password.dirty) {\r\n      body.password = this.f.password.value;\r\n    }\r\n\r\n    this.consoleService.updateAccount('', this.account.user.id, body).subscribe(d => {\r\n      this.updated = true;\r\n      this.updating = false;\r\n      this.f.password.reset();\r\n    }, err => {\r\n      this.error = err;\r\n      this.updating = false;\r\n    });\r\n  }\r\n\r\n  unlinkDeviceId(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    const body: UnlinkDeviceRequest = {\r\n      device_id: this.account.devices[this.f.selected_device_id_index.value].id,\r\n    };\r\n    this.consoleService.unlinkDevice('', this.account.user.id, body).subscribe(() => {\r\n      this.error = '';\r\n      this.account.devices.splice(this.f.selected_device_id_index.value, 1);\r\n      this.f.selected_device_id_index.setValue(0);\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkCustomID(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkCustom('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.custom_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkFacebook(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkFacebook('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.facebook_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkFacebookInstantGames(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkFacebookInstantGame('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.facebook_instant_game_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkApple(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkApple('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.apple_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkGameCenter(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkGameCenter('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.gamecenter_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkGoogle(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkGoogle('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.google_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  unlinkSteam(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n\r\n    this.consoleService.unlinkSteam('', this.account.user.id).subscribe(() => {\r\n      this.error = '';\r\n      this.account.user.steam_id = null;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  copyDeviceIdToClipboard(val: string): void {\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = this.account.devices[val].id;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n  }\r\n\r\n  get f(): any {\r\n    return this.accountForm.controls;\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"success\" class=\"mb-3\" *ngIf=\"updated\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Account was modified successfully.</h6>\r\n</ngb-alert>\r\n\r\n<form [formGroup]=\"accountForm\" (ngSubmit)=\"updateAccount()\" class=\"add-border\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"selected_device_id_index\">Device IDs</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <button (click)=\"copyDeviceIdToClipboard(this.f.selected_device_id_index.value)\" type=\"button\" class=\"btn btn-outline-secondary\">\r\n          <img class=\"\" src=\"/static/svg/copy.svg\" alt=\"\" width=\"16\" height=\"\">\r\n          Copy\r\n        </button>\r\n        <select class=\"form-control custom-select custom-select-sm\" id=\"selected_device_id_index\" formControlName=\"selected_device_id_index\">\r\n          <option *ngFor=\"let d of account.devices; index as i\" value=\"{{i}}\" [selected]=\"i === 0\">{{d.id}}</option>\r\n        </select>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || account.devices.length === 0\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkDeviceId($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"custom_id\">Custom ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"custom_id\" [value]=\"account.custom_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.custom_id || account.custom_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkCustomID($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"facebook_id\">Facebook ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"facebook_id\" [value]=\"account.user.facebook_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.user.facebook_id || account.user.facebook_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkFacebook($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"facebook_instant_game_id\">FB Instant Game ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"facebook_instant_game_id\" [value]=\"account.user.facebook_instant_game_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.user.facebook_instant_game_id || account.user.facebook_instant_game_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkFacebookInstantGames($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"apple_id\">Apple ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"apple_id\" [value]=\"account.user.apple_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.user.apple_id || account.user.apple_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkApple($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"gamecenter_id\">GameCenter ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"gamecenter_id\" [value]=\"account.user.gamecenter_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.user.gamecenter_id || account.user.gamecenter_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkGameCenter($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"google_id\">Google ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"google_id\" [value]=\"account.user.google_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button [disabled]=\"!updateAllowed() || !account.user.google_id || account.user.google_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkGoogle($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"steam_id\">Steam ID</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input type=\"text\" id=\"steam_id\" [value]=\"account.user.steam_id\" class=\"form-control form-control-sm\" disabled>\r\n        <div class=\"input-group-append\">\r\n          <button  [disabled]=\"!updateAllowed() || !account.user.steam_id || account.user.steam_id === ''\" class=\"btn btn-sm btn-outline-danger\" (click)=\"unlinkSteam($event)\" type=\"button\">Unlink</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <hr class=\"my-4\" /> -->\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"email\">Email</label>\r\n        <br />\r\n\r\n      </div>\r\n      <input type=\"text\" id=\"email\" class=\"form-control form-control-sm\" placeholder=\"Email\" formControlName=\"email\">\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"password\">Password</label>\r\n      </div>\r\n      <input type=\"text\" id=\"password\" class=\"form-control form-control-sm\" placeholder=\"Password\" formControlName=\"password\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row remove-sides\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\"></div>\r\n      <span class=\"small\">Verification Status: {{this.account.verify_time === null ? 'Not Verified' : 'Verified'}}</span>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\"></div>\r\n  </div>\r\n\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"updating\" *ngIf=\"updateAllowed()\">Save</button>\r\n</form>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {\r\n  ApiAccount, ApiFriend, ApiFriendList, ApiUser,\r\n  ConsoleService,\r\n  UserRole,\r\n} from '../../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.scss']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n  public error = '';\r\n  public account: ApiAccount;\r\n  public friends: Array<ApiFriend> = [];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.friends.length = 0;\r\n        this.friends.push(...d[0].friends);\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteFriend(event, i: number, f: ApiFriend): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteFriend('', this.account.user.id, f.user.id).subscribe(() => {\r\n          this.error = '';\r\n          this.friends.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  viewAccount(u: ApiUser): void {\r\n    this.router.navigate(['/accounts', u.id], {relativeTo: this.route});\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class FriendsResolver implements Resolve<ApiFriendList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiFriendList> {\r\n    const userId = route.parent.paramMap.get('id');\r\n    return this.consoleService.getFriends('', userId);\r\n  }\r\n}\r\n","<script src=\"friends.component.ts\"></script>\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 320px\">User ID</th>\r\n        <th>Username</th>\r\n        <th style=\"width: 300px\">State</th>\r\n        <th style=\"width: 180px\">Update Time</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"friends.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No friends found.</td>\r\n      </tr>\r\n\r\n      <tr *ngFor=\"let f of friends; index as i\">\r\n        <td (click)=\"viewAccount(f.user);\">{{f.user.id}}</td>\r\n        <td (click)=\"viewAccount(f.user);\">{{f.user.username}}</td>\r\n        <td (click)=\"viewAccount(f.user);\">\r\n          <span *ngIf=\"f.state === 0\">Friend (0)</span>\r\n          <span *ngIf=\"f.state === 1\">Invite Sent (1)</span>\r\n          <span *ngIf=\"f.state === 2\">Invite Received (2)</span>\r\n          <span *ngIf=\"f.state === 3\">Blocked (3)</span>\r\n        </td>\r\n        <td>{{f.update_time}}</td>\r\n        <td *ngIf=\"deleteAllowed()\" class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteFriend($event, i, f);\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {\r\n  ApiAccount, ApiUser, ApiUserGroupList,\r\n  ConsoleService, UserGroupListUserGroup,\r\n  UserRole\r\n} from '../../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.scss']\r\n})\r\nexport class GroupsComponent implements OnInit {\r\n  public error = '';\r\n  public account: ApiAccount;\r\n  public groups: Array<UserGroupListUserGroup> = [];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.groups.length = 0;\r\n        this.groups.push(...d[0].user_groups);\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteGroupUser(event, i: number, f: UserGroupListUserGroup): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteGroupUser('', this.account.user.id, f.group.id).subscribe(() => {\r\n          this.error = '';\r\n          this.groups.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  viewAccount(g: UserGroupListUserGroup): void {\r\n    this.router.navigate(['/groups', g.group.id], {relativeTo: this.route});\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GroupsResolver implements Resolve<ApiUserGroupList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiUserGroupList> {\r\n    const userId = route.parent.paramMap.get('id');\r\n    return this.consoleService.getGroups('', userId);\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 320px\">Group ID</th>\r\n        <th>Name</th>\r\n        <th style=\"width: 300px\">State</th>\r\n        <th style=\"width: 180px\">Update Time</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"groups.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No group membership found.</td>\r\n      </tr>\r\n\r\n      <tr *ngFor=\"let g of groups; index as i\">\r\n        <td (click)=\"viewAccount(g)\">{{g.group.id}}</td>\r\n        <td (click)=\"viewAccount(g)\">{{g.group.name}}</td>\r\n        <td (click)=\"viewAccount(g)\">\r\n          <span *ngIf=\"g.state === 0\">Superadmin (0)</span>\r\n          <span *ngIf=\"g.state === 1\">Admin (1)</span>\r\n          <span *ngIf=\"g.state === 2\">Member (2)</span>\r\n          <span *ngIf=\"g.state === 3\">Join Request (3)</span>\r\n          <span *ngIf=\"g.state === 4\">Banned (4)</span>\r\n        </td>\r\n        <td (click)=\"viewAccount(g)\">{{g.group.update_time}}</td>\r\n        <td *ngIf=\"deleteAllowed()\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteGroupUser($event, i, g);\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiAccount, ConsoleService, UpdateAccountRequest, UserRole} from '../../console.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {JSONEditor, Mode, toTextContent} from 'vanilla-jsoneditor';\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editor') private editor: ElementRef<HTMLElement>;\r\n\r\n  private jsonEditor: JSONEditor;\r\n  public error = '';\r\n  public account: ApiAccount;\r\n  public accountForm: UntypedFormGroup;\r\n  public updating = false;\r\n  public updated = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      display_name: [''],\r\n      avatar_url: [''],\r\n      location: [''],\r\n      timezone: ['']\r\n    });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n        this.f.username.setValue(this.account.user.username);\r\n        this.f.display_name.setValue(this.account.user.display_name);\r\n        this.f.avatar_url.setValue(this.account.user.avatar_url);\r\n        this.f.location.setValue(this.account.user.location);\r\n        this.f.timezone.setValue(this.account.user.timezone);\r\n        if (!this.updateAllowed()) {\r\n          this.accountForm.disable();\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditor = new JSONEditor({\r\n      target: this.editor.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: !this.updateAllowed(),\r\n        content:{text:this.account.user.metadata},\r\n      },\r\n    });\r\n  }\r\n\r\n  updateAccount(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = true;\r\n\r\n    let metadata = '';\r\n    try {\r\n      metadata = toTextContent(this.jsonEditor.get()).text;\r\n    } catch (e) {\r\n      this.error = e;\r\n      this.updating = false;\r\n      return\r\n    }\r\n\r\n    const body: UpdateAccountRequest = {\r\n      username: this.f.username.value,\r\n      display_name: this.f.display_name.value,\r\n      avatar_url: this.f.avatar_url.value,\r\n      location: this.f.location.value,\r\n      timezone: this.f.timezone.value,\r\n      metadata: metadata,\r\n    };\r\n    this.consoleService.updateAccount('', this.account.user.id, body).subscribe(d => {\r\n      this.updated = true;\r\n      this.updating = false;\r\n    }, err => {\r\n      this.error = err;\r\n      this.updating = false;\r\n    })\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  get f(): any {\r\n    return this.accountForm.controls;\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"success\" class=\"mb-3\" *ngIf=\"updated\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Account was modified successfully.</h6>\r\n</ngb-alert>\r\n\r\n<form [formGroup]=\"accountForm\" (ngSubmit)=\"updateAccount()\" class=\"add-border\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"user_id\">User ID</label>\r\n      </div>\r\n      <input type=\"text\" id=\"user_id\" [value]=\"account.user.id\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"User ID\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"username\">Username</label>\r\n      </div>\r\n      <input type=\"text\" id=\"username\" class=\"form-control form-control-sm my-2\" placeholder=\"Username\" required formControlName=\"username\" [ngClass]=\"{'is-invalid': f.username.dirty && f.username.errors}\">\r\n      <div class=\"invalid-tooltip\" [hidden]=\"f.username.disabled || f.username.valid || f.username.pristine\">Username is required</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"display_name\">Display Name</label>\r\n      </div>\r\n      <input type=\"text\" id=\"display_name\" class=\"form-control form-control-sm my-2\" placeholder=\"Display Name\" formControlName=\"display_name\">\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"avatar_url\">Avatar URL</label>\r\n      </div>\r\n      <input type=\"text\" id=\"avatar_url\" class=\"form-control form-control-sm my-2\" placeholder=\"Avatar URL\" formControlName=\"avatar_url\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"location\">Location</label>\r\n      </div>\r\n      <input type=\"text\" id=\"location\" class=\"form-control form-control-sm my-2\" placeholder=\"Location\" formControlName=\"location\">\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"timezone\">Timezone</label>\r\n      </div>\r\n      <input type=\"text\" id=\"timezone\" class=\"form-control form-control-sm my-2\" placeholder=\"Timezone\" formControlName=\"timezone\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mb-3 add-border-single-row-bottom\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"create_time\">Create Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"create_time\" [value]=\"account.user.create_time\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Create Time\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"update_time\">Update Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"update_time\" [value]=\"account.user.update_time\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Update Time\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card p-2 mb-3 jsoneditor\" style=\"height: 400px\">\r\n    <div #editor style=\"height: 400px\"></div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"updating\" *ngIf=\"updateAllowed()\">Save</button>\r\n</form>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {ApiPurchaseList, ApiValidatedPurchase, ConsoleService, ApiStoreProvider} from '../../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpResponse} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-purchases',\r\n  templateUrl: './purchases.component.html',\r\n  styleUrls: ['./purchases.component.scss'],\r\n})\r\nexport class PurchasesComponent implements OnInit, OnChanges {\r\n  public purchases: ApiValidatedPurchase[] = [];\r\n  public purchasesRowsOpen: boolean[] = [];\r\n  public error = '';\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public userId: string;\r\n  public readonly limit = 100;\r\n\r\n  @Input('transaction_id') transactionId: string;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const paramUserId = this.route?.parent?.snapshot?.paramMap?.get('id') ?? '';\r\n    if (paramUserId) {\r\n      this.userId = paramUserId;\r\n    }\r\n    this.route.data.subscribe(data => {\r\n      this.purchases = data[0].validated_purchases;\r\n      this.nextCursor = data[0].cursor;\r\n      this.prevCursor = data[0].prev_cursor;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.transactionId.firstChange) {\r\n      if (this.transactionId) {\r\n        this.transactionId = this.transactionId.trim();\r\n        this.consoleService.getPurchase('', this.transactionId).subscribe(res => {\r\n          this.purchases = [res];\r\n        }, error => {\r\n          this.error = error;\r\n        });\r\n      } else if (this.transactionId === '') {\r\n        this.loadData('');\r\n      }\r\n    }\r\n  }\r\n\r\n  loadData(cursor: string): void {\r\n    this.error = '';\r\n    this.consoleService.listPurchases(\r\n      '',\r\n      this.userId,\r\n      this.limit,\r\n      cursor,\r\n    ).subscribe(res => {\r\n      this.purchases = res.validated_purchases;\r\n      this.purchasesRowsOpen = [];\r\n      this.nextCursor = res.cursor;\r\n      this.prevCursor = res.prev_cursor;\r\n    }, error => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  getStoreText(store: ApiStoreProvider): string {\r\n    return this.formatStoreText(ApiStoreProvider[store]);\r\n  }\r\n\r\n  getRefundText(time: string): string {\r\n    if (time === '1970-01-01T00:00:00Z') {\r\n      return '';\r\n    }\r\n    return time;\r\n  }\r\n\r\n  formatStoreText(label: string): string {\r\n    return label.split('_').map(s => s[0] + s.slice(1).toLowerCase()).join(' ');\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PurchasesResolver implements Resolve<ApiPurchaseList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiPurchaseList> {\r\n    const userId = route.parent?.paramMap?.get('id') ?? '';\r\n\r\n    return this.consoleService.listPurchases('', userId, 100, '');\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"error\">\r\n  <img src=\"/src/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error while processing request: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\"></div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n      <div class=\"btn-group page-btns\" role=\"group\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData('')\" [disabled]=\"purchases.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(prevCursor)\" [disabled]=\"prevCursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(nextCursor)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-bordered table-hover\">\r\n    <thead class=\"thead-light\">\r\n    <tr>\r\n      <th>Transaction ID</th>\r\n      <th *ngIf=\"!userId\">User ID</th>\r\n      <th>Product ID</th>\r\n      <th>Store</th>\r\n      <th style=\"width: 180px\">Purchase Time</th>\r\n      <th style=\"width: 180px\">Create Time</th>\r\n      <th style=\"width: 180px\">Refund Time</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <ng-template ngFor let-i=\"index\" let-p [ngForOf]=\"purchases\">\r\n      <tr>\r\n        <td>\r\n          <div class=\"arrow\" (click)=\"purchasesRowsOpen[i]=!purchasesRowsOpen[i];\">\r\n            <div class=\"arrow-right\" *ngIf=\"!purchasesRowsOpen[i]\"></div>\r\n            <div class=\"arrow-down\" *ngIf=\"purchasesRowsOpen[i]\"></div>\r\n          </div>\r\n          {{p.transaction_id}}\r\n        </td>\r\n        <td *ngIf=\"!userId\">{{p.user_id}}</td>\r\n        <td>{{p.product_id}}</td>\r\n        <td>{{getStoreText(p.store)}}</td>\r\n        <td>{{p.purchase_time}}</td>\r\n        <td>{{p.create_time}}</td>\r\n        <td>{{getRefundText(p.refund_time)}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"purchasesRowsOpen[i]\" class=\"open-row\">\r\n        <td colspan=\"6\">\r\n          <div class=\"p-2\">\r\n            <div><small><b>Provider Response</b></small></div>\r\n            <div>\r\n              <pre class=\"pre-wrap m-0 p-0\"><small>{{p.provider_response}}</small></pre>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <tr *ngIf=\"purchases.length === 0\"><td colspan=\"6\" class=\"text-muted\">No purchases were found.</td></tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {\r\n  ConsoleService,\r\n  ApiStoreProvider,\r\n  ApiValidatedSubscription, ApiSubscriptionList\r\n} from '../../console.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-subscriptions',\r\n  templateUrl: './subscriptions.component.html',\r\n  styleUrls: ['./subscriptions.component.scss'],\r\n})\r\nexport class SubscriptionsComponent implements OnInit, OnChanges {\r\n  public subscriptions: ApiValidatedSubscription[] = [];\r\n  public subscriptionsRowOpen: boolean[] = [];\r\n  public error = '';\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public userId: string;\r\n  public readonly limit = 100;\r\n\r\n  @Input('original_transaction_id') originalTransactionId: string;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const paramUserId = this.route?.parent?.snapshot?.paramMap?.get('id') ?? '';\r\n    if (paramUserId) {\r\n      this.userId = paramUserId;\r\n    }\r\n    this.userId = this.route.parent.snapshot.paramMap.get('id');\r\n    this.route.data.subscribe(data => {\r\n      this.subscriptions = data[0].validated_subscriptions;\r\n      this.nextCursor = data[0].cursor;\r\n      this.prevCursor = data[0].prev_cursor;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.originalTransactionId.firstChange) {\r\n      if (this.originalTransactionId) {\r\n        this.originalTransactionId = this.originalTransactionId.trim();\r\n        this.consoleService.getSubscription('', this.originalTransactionId).subscribe(res => {\r\n          this.subscriptions = [res];\r\n        }, error => {\r\n          this.error = error;\r\n        });\r\n      } else if (this.originalTransactionId === '') {\r\n        this.loadData('');\r\n      }\r\n    }\r\n  }\r\n\r\n  loadData(cursor: string): void {\r\n    this.error = '';\r\n    this.consoleService.listSubscriptions(\r\n      '',\r\n      this.userId,\r\n      this.limit,\r\n      cursor,\r\n    ).subscribe(res => {\r\n      this.subscriptions = res.validated_subscriptions;\r\n      this.subscriptionsRowOpen = [];\r\n      this.nextCursor = res.cursor;\r\n      this.prevCursor = res.prev_cursor;\r\n    }, error => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  getStoreText(store: ApiStoreProvider): string {\r\n    return this.formatStoreText(ApiStoreProvider[store]);\r\n  }\r\n\r\n  getRefundText(time: string): string {\r\n    if (time === '1970-01-01T00:00:00Z') {\r\n      return '';\r\n    }\r\n    return time;\r\n  }\r\n\r\n  formatStoreText(label: string): string {\r\n    return label.split('_').map(s => s[0] + s.slice(1).toLowerCase()).join(' ');\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SubscriptionsResolver implements Resolve<ApiSubscriptionList> {\r\n  constructor(private readonly consoleService: ConsoleService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiSubscriptionList> {\r\n    const userId = route.parent?.paramMap?.get('id') ?? '';\r\n\r\n    return this.consoleService.listSubscriptions('', userId, 100, '');\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"error\">\r\n  <img src=\"/src/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error while processing request: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters mb-3\">\r\n  <div class=\"col d-flex justify-content-between no-gutters\">\r\n    <div class=\"col-md-9\"></div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n      <div class=\"btn-group page-btns\" role=\"group\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData('')\" [disabled]=\"subscriptions.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(prevCursor)\" [disabled]=\"prevCursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(nextCursor)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-bordered table-hover\">\r\n    <thead class=\"thead-light\">\r\n    <tr>\r\n      <th>Product ID</th>\r\n      <th>Original Transaction ID</th>\r\n      <th>Store</th>\r\n      <th style=\"width: 180px\">Purchase Time</th>\r\n      <th style=\"width: 180px\">Expiry Time</th>\r\n      <th style=\"width: 180px\">Create Time</th>\r\n      <th style=\"width: 180px\">Refund Time</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <ng-template ngFor let-i=\"index\" let-p [ngForOf]=\"subscriptions\">\r\n      <tr>\r\n        <td>\r\n          <div class=\"arrow\" (click)=\"subscriptionsRowOpen[i]=!subscriptionsRowOpen[i];\">\r\n            <div class=\"arrow-right\" *ngIf=\"!subscriptionsRowOpen[i]\"></div>\r\n            <div class=\"arrow-down\" *ngIf=\"subscriptionsRowOpen[i]\"></div>\r\n          </div>\r\n          {{p.product_id}}\r\n        </td>\r\n        <td>{{p.original_transaction_id}}</td>\r\n        <td>{{getStoreText(p.store)}}</td>\r\n        <td>{{p.purchase_time}}</td>\r\n        <td>{{p.expiry_time}}</td>\r\n        <td>{{p.create_time}}</td>\r\n        <td>{{getRefundText(p.refund_time)}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"subscriptionsRowOpen[i]\" class=\"open-row\">\r\n        <td colspan=\"7\">\r\n          <div class=\"p-2\">\r\n            <div><small><b>Provider Response</b></small></div>\r\n            <div>\r\n              <pre class=\"pre-wrap m-0 p-0\"><small>{{p.provider_response}}</small></pre>\r\n            </div>\r\n            <div class=\"pt-2\"><small><b>Provider Notification</b></small></div>\r\n            <div>\r\n              <pre class=\"pre-wrap m-0 p-0\"><small>{{p.provider_notification}}</small></pre>\r\n            </div>\r\n          </div>\r\n      </tr>\r\n    </ng-template>\r\n    <tr *ngIf=\"subscriptions.length === 0\"><td colspan=\"7\" class=\"text-muted\">No subscriptions were found.</td></tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, Injectable, OnInit, ViewChild} from '@angular/core';\r\nimport {\r\n  ApiAccount,\r\n  ConsoleService,\r\n  UpdateAccountRequest,\r\n  UserRole,\r\n  WalletLedger,\r\n  WalletLedgerList,\r\n} from '../../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {JSONEditor, Mode, toTextContent} from 'vanilla-jsoneditor';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.scss']\r\n})\r\nexport class WalletComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editor') private editor: ElementRef<HTMLElement>;\r\n\r\n  private jsonEditor: JSONEditor;\r\n  public error = '';\r\n  public account: ApiAccount;\r\n  public walletLedger: Array<WalletLedger> = [];\r\n  public walletLedgerMetadataOpen: Array<boolean> = [];\r\n  public updating = false;\r\n  public updated = false;\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public readonly limit = 100;\r\n  public userID: string;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userID = this.route.parent.snapshot.paramMap.get('id');\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.walletLedger.length = 0;\r\n        this.walletLedger.push(...d[0].items);\r\n        this.walletLedgerMetadataOpen.length = this.walletLedger.length;\r\n        this.nextCursor = d[0].next_cursor;\r\n        this.prevCursor = d[0].prev_cursor;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.account = d[0].account;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  loadData(cursor: string): void {\r\n    this.consoleService.getWalletLedger(\r\n      '',\r\n      this.userID,\r\n      this.limit,\r\n      cursor,\r\n    ).subscribe(res => {\r\n      this.walletLedger = res.items;\r\n      this.walletLedgerMetadataOpen = [];\r\n      this.nextCursor = res.next_cursor;\r\n      this.prevCursor = res.prev_cursor;\r\n    }, error => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditor = new JSONEditor({\r\n      target: this.editor.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: !this.updateAllowed(),\r\n        content: {text: this.account.wallet},\r\n      },\r\n    });\r\n  }\r\n\r\n  updateWallet(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = true;\r\n\r\n    let wallet = '';\r\n    try {\r\n      wallet = toTextContent(this.jsonEditor.get()).text;\r\n    } catch (e) {\r\n      this.error = e;\r\n      this.updating = false;\r\n      return;\r\n    }\r\n\r\n    const body: UpdateAccountRequest = {wallet};\r\n    this.consoleService.updateAccount('', this.account.user.id, body).subscribe(d => {\r\n      this.updated = true;\r\n      this.updating = false;\r\n    }, err => {\r\n      this.error = err;\r\n      this.updating = false;\r\n    });\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteLedgerItem(event, i: number, w: WalletLedger): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteWalletLedger('', this.account.user.id, w.id).subscribe(() => {\r\n          this.error = '';\r\n          this.walletLedger.splice(i, 1);\r\n          this.walletLedgerMetadataOpen.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class WalletLedgerResolver implements Resolve<WalletLedgerList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<WalletLedgerList> {\r\n    const userId = route.parent.paramMap.get('id');\r\n    return this.consoleService.getWalletLedger('', userId, 100, '');\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"success\" class=\"mb-3\" *ngIf=\"updated\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Account was modified successfully.</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"card p-2 mb-3 jsoneditor\" style=\"height: 400px\">\r\n  <div #editor style=\"height: 400px\"></div>\r\n</div>\r\n\r\n<button type=\"button\" class=\"btn btn-primary\" [disabled]=\"updating\" (click)=\"updateWallet();\" *ngIf=\"updateAllowed()\">Save</button>\r\n\r\n<hr class=\"my-4\" />\r\n\r\n \r\n<div class=\"row no-gutters mb-3\">\r\n  <div class=\"col d-flex justify-content-between no-gutters\">\r\n    <div class=\"col-md-9\"></div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n      <div class=\"btn-group page-btns\" role=\"group\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData('')\" [disabled]=\"walletLedger.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(prevCursor)\" [disabled]=\"prevCursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadData(nextCursor)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 315px\">ID</th>\r\n        <th>Changeset</th>\r\n        <th style=\"width: 180px\">Update Time</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"walletLedger.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No wallet ledger items found.</td>\r\n      </tr>\r\n\r\n      <ng-template ngFor let-i=\"index\" let-w [ngForOf]=\"walletLedger\">\r\n        <tr>\r\n          <td>\r\n            <div class=\"arrow\" (click)=\"walletLedgerMetadataOpen[i]=!walletLedgerMetadataOpen[i]\">\r\n              <div class=\"arrow-right\" *ngIf=\"!walletLedgerMetadataOpen[i]\"></div>\r\n              <div class=\"arrow-down\" *ngIf=\"walletLedgerMetadataOpen[i]\"></div>\r\n            </div>\r\n\r\n            {{w.id}}\r\n          </td>\r\n          <td class=\"align-middle\"><pre class=\"m-0 p-0\">{{w.changeset}}</pre></td>\r\n          <td>{{w.update_time}}</td>\r\n          <td *ngIf=\"deleteAllowed()\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteLedgerItem($event, i, w);\">Delete</button></td>\r\n        </tr>\r\n        <tr *ngIf=\"walletLedgerMetadataOpen[i]\">\r\n          <td colspan=\"5\" class=\"align-middle\"><pre class=\"pre-wrap m-0 p-0\"><small>{{w.metadata}}</small></pre></td>\r\n        </tr>\r\n      </ng-template>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit, OnDestroy} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AccountList, ApiUser, ConsoleService, UserRole} from '../console.service';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: './accounts.component.html',\r\n  styleUrls: ['./accounts.component.scss']\r\n})\r\nexport class AccountListComponent implements OnInit, OnDestroy {\r\n  public readonly systemUserId = '00000000-0000-0000-0000-000000000000';\r\n  public error = '';\r\n  public accountsCount = 0;\r\n  public accounts: Array<ApiUser> = [];\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public searchForm: UntypedFormGroup;\r\n  public querySubject: Subject<void>;\r\n  public ongoingQuery = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.querySubject = new Subject<void>();\r\n    this.searchForm = this.formBuilder.group({\r\n      filter: [''],\r\n      filter_type: [0], // 0 for all, 1 for tombstones\r\n    });\r\n\r\n    const qp = this.route.snapshot.queryParamMap;\r\n    this.f.filter.setValue(qp.get('filter'));\r\n    this.f.filter_type.setValue(+qp.get('filter_type'));\r\n    this.nextCursor = qp.get('cursor');\r\n\r\n    if (this.nextCursor && this.nextCursor !== '') {\r\n      this.search(1);\r\n    } else if (this.f.filter.value || this.f.filter_type.value) {\r\n      this.search(0);\r\n    }\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.accounts.length = 0;\r\n        if (d) {\r\n          this.accounts.push(...d[0].users);\r\n          this.accountsCount = d[0].total_count;\r\n          this.nextCursor = d[0].next_cursor;\r\n          this.prevCursor = d[0].prev_cursor;\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySubject.next();\r\n    this.querySubject.complete();\r\n  }\r\n\r\n  search(state: number): void {\r\n    if (this.ongoingQuery) {\r\n      this.querySubject.next();\r\n    }\r\n    this.ongoingQuery = true;\r\n\r\n    let cursor = '';\r\n    switch (state) {\r\n      case -1:\r\n        cursor = this.prevCursor;\r\n        break;\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n\r\n    const tombstones = this.f.filter_type.value && this.f.filter_type.value === 1;\r\n\r\n    this.consoleService.listAccounts('', this.f.filter.value, tombstones, cursor)\r\n      .pipe(takeUntil(this.querySubject))\r\n      .subscribe(d => {\r\n      this.error = '';\r\n\r\n      this.accounts.length = 0;\r\n      this.accounts.push(...d.users);\r\n      this.accountsCount = d.total_count;\r\n      this.nextCursor = d.next_cursor;\r\n\r\n      this.router.navigate([], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          filter: this.f.filter.value,\r\n          filter_type: this.f.filter_type.value,\r\n          cursor\r\n        },\r\n        queryParamsHandling: 'merge',\r\n      });\r\n      this.ongoingQuery = false;\r\n    }, err => {\r\n      this.error = err;\r\n      this.ongoingQuery = false;\r\n    });\r\n  }\r\n\r\n  cancelQuery(): void {\r\n    this.querySubject.next();\r\n    this.ongoingQuery = false;\r\n  }\r\n\r\n  deleteAccount(event, i: number, o: ApiUser): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteAccount('', o.id, false).subscribe(() => {\r\n          this.error = '';\r\n          this.accounts.splice(i, 1);\r\n          this.accountsCount--;\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_DEVELOPER;\r\n  }\r\n\r\n  viewAccount(u: ApiUser): void {\r\n    this.router.navigate(['/accounts', u.id], {relativeTo: this.route});\r\n  }\r\n\r\n  get f(): any {\r\n    return this.searchForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AccountSearchResolver implements Resolve<AccountList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<AccountList> {\r\n    const filter = route.queryParamMap.get('filter');\r\n    const tombstones = route.queryParamMap.get('tombstones');\r\n\r\n    return this.consoleService.listAccounts('', filter, tombstones === 'true', null);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">User Accounts</h2>\r\n<h6 class=\"pb-3\">{{accountsCount}} accounts found.</h6>\r\n\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(0)\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"filter\" placeholder=\"Filter by user ID, social provider ID, device ID, or username (use '%' for prefix or suffix wildcard search)\"/>\r\n          <div class=\"input-group-append\">\r\n            <span class=\"input-group-text\" (click)=\"f.filter.setValue(systemUserId);\"><img class=\"mr-1\" src=\"/static/svg/purple-cog-1.svg\" alt=\"\" width=\"20\" height=\"\"></span>\r\n          </div>\r\n\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-primary dropdown-radius\" (click)=\"f.filter_type.setValue(0); search(0)\">Search</button>\r\n              <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n                <button type=\"button\" [disabled]=\"!f.filter.value || f.filter.value === ''\" class=\"btn btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\r\n                <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n                  <button type=\"button\" ngbDropdownItem (click)=\"f.filter_type.setValue(1); search(0)\">Tombstones</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n        <div class=\"btn-group page-btns\" role=\"group\" aria-label=\"Search\">\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(0)\" [disabled]=\"accounts.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n<!--            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(-1)\" [disabled]=\"prev_cursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>-->\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(1)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error when querying accounts: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"ongoingQuery\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Query ongoing...</h6>\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancelQuery()\">Cancel!</button>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 320px\">User ID</th>\r\n        <th>Username</th>\r\n        <th>Display Name</th>\r\n        <th style=\"width: 180px\">Last Update</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"accounts.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No users found - change the filter criteria or add new user accounts.</td>\r\n      </tr>\r\n      <tr *ngFor=\"let u of accounts; index as i;\">\r\n        <td (click)=\"viewAccount(u);\">{{u.id}}</td>\r\n        <td (click)=\"viewAccount(u);\">{{u.username}}</td>\r\n        <td (click)=\"viewAccount(u);\">{{u.display_name}}</td>\r\n        <td (click)=\"viewAccount(u);\">{{u.update_time}}</td>\r\n        <td *ngIf=\"deleteAllowed() && u.id === systemUserId\"></td>\r\n        <td *ngIf=\"deleteAllowed() && u.id !== systemUserId\" class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteAccount($event, i, u);\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, Injectable, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {ApiEndpointDescriptor, ApiEndpointList, CallApiEndpointRequest, ConsoleService} from '../console.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {JSONEditor, Mode, toJSONContent, toTextContent} from 'vanilla-jsoneditor';\r\n\r\n@Component({\r\n  templateUrl: './apiexplorer.component.html',\r\n  styleUrls: ['./apiexplorer.component.scss']\r\n})\r\nexport class ApiExplorerComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editorReq') private editorReq: ElementRef<HTMLElement>;\r\n  @ViewChild('editorVars') private editorVars: ElementRef<HTMLElement>;\r\n  @ViewChild('editorRes') private editorRes: ElementRef<HTMLElement>;\r\n\r\n  private jsonEditorReq: JSONEditor;\r\n  private jsonEditorVars: JSONEditor;\r\n  private jsonEditorRes: JSONEditor;\r\n  public error = '';\r\n  public rpcEndpoints: Array<ApiEndpointDescriptor> = [];\r\n  public endpoints: Array<ApiEndpointDescriptor> = [];\r\n  public endpointCallForm: UntypedFormGroup;\r\n  public addVars = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.endpointCallForm = this.formBuilder.group({\r\n      method: ['', Validators.required],\r\n      user_id: [''],\r\n    });\r\n\r\n    this.f.method.valueChanges.subscribe(newMethod => {\r\n      const endpoint = this.endpoints.concat(this.rpcEndpoints).find((e) => {\r\n        return e.method === newMethod ? e : null;\r\n      });\r\n      this.updateQueryParam(endpoint.method);\r\n      this.setupRequestBody(endpoint.body_template);\r\n    });\r\n\r\n    this.route.data.subscribe(data => {\r\n      const endpoints = data[0] as ApiEndpointList;\r\n      this.endpoints.length = 0;\r\n      this.endpoints.push(...endpoints.endpoints);\r\n      this.rpcEndpoints.length = 0;\r\n      this.rpcEndpoints.push(...endpoints.rpc_endpoints);\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n\r\n    const qpEndpoint = this.endpoints.concat(this.rpcEndpoints).find((e) => {\r\n      return e.method === this.route.snapshot.queryParamMap.get('endpoint') ? e : null;\r\n    });\r\n    if (qpEndpoint != null) {\r\n      this.f.method.setValue(qpEndpoint.method);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditorReq = new JSONEditor({\r\n      target: this.editorReq.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: true,\r\n      },\r\n    });\r\n    this.jsonEditorVars = new JSONEditor({\r\n      target: this.editorVars.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n      },\r\n    });\r\n    this.jsonEditorRes = new JSONEditor({\r\n      target: this.editorRes.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  public sendRequest(): void {\r\n    this.error = '';\r\n\r\n    let value = '';\r\n    try {\r\n      value = toTextContent(this.jsonEditorReq.get()).text;\r\n    } catch (e) {\r\n      this.error = e;\r\n      return;\r\n    }\r\n\r\n    let vars = {};\r\n    try {\r\n      const textVars = toTextContent(this.jsonEditorVars.get()).text;\r\n      if (textVars !== '') {\r\n        const varsObj = JSON.parse(textVars);\r\n        Object.keys(varsObj).forEach((k) => {\r\n          if (typeof k !== 'string')  {\r\n            throw new Error(`Invalid session variables: ${k} must be a string`);\r\n          }\r\n          if (typeof varsObj[k] !== 'string') {\r\n            throw new Error(`Invalid session variables: ${varsObj[k]} must be a string`);\r\n          }\r\n        });\r\n        vars = varsObj;\r\n      }\r\n    } catch (e) {\r\n      this.error = e;\r\n      return;\r\n    }\r\n\r\n    const req: CallApiEndpointRequest = {\r\n      user_id: this.f.user_id.value,\r\n      body: value,\r\n      session_vars: vars as Map<string, string>,\r\n    };\r\n\r\n    let endpointCall = null;\r\n    if (this.isRpcEndpoint(this.f.method.value)) {\r\n      endpointCall = this.consoleService.callRpcEndpoint('', this.f.method.value, req);\r\n    } else {\r\n      endpointCall = this.consoleService.callApiEndpoint('', this.f.method.value, req);\r\n    }\r\n    endpointCall.subscribe(resp => {\r\n      if (resp.error_message && resp.error_message !== '') {\r\n        this.jsonEditorRes.set({json: resp.error_message});\r\n      } else {\r\n        value = '';\r\n        try {\r\n          if (resp.body === '') {\r\n            value = resp.body;\r\n          } else {\r\n            value = JSON.stringify(JSON.parse(resp.body), null, 2);\r\n          }\r\n        } catch (e) {\r\n          this.error = e;\r\n          return;\r\n        }\r\n        this.jsonEditorRes.set({text: value});\r\n      }\r\n    }, error => {\r\n      this.jsonEditorRes.set({text: ''});\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  isRpcEndpoint(method: string): boolean {\r\n    return this.rpcEndpoints.find((e) => {\r\n      return e.method === method ? e : null;\r\n    }) != null;\r\n  }\r\n\r\n  setupRequestBody(body): void {\r\n    if (this.jsonEditorReq == null) {\r\n      // not initialised yet\r\n      return;\r\n    }\r\n\r\n    if (!body || body === '') {\r\n      this.jsonEditorReq.set({text: ''});\r\n      this.jsonEditorReq.updateProps({\r\n        readOnly: !this.isRpcEndpoint(this.f.method.value)\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const value = JSON.stringify(JSON.parse(body), null, 2);\r\n      this.jsonEditorReq.set({text: value});\r\n      this.jsonEditorReq.updateProps({readOnly: false});\r\n    } catch (e) {\r\n      this.error = e;\r\n      return;\r\n    }\r\n  }\r\n\r\n  updateQueryParam(endpoint): void {\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: {\r\n        endpoint,\r\n      },\r\n      queryParamsHandling: 'merge',\r\n    });\r\n  }\r\n\r\n  addSessionVars(): void {\r\n    this.addVars = true;\r\n    this.jsonEditorVars.set({\r\n      json: {\r\n        '<key1>': '<value1>',\r\n        '<key2>': '<value2>',\r\n      }\r\n    });\r\n  }\r\n\r\n  get f(): any {\r\n    return this.endpointCallForm.controls;\r\n  }\r\n}\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApiExplorerEndpointsResolver implements Resolve<ApiEndpointList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiEndpointList> {\r\n    return this.consoleService.listApiEndpoints('');\r\n  }\r\n}\r\n","<h2 class=\"pb-4\">API Explorer</h2>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error invoking RPC call: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters mb-3\">\r\n  <div class=\"col d-flex justify-content-between no-gutters\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"endpointCallForm\" (ngSubmit)=\"sendRequest()\">\r\n        <div class=\"input-group\">\r\n          <div class=\"input-group-prepend\">\r\n            <select class=\"form-control custom-select dropdown-radius\" id=\"method\" formControlName=\"method\">\r\n              <option [value]=\"''\" disabled>Select Endpoint</option>\r\n              <option *ngFor=\"let e of rpcEndpoints; index as i\" value=\"{{e.method}}\">{{e.method}}</option>\r\n              <option disabled class=\"text-muted\">----</option>\r\n              <option *ngFor=\"let e of endpoints; index as i\" value=\"{{e.method}}\">{{e.method}}</option>\r\n            </select>\r\n          </div>\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"user_id\" placeholder=\"set user ID as request context\"/>\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"f.method.invalid\">Send Request</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<button class=\"btn btn-primary\" type=\"button\" (click)=\"addSessionVars();\" *ngIf=\"!addVars\">Add Session Variables</button>\r\n<div [hidden]=\"!addVars\" class=\"row mb-3\">\r\n  <div class=\"col-md-6 py-3\">\r\n    <h5>Session Vars</h5>\r\n    <div class=\"text-muted pt-2\">Add variables as object of string to string key-value pairs.</div>\r\n    <div class=\"card p-2 mb-3 jsoneditor\">\r\n      <div #editorVars style=\"height: 200px\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row mb-3\">\r\n  <div class=\"col-lg-6 py-3\">\r\n    <h5>Request Body</h5>\r\n    <div class=\"card p-2 mb-3 jsoneditor\">\r\n      <div #editorReq style=\"height: 500px\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-6 py-3\">\r\n    <h5>Response</h5>\r\n    <div class=\"card p-2 mb-3 jsoneditor\">\r\n      <div #editorRes style=\"height: 500px\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {LoginComponent, LoginGuard} from './login/login.component';\r\nimport {AuthenticationGuard} from './authentication.guard';\r\nimport {BaseComponent, PageviewGuard} from './base/base.component';\r\nimport {GraphInitNodesResolver, StatusComponent} from './status/status.component';\r\nimport {ConfigComponent, ConfigResolver} from './config/config.component';\r\nimport {UsersComponent, UsersResolver} from './users/users.component';\r\nimport {RuntimeComponent, RuntimeResolver} from './runtime/runtime.component';\r\nimport {StorageCollectionResolver, StorageListComponent, StorageSearchResolver} from './storage/storage.component';\r\nimport {StorageObjectComponent, StorageObjectResolver} from './storage-object/storage-object.component';\r\nimport {LeaderboardsComponent, LeaderboardListResolver} from './leaderboards/leaderboards.component';\r\nimport {AccountListComponent, AccountSearchResolver} from './accounts/accounts.component';\r\nimport {AccountComponent, AccountResolver} from './account/account.component';\r\nimport {ProfileComponent} from './account/profile/profile.component';\r\nimport {AuthenticationComponent} from './account/authentication/authentication.component';\r\nimport {WalletComponent, WalletLedgerResolver} from './account/wallet/wallet.component';\r\nimport {FriendsComponent, FriendsResolver} from './account/friends/friends.component';\r\nimport {GroupsComponent, GroupsResolver} from './account/groups/groups.component';\r\nimport {GroupDetailsComponent} from './group/details/groupDetailsComponent';\r\nimport {GroupMembersComponent, GroupMembersResolver} from './group/members/groupMembers.component';\r\nimport {MatchesComponent, MatchesResolver, NodesResolver} from './matches/matches.component';\r\nimport {GroupListComponent, GroupSearchResolver} from './groups/groups.component';\r\nimport {GroupComponent, GroupResolver} from './group/group.component';\r\nimport {LeaderboardComponent, LeaderboardResolver} from './leaderboard/leaderboard.component';\r\nimport {LeaderboardDetailsComponent} from './leaderboard/details/details.component';\r\nimport {LeaderboardRecordsComponent, LeaderboardRecordsResolver} from './leaderboard/records/records.component';\r\nimport {ApiExplorerComponent, ApiExplorerEndpointsResolver} from './apiexplorer/apiexplorer.component';\r\nimport {PurchasesComponent, PurchasesResolver} from './account/purchases/purchases.component';\r\nimport {ChatListComponent, ChatSearchResolver} from './channels/chat-list.component';\r\nimport {SubscriptionsComponent, SubscriptionsResolver} from './account/subscriptions/subscriptions.component';\r\nimport {PurchasesListComponent} from './purchases/purchases-list.component';\r\nimport {SubscriptionsListComponent} from './subscriptions/subscriptions-list.component';\r\nimport {MfaSetupComponent} from './mfa-setup/mfa-setup.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BaseComponent,\r\n    canActivate: [AuthenticationGuard],\r\n    canActivateChild: [PageviewGuard],\r\n    children: [\r\n      {path: '', redirectTo: 'status', pathMatch: 'full'},\r\n      {path: 'status', component: StatusComponent, resolve: [GraphInitNodesResolver]},\r\n      {path: 'config', component: ConfigComponent, resolve: [ConfigResolver]},\r\n      {path: 'users', component: UsersComponent, resolve: [UsersResolver]},\r\n      {path: 'modules', component: RuntimeComponent, resolve: [RuntimeResolver]},\r\n      {path: 'storage', component: StorageListComponent, resolve: [StorageCollectionResolver, StorageSearchResolver], pathMatch: 'full'},\r\n      {path: 'storage/:collection/:key/:user_id', component: StorageObjectComponent, resolve: [StorageObjectResolver], pathMatch: 'full'},\r\n      {path: 'leaderboards', component: LeaderboardsComponent, resolve: [LeaderboardListResolver]},\r\n      {path: 'leaderboards/:id', component: LeaderboardComponent, resolve: [LeaderboardResolver],\r\n        children: [\r\n          {path: '', redirectTo: 'details', pathMatch: 'full'},\r\n          {path: 'details', component: LeaderboardDetailsComponent, resolve: []},\r\n          {path: 'records', component: LeaderboardRecordsComponent, resolve: [LeaderboardRecordsResolver]},\r\n        ]\r\n      },\r\n      {path: 'matches', component: MatchesComponent, resolve: [MatchesResolver, NodesResolver]},\r\n      {path: 'groups', component: GroupListComponent, resolve: [GroupSearchResolver]},\r\n      {\r\n        path: 'groups/:id', component: GroupComponent, resolve: [GroupResolver],\r\n        children: [\r\n          {path: '', redirectTo: 'details', pathMatch: 'full'},\r\n          {path: 'details', component: GroupDetailsComponent, resolve: []},\r\n          {path: 'members', component: GroupMembersComponent, resolve: [GroupMembersResolver], runGuardsAndResolvers: 'always'},\r\n        ]\r\n      },\r\n      {path: 'accounts', component: AccountListComponent, resolve: [AccountSearchResolver]},\r\n      {\r\n        path: 'accounts/:id', component: AccountComponent, resolve: [AccountResolver],\r\n        children: [\r\n          {path: '', redirectTo: 'profile', pathMatch: 'full'},\r\n          {path: 'profile', component: ProfileComponent, resolve: []},\r\n          {path: 'authentication', component: AuthenticationComponent, resolve: []},\r\n          {path: 'wallet', component: WalletComponent, resolve: [WalletLedgerResolver]},\r\n          {path: 'friends', component: FriendsComponent, resolve: [FriendsResolver]},\r\n          {path: 'groups', component: GroupsComponent, resolve: [GroupsResolver]},\r\n          {path: 'purchases', component: PurchasesComponent, resolve: [PurchasesResolver]},\r\n          {path: 'subscriptions', component: SubscriptionsComponent, resolve: [SubscriptionsResolver]}\r\n        ]\r\n      },\r\n      {path: 'apiexplorer', component: ApiExplorerComponent, resolve: [ApiExplorerEndpointsResolver]},\r\n      {path: 'chat', component: ChatListComponent, resolve: [ChatSearchResolver]},\r\n      {path: 'purchases', component: PurchasesListComponent, resolve: [PurchasesResolver]},\r\n      {path: 'subscriptions', component: SubscriptionsListComponent, resolve: [SubscriptionsResolver]},\r\n      {path: 'settings/mfa', component: MfaSetupComponent, resolve: []}\r\n    ]},\r\n  {\r\n    path: 'login', component: LoginComponent, canActivate: [LoginGuard],\r\n    children: [\r\n      {path: 'mfa', component: MfaSetupComponent, resolve: []}\r\n    ]\r\n  },\r\n\r\n  // Fallback redirect.\r\n  {path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {useHash: true}),\r\n    // RouterModule.forRoot(routes, { useHash: true, enableTracing: true }), // TODO debugging purposes only\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {}\r\n\r\n","<router-outlet></router-outlet>\r\n\r\n\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {WINDOW_PROVIDERS} from './window.provider';\r\nimport {environment} from '../environments/environment';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {Globals} from './globals';\r\nimport {SegmentModule} from 'ngx-segment-analytics';\r\nimport {SessionInterceptor} from './session.interceptor';\r\nimport {AuthenticationErrorInterceptor} from './authentication-error.interceptor';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {BaseComponent} from './base/base.component';\r\nimport {SortNumbersPipe, StatusComponent} from './status/status.component';\r\nimport {ConfigComponent} from './config/config.component';\r\nimport {ConfigParams} from './console.service';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {NgxFileDropModule} from 'ngx-file-drop';\r\nimport {RuntimeComponent} from './runtime/runtime.component';\r\nimport {StorageListComponent} from './storage/storage.component';\r\nimport {StorageObjectComponent} from './storage-object/storage-object.component';\r\nimport {AccountListComponent} from './accounts/accounts.component';\r\nimport {AccountComponent} from './account/account.component';\r\nimport {GroupListComponent} from './groups/groups.component';\r\nimport {GroupComponent} from './group/group.component';\r\nimport {ProfileComponent} from './account/profile/profile.component';\r\nimport {GroupDetailsComponent} from './group/details/groupDetailsComponent';\r\nimport {AuthenticationComponent} from './account/authentication/authentication.component';\r\nimport {FriendsComponent} from './account/friends/friends.component';\r\nimport {WalletComponent} from './account/wallet/wallet.component';\r\nimport {GroupsComponent} from './account/groups/groups.component';\r\nimport {GroupMembersComponent} from './group/members/groupMembers.component';\r\nimport {ChatListComponent} from './channels/chat-list.component';\r\nimport {PurchasesListComponent} from './purchases/purchases-list.component';\r\nimport {MatchesComponent} from './matches/matches.component';\r\nimport {LeaderboardsComponent} from './leaderboards/leaderboards.component';\r\nimport {LeaderboardComponent} from './leaderboard/leaderboard.component';\r\nimport {LeaderboardDetailsComponent} from './leaderboard/details/details.component';\r\nimport {LeaderboardRecordsComponent} from './leaderboard/records/records.component';\r\nimport {ApiExplorerComponent} from './apiexplorer/apiexplorer.component';\r\nimport {PurchasesComponent} from './account/purchases/purchases.component';\r\nimport {SubscriptionsComponent} from './account/subscriptions/subscriptions.component';\r\nimport {DeleteConfirmDialogComponent} from './shared/delete-confirm-dialog/delete-confirm-dialog.component';\r\nimport {SubscriptionsListComponent} from './subscriptions/subscriptions-list.component';\r\nimport {MfaSetupComponent} from './mfa-setup/mfa-setup.component';\r\nimport {QRCodeModule} from \"angularx-qrcode\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SortNumbersPipe,\r\n    BaseComponent,\r\n    LoginComponent,\r\n    StatusComponent,\r\n    ConfigComponent,\r\n    UsersComponent,\r\n    RuntimeComponent,\r\n    StorageListComponent,\r\n    StorageObjectComponent,\r\n    AccountListComponent,\r\n    AccountComponent,\r\n    ProfileComponent,\r\n    AuthenticationComponent,\r\n    WalletComponent,\r\n    FriendsComponent,\r\n    GroupsComponent,\r\n    GroupComponent,\r\n    GroupDetailsComponent,\r\n    GroupMembersComponent,\r\n    MatchesComponent,\r\n    LeaderboardsComponent,\r\n    LeaderboardComponent,\r\n    LeaderboardDetailsComponent,\r\n    LeaderboardRecordsComponent,\r\n    ApiExplorerComponent,\r\n    PurchasesComponent,\r\n    SubscriptionsComponent,\r\n    GroupListComponent,\r\n    ChatListComponent,\r\n    DeleteConfirmDialogComponent,\r\n    PurchasesListComponent,\r\n    SubscriptionsListComponent,\r\n    MfaSetupComponent\r\n  ],\r\n  imports: [\r\n    NgxFileDropModule,\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgxChartsModule,\r\n    SegmentModule.forRoot({ apiKey: environment.segment_write_key, debug: !environment.production, loadOnInitialization: !environment.nt }),\r\n    NoopAnimationsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    QRCodeModule,\r\n  ],\r\n  providers: [\r\n    WINDOW_PROVIDERS,\r\n    Globals,\r\n    {provide: ConfigParams, useValue: {host: environment.production ? document.location.origin : environment.apiBaseUrl, timeout: 15000}},\r\n    {provide: HTTP_INTERCEPTORS, useClass: SessionInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthenticationErrorInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private readonly authenticationService: AuthenticationService,\r\n    private readonly router: Router\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(catchError(err => {\r\n      if (err.status === 401) {\r\n        this.authenticationService.logout().subscribe({\r\n          next: () => {\r\n            const stateUrl = this.router.routerState.snapshot.url;\r\n            const _ = this.router.navigate(['/login'], {queryParams: {next: stateUrl}});\r\n          }\r\n        });\r\n      } else if (err.status === 403) {\r\n        // Required for mfa login.\r\n        return throwError(err);\r\n      } else if (err.status >= 500) {\r\n        console.log(`${err.status}: + ${err.error.message || err.statusText}`);\r\n      }\r\n      const error = err.error.message || err.statusText;\r\n      return throwError(error);\r\n    }));\r\n  }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n  CanActivateChild,\r\n  ActivatedRoute\r\n} from '@angular/router';\r\nimport {AuthenticationService} from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationGuard implements CanActivate, CanActivateChild {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const session = this.authService.session;\r\n    if (!session) {\r\n      const _ = this.router.navigate(['/login'], {queryParams: {next: state.url}});\r\n      return false;\r\n    }\r\n\r\n    if (session && this.authService.mfaRequired) {\r\n      // If mfa claim is true the user is mandated to set it up before proceeding.\r\n      const _ = this.router.navigate(['/login/mfa'], {queryParams: {next: state.url}});\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {BehaviorSubject, EMPTY, Observable, of, throwError} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {\r\n  AuthenticateMFASetupRequest, AuthenticateMFASetupResponse,\r\n  AuthenticateRequest,\r\n  ConfigParams,\r\n  ConsoleService,\r\n  ConsoleSession,\r\n  UserRole\r\n} from './console.service';\r\nimport {WINDOW} from './window.provider';\r\nimport {SegmentService} from 'ngx-segment-analytics';\r\nimport {environment} from '../environments/environment';\r\n\r\nconst SESSION_LOCALSTORAGE_KEY = 'currentSession';\r\n\r\ninterface SessionClaims {\r\n  id: string;\r\n  usn: string;\r\n  ema: string;\r\n  rol: number;\r\n  exp: number;\r\n  cki: string;\r\n}\r\n\r\nexport interface MFAClaims {\r\n  user_id: string;\r\n  user_email: string;\r\n  exp: number;\r\n  crt: number;\r\n  secret: string;\r\n  mfa_url: string;\r\n  mfa_required: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private readonly currentSessionSubject: BehaviorSubject<ConsoleSession>;\r\n  readonly currentSession: Observable<ConsoleSession>;\r\n\r\n  constructor(\r\n    @Inject(WINDOW) private window: Window,\r\n    private segment: SegmentService,\r\n    private readonly http: HttpClient,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly config: ConfigParams,\r\n  ) {\r\n    const restoredSession: ConsoleSession = JSON.parse(localStorage.getItem(SESSION_LOCALSTORAGE_KEY) as string);\r\n    if (restoredSession && !environment.nt) {\r\n      this.segmentIdentify(restoredSession);\r\n    }\r\n    this.currentSessionSubject = new BehaviorSubject<ConsoleSession>(restoredSession);\r\n    this.currentSession = this.currentSessionSubject.asObservable();\r\n  }\r\n\r\n  public get session(): ConsoleSession {\r\n    return this.currentSessionSubject.getValue();\r\n  }\r\n\r\n  public get username(): string {\r\n    const claims = this.claims;\r\n    return claims.usn;\r\n  }\r\n\r\n  public get sessionRole(): UserRole {\r\n    const claims = this.claims;\r\n    const role = claims.rol as number;\r\n    switch (role) {\r\n      case 1:\r\n        return UserRole.USER_ROLE_ADMIN;\r\n      case 2:\r\n        return UserRole.USER_ROLE_DEVELOPER;\r\n      case 3:\r\n        return UserRole.USER_ROLE_MAINTAINER;\r\n      case 4:\r\n        return UserRole.USER_ROLE_READONLY;\r\n      default:\r\n        return UserRole.USER_ROLE_UNKNOWN;\r\n    }\r\n  }\r\n\r\n  public get claims(): SessionClaims {\r\n    const token = this.currentSessionSubject.getValue().token;\r\n    return this.decodeJWT(token);\r\n  }\r\n\r\n  public get mfa(): MFAClaims | null {\r\n    const mfaToken = this.currentSessionSubject.getValue().mfa_code;\r\n    if (!mfaToken) {\r\n      return null;\r\n    }\r\n    return this.decodeJWT(mfaToken);\r\n  }\r\n\r\n  public get mfaRequired(): boolean {\r\n    return this?.mfa?.mfa_required || false;\r\n  }\r\n\r\n  // Use custom login function implementation instead of ConsoleService to allow exposing the http response.\r\n  login(username: string, password: string, code: string): Observable<HttpResponse<ConsoleSession>> {\r\n    const req: AuthenticateRequest = {\r\n      username,\r\n      password,\r\n      mfa: code,\r\n    };\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<ConsoleSession>(this.config.host + '/v2/console/authenticate', req, { observe: 'response' }).pipe(tap(response => {\r\n      localStorage.setItem(SESSION_LOCALSTORAGE_KEY, JSON.stringify(response.body));\r\n      this.currentSessionSubject.next(response.body);\r\n\r\n      if (!environment.nt) {\r\n        this.segmentIdentify(response.body);\r\n      }\r\n    }));\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    if (!this.currentSessionSubject.getValue()) {\r\n      return EMPTY;\r\n    }\r\n    return this.consoleService.authenticateLogout('', {\r\n      token: this.currentSessionSubject.getValue()?.token,\r\n    }).pipe(tap(() => {\r\n      localStorage.removeItem(SESSION_LOCALSTORAGE_KEY);\r\n      this.currentSessionSubject.next(null);\r\n    }));\r\n  }\r\n\r\n  decodeJWT(token: string): any {\r\n    const { 1: base64Raw } = token.split('.');\r\n    const base64 = base64Raw.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(window.atob(base64).split('').map((c) => {\r\n      return `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`;\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n  }\r\n\r\n  mfaSet(code: string): Observable<AuthenticateMFASetupResponse> {\r\n    const payload: AuthenticateMFASetupRequest = {\r\n      mfa: this.session.mfa_code,\r\n      code,\r\n    };\r\n    return this.consoleService.authenticateMFASetup('', payload).pipe(tap(() => {\r\n      // MFA is set so no need to require it anymore.\r\n      this.session.mfa_code = null;\r\n      localStorage.setItem(SESSION_LOCALSTORAGE_KEY, JSON.stringify(this.session));\r\n      this.currentSessionSubject.next(this.session);\r\n    }));\r\n  }\r\n\r\n  segmentIdentify(session): void {\r\n    const token = session.token;\r\n    const claims = this.decodeJWT(token);\r\n    // null user ID to ensure we use Anonymous IDs\r\n    const _ = this.segment.identify(null, {\r\n      username: claims.usn,\r\n      email: claims.ema,\r\n      cookie: claims.cki,\r\n    });\r\n  }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnDestroy, OnInit} from '@angular/core';\r\nimport {\r\n  Router,\r\n  ActivatedRoute,\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  ActivatedRouteSnapshot, RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport {bufferTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {Subscription} from 'rxjs';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {NgbNavChangeEvent} from '@ng-bootstrap/ng-bootstrap';\r\nimport {SegmentService} from 'ngx-segment-analytics';\r\nimport {ConsoleService, UserRole} from '../console.service';\r\nimport {Globals} from '../globals';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './base.component.html',\r\n  styleUrls: ['./base.component.scss'],\r\n})\r\nexport class BaseComponent implements OnInit, OnDestroy {\r\n  protected readonly UserRole = UserRole;\r\n  private routerSub: Subscription;\r\n  private segmentRouterSub: Subscription;\r\n  public loading = true;\r\n  public error = '';\r\n\r\n  public routes = [\r\n    {navItem: 'status', routerLink: ['/status'], label: 'Status', minRole: UserRole.USER_ROLE_READONLY, icon: 'status'},\r\n    {navItem: 'users', routerLink: ['/users'], label: 'User Management', minRole: UserRole.USER_ROLE_ADMIN, icon: 'user-management'},\r\n    {navItem: 'config', routerLink: ['/config'], label: 'Configuration', minRole: UserRole.USER_ROLE_DEVELOPER, icon: 'configuration'},\r\n    {navItem: 'modules', routerLink: ['/modules'], label: 'Runtime Modules', minRole: UserRole.USER_ROLE_DEVELOPER, separator: true, icon: 'runtime-modules'},\r\n    {navItem: 'accounts', routerLink: ['/accounts'], label: 'Accounts', minRole: UserRole.USER_ROLE_READONLY, icon: 'accounts'},\r\n    {navItem: 'groups', routerLink: ['/groups'], label: 'Groups', minRole: UserRole.USER_ROLE_READONLY, icon: 'groups'},\r\n    {navItem: 'storage', routerLink: ['/storage'], label: 'Storage', minRole: UserRole.USER_ROLE_READONLY, icon: 'storage'},\r\n    {navItem: 'leaderboards', routerLink: ['/leaderboards'], label: 'Leaderboards', minRole: UserRole.USER_ROLE_READONLY, icon: 'leaderboard'},\r\n    {navItem: 'chat', routerLink: ['/chat'], label: 'Chat Messages', minRole: UserRole.USER_ROLE_READONLY, icon: 'chat'},\r\n    {navItem: 'purchases', routerLink: ['/purchases'], label: 'Purchases', minRole: UserRole.USER_ROLE_READONLY, icon: 'purchases'},\r\n    {navItem: 'subscriptions', routerLink: ['/subscriptions'], label: 'Subscriptions', minRole: UserRole.USER_ROLE_READONLY, icon: 'subscriptions'},\r\n    {navItem: 'matches', routerLink: ['/matches'], label: 'Matches', minRole: UserRole.USER_ROLE_READONLY, icon: 'running-matches'},\r\n    {navItem: 'apiexplorer', routerLink: ['/apiexplorer'], label: 'API Explorer', minRole: UserRole.USER_ROLE_DEVELOPER, icon: 'api-explorer'},\r\n  ];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private segment: SegmentService,\r\n    private readonly authService: AuthenticationService,\r\n  ) {\r\n    this.loading = false;\r\n    // Buffer router events every 2 seconds, to reduce loading screen jitter\r\n    this.routerSub = this.router.events.pipe(bufferTime(2000)).subscribe(events => {\r\n      if (events.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const event = events[events.length - 1];\r\n      if (event instanceof NavigationStart) {\r\n        this.loading = true;\r\n      }\r\n      if (event instanceof NavigationEnd) {\r\n        this.loading = false;\r\n      }\r\n      // Set loading state to false in both of the below events to hide the spinner in case a request fails\r\n      if (event instanceof NavigationCancel) {\r\n        this.loading = false;\r\n      }\r\n      if (event instanceof NavigationError) {\r\n        this.loading = false;\r\n        this.error = event.error;\r\n      }\r\n    });\r\n\r\n    this.segmentRouterSub = router.events.pipe(distinctUntilChanged((previous: any, current: any) => {\r\n      if (current instanceof NavigationEnd) {\r\n        return previous.url === current.url;\r\n      }\r\n      return true;\r\n    })).subscribe((nav: NavigationEnd) => {\r\n      if (nav && !environment.nt) {\r\n        segment.page(nav.url);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.error = data.error ? data.error : '';\r\n    });\r\n  }\r\n\r\n  getSessionRole(): UserRole {\r\n    return this.authService.sessionRole;\r\n  }\r\n\r\n  getUsername(): string {\r\n    return this.authService.username;\r\n  }\r\n\r\n  isMfaEnabled(): boolean {\r\n    return !this.authService.session?.mfa_code;\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/login']);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.segmentRouterSub.unsubscribe();\r\n    this.routerSub.unsubscribe();\r\n  }\r\n\r\n  onSidebarNavChange(changeEvent: NgbNavChangeEvent): void {}\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class PageviewGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly authService: AuthenticationService, private readonly router: Router, private readonly globals: Globals) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const role = this.globals.restrictedPages.get(next.url[0].path);\r\n    if (role !== null && role < this.authService.sessionRole) {\r\n      // if the page has restriction, and role doesn't match it, navigate to home\r\n      const _ = this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n\r\n    <!-- sidebar -->\r\n    <nav #sidenav=\"ngbNav\" ngbNav (navChange)=\"onSidebarNavChange($event)\"\r\n         class=\"col-md-2 d-none d-md-block sidebar position-fixed px-0\">\r\n      <div class=\"flex-column text-uppercase\">\r\n        <ng-container [ngbNavItem]=\"'logo'\">\r\n          <a [routerLink]=\"['/']\">\r\n            <img class=\"logo-full mx-3 mt-3 mb-1\" src=\"/static/svg/logo.svg\" alt=\"\" width=\"175\" height=\"\">\r\n            <img class=\"logo-icon mx-3 mt-3 mb-1\" src=\"/static/svg/logo-icon.svg\" alt=\"\" width=\"32\" height=\"\">\r\n          </a>\r\n        </ng-container>\r\n        <hr>\r\n\r\n        <ng-template ngFor let-r [ngForOf]=\"routes\">\r\n          <ng-container *ngIf=\"this.getSessionRole() <= r.minRole\" [ngbNavItem]=\"r.navItem\">\r\n            <a ngbNavLink routerLinkActive=\"active\" [routerLink]=\"r.routerLink\"><img class=\"link-icon mr-1\" src=\"/static/svg/{{r.icon}}.svg\" alt=\"\" width=\"24\" height=\"\"><span class=\"link-text\">{{r.label}}</span></a>\r\n          </ng-container>\r\n        </ng-template>\r\n\r\n        <hr />\r\n        <a class=\"nav-link\" href=\"https://heroiclabs.com/docs/nakama/getting-started/?utm_source=NOSS%20Secure&utm_medium=Banner&utm_campaign=NOSS%20Documentation%20Secure\" target=\"_blank\"><img class=\"link-icon mr-1\" src=\"/static/svg/docs.svg\" alt=\"\" width=\"24\" height=\"\"><span class=\"link-text\">Documentation</span></a>\r\n        <a class=\"nav-link\" href=\"https://forum.heroiclabs.com\" target=\"_blank\"><img class=\"link-icon mr-1\" src=\"/static/svg/forum.svg\" alt=\"\" width=\"24\" height=\"\"><span class=\"link-text\">Forum</span></a>\r\n\r\n        <hr />\r\n        <div class=\"logged-in-as nav-link disabled\">Logged in as: {{getUsername()}}</div>\r\n        <ng-container *ngIf=\"!isMfaEnabled()\" [ngbNavItem]=\"'mfasetup'\">\r\n          <a ngbNavLink routerLinkActive=\"active\" [routerLink]=\"['/settings/mfa']\"><img class=\"mr-1\" src=\"/static/svg/configuration.svg\" alt=\"\" width=\"24\" height=\"\"><span class=\"link-text\">MFA Setup</span></a>\r\n        </ng-container>\r\n        <ng-container [ngbNavItem]=\"'logout'\">\r\n          <a ngbNavLink routerLinkActive=\"active\" [routerLink]=\"['/login']\" (click)=\"logout()\"><img class=\"mr-1\" src=\"/static/svg/log-out.svg\" alt=\"\" width=\"24\" height=\"\"><span class=\"link-text\">Logout</span></a>\r\n        </ng-container>\r\n      </div>\r\n    </nav>\r\n    <!-- main content -->\r\n    <main role=\"main\" class=\"ml-sm-auto col-md-10 col-lg-10 main-extended px-4 py-4\">\r\n      <div *ngIf=\"error\" class=\"mx-auto\">\r\n        <h2 class=\"pb-2\"><img src=\"/static/svg/red-triangle.svg\" class=\"mr-2\" style=\"width: 1em; height: 1em\">An error has occurred!</h2>\r\n        <h6 class=\"mr-2 d-inline font-weight-bold\">{{error}}</h6>\r\n        <p>Please refresh the page to try again.</p>\r\n      </div>\r\n      <div *ngIf=\"!error && loading\" class=\"loading mx-auto\">\r\n        <img src=\"/static/spinner.svg\" class=\"p-1 loading\">\r\n      </div>\r\n      <router-outlet *ngIf=\"!error && !loading\"></router-outlet>\r\n    </main>\r\n  </div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Params, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {ApiChannelMessage, ApiChannelMessageList, ConsoleService, UserRole} from '../console.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {Observable, of} from \"rxjs\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './chat-list.component.html',\r\n  styleUrls: ['./chat-list.component.scss']\r\n})\r\nexport class ChatListComponent implements OnInit {\r\n  public readonly systemUserId = '00000000-0000-0000-0000-000000000000';\r\n  public error = '';\r\n  public messages: Array<ApiChannelMessage> = [];\r\n  public nextCursor = '';\r\n  public searchForm1: UntypedFormGroup;\r\n  public searchForm2: UntypedFormGroup;\r\n  public searchForm3: UntypedFormGroup;\r\n  public type: number;\r\n  public confirmDeleteForm: UntypedFormGroup;\r\n  public deleteError = '';\r\n  public deleteSuccess = false;\r\n  public deleting = false;\r\n  public totalDeleted = 0;\r\n  public activeFilter = '';\r\n  public readonly filters = ['Chat Room', 'Group Chat', 'Direct Chat'];\r\n  public messageStatesOpen: Array<boolean> = [];\r\n\r\n  constructor(\r\n    public readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly modalService: NgbModal,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {\r\n    this.searchForm1 = this.formBuilder.group({\r\n      label: '',\r\n    });\r\n    this.searchForm2 = this.formBuilder.group({\r\n      group_id: '',\r\n    });\r\n    this.searchForm3 = this.formBuilder.group({\r\n      user_id_one: '',\r\n      user_id_two: '',\r\n    });\r\n    this.confirmDeleteForm = this.formBuilder.group({\r\n      delete: ['', Validators.compose([Validators.required, Validators.pattern('DELETE')])],\r\n      numberValueControl: {\r\n        title: 'Choose how many days to retain:',\r\n        id: 'days'\r\n      },\r\n      days: 30\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const qp = this.route.snapshot.queryParamMap;\r\n\r\n    this.f1.label.setValue(qp.get('label'));\r\n    this.f2.group_id.setValue(qp.get('group_id'));\r\n    this.f3.user_id_one.setValue(qp.get('user_id_one'));\r\n    this.f3.user_id_two.setValue(qp.get('user_id_two'));\r\n\r\n    this.nextCursor = qp.get('cursor');\r\n    const qType: string = qp.get('type');\r\n    this.type = Number(qType);\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        if (d) {\r\n          if (d[0]) {\r\n            this.error = '';\r\n            this.messageStatesOpen = [];\r\n            this.messages.length = 0;\r\n            this.messages.push(...d[0].messages);\r\n            this.nextCursor = d[0].next_cursor;\r\n          }\r\n          if (d.error) {\r\n            this.error = d.error;\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    if (qType === null) {\r\n      this.type = 2;\r\n      this.activeFilter = this.filters[0];\r\n    } else {\r\n      if (this.type === 2 || this.type === 3 || this.type === 4) {\r\n        this.activeFilter = this.filters[this.type - 2];\r\n      } else {\r\n        this.error = 'Invalid type.';\r\n      }\r\n    }\r\n  }\r\n\r\n  search(state: number): void {\r\n    let cursor = '';\r\n    switch (state) {\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n    this.updateMessages(this.type, this.f1.label.value, this.f2.group_id.value,\r\n      this.f3.user_id_one.value, this.f3.user_id_two.value, cursor);\r\n  }\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  updateMessages(type: number, label: string, group_id: string, user_id_one: string, user_id_two: string, cursor: string): void {\r\n    switch (type) {\r\n      case (2):\r\n        this.consoleService.listChannelMessages('', type.toString(), label, null, null, null, encodeURIComponent(cursor))\r\n          .subscribe(d => this.postData(d, cursor), err => { this.error = err; });\r\n        break;\r\n      case (3):\r\n        this.consoleService.listChannelMessages('', type.toString(), null, group_id, null, null, encodeURIComponent(cursor))\r\n          .subscribe(d => this.postData(d, cursor), err => { this.error = err; });\r\n        break;\r\n      case (4):\r\n        this.consoleService.listChannelMessages('', type.toString(), null, null, user_id_one, user_id_two, encodeURIComponent(cursor))\r\n          .subscribe(d => this.postData(d, cursor), err => { this.error = err; });\r\n        break;\r\n    }\r\n  }\r\n\r\n  postData(d, cursor): void {\r\n    this.error = '';\r\n    this.messageStatesOpen = [];\r\n\r\n    this.messages.length = 0;\r\n    this.messages.push(...d.messages);\r\n    this.nextCursor = d.next_cursor;\r\n\r\n    let params: Params;\r\n    switch (this.type) {\r\n      case (2):\r\n        params = {type: this.type, label: this.f1.label.value, cursor};\r\n        break;\r\n      case (3):\r\n        params = {type: this.type, group_id: this.f2.group_id.value, cursor};\r\n        break;\r\n      case (4):\r\n        params = {\r\n          type: this.type,\r\n          user_id_one: this.f3.user_id_one.value,\r\n          user_id_two: this.f3.user_id_two.value,\r\n          cursor\r\n        };\r\n        break;\r\n    }\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: params,\r\n    });\r\n  }\r\n\r\n  deleteMessage(event, i: number, o: ApiChannelMessage): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteChannelMessages('', null, [o.message_id]).subscribe(() => {\r\n          this.error = '';\r\n          this.messageStatesOpen.splice(i, 1);\r\n          this.messages.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // Maintainers, admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteMessagesAllowed(): boolean {\r\n    // Maintainers, admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  get f1(): any {\r\n    return this.searchForm1.controls;\r\n  }\r\n  get f2(): any {\r\n    return this.searchForm2.controls;\r\n  }\r\n  get f3(): any {\r\n    return this.searchForm3.controls;\r\n  }\r\n\r\n  get f(): any {\r\n    return this.confirmDeleteForm.controls;\r\n  }\r\n\r\n  public deleteData(): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal((formValue) => {\r\n        this.deleteError = '';\r\n        this.deleting = true;\r\n        const threshold = new Date();\r\n        const retainDays = Number(formValue.days);\r\n        threshold.setDate(threshold.getDate() - retainDays);\r\n        this.consoleService.deleteChannelMessages('', threshold.toISOString(), null).subscribe(\r\n          (total) => {\r\n            this.totalDeleted = Number(total.total);\r\n            this.deleting = false;\r\n            this.deleteError = '';\r\n            this.deleteSuccess = true;\r\n            const qp = this.route.snapshot.queryParamMap;\r\n            const type = qp.get('type');\r\n            let label = qp.get('label');\r\n            if (!label) {\r\n              label = '0';\r\n            }\r\n            const groupId = qp.get('group_id');\r\n            const userIdOne = qp.get('user_id_one');\r\n            const userIdTwo = qp.get('user_id_two');\r\n            let cursor = qp.get('cursor');\r\n            if (!cursor) {\r\n              cursor = '';\r\n            }\r\n            if (type) {\r\n              this.updateMessages(Number(type), label, groupId,\r\n                userIdOne, userIdTwo, cursor);\r\n            }\r\n          }, err => {\r\n            this.deleting = false;\r\n            this.deleteError = err;\r\n          },\r\n        );\r\n      },\r\n      this.confirmDeleteForm,\r\n      'Delete messages',\r\n      'Are you sure you want to delete all messages before retain days?'\r\n    );\r\n  }\r\n\r\n  viewAccount(msg: ApiChannelMessage): void {\r\n    this.router.navigate(['/accounts', msg.sender_id], {relativeTo: this.route});\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ChatSearchResolver implements Resolve<ApiChannelMessageList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiChannelMessageList> {\r\n    const type: number = Number(route.queryParamMap.get('type'));\r\n    switch (type) {\r\n      case (2):\r\n        // tslint:disable-next-line:max-line-length\r\n        return this.consoleService.listChannelMessages('', type.toString(), route.queryParamMap.get('label'), null, null, null, encodeURIComponent(route.queryParamMap.get('cursor')))\r\n          .pipe(catchError(error => {\r\n            route.data = {...route.data, error};\r\n            return of(null);\r\n          }));\r\n      case (3):\r\n        // tslint:disable-next-line:max-line-length\r\n        return this.consoleService.listChannelMessages('', type.toString(), null, route.queryParamMap.get('group_id'), null, null, encodeURIComponent(route.queryParamMap.get('cursor')))\r\n          .pipe(catchError(error => {\r\n            route.data = {...route.data, error};\r\n            return of(null);\r\n          }));\r\n      case (4):\r\n        // tslint:disable-next-line:max-line-length\r\n        return this.consoleService.listChannelMessages('', type.toString(), null, null, route.queryParamMap.get('user_id_one'), route.queryParamMap.get('user_id_two'), encodeURIComponent(route.queryParamMap.get('cursor')))\r\n          .pipe(catchError(error => {\r\n            route.data = {...route.data, error};\r\n            return of(null);\r\n          }));\r\n      default:\r\n        return of(null);\r\n    }\r\n  }\r\n}\r\n\r\n","<h2 class=\"pb-1\">Chat Messages</h2>\r\n\r\n<div class=\"btn-group mb-1\" ngbDropdown>\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" ngbDropdownToggle>\r\n    <span *ngIf=\"!activeFilter || activeFilter === ''\">Filter by type</span>\r\n    <span *ngIf=\"activeFilter && activeFilter !== ''\">{{activeFilter}}</span>\r\n  </button>\r\n  <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n    <button *ngFor=\"let f of filters\" type=\"button\" ngbDropdownItem (click)=\"activeFilter = f;\">{{f}}</button>\r\n  </div>\r\n</div>\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [hidden]=\"activeFilter !== 'Chat Room'\" [formGroup]=\"searchForm1\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"label\" placeholder=\"Search by chat room label\"/>\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary dropdown-radius-left\" (click)=\"type=2; search(0)\">Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [hidden]=\"activeFilter !== 'Group Chat'\" [formGroup]=\"searchForm2\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"group_id\" placeholder=\"Search by group ID\"/>\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary dropdown-radius-left\" (click)=\"type=3; search(0)\">Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <form [hidden]=\"activeFilter !== 'Direct Chat'\" [formGroup]=\"searchForm3\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"user_id_one\" placeholder=\"Search by user ID 1\"/>\r\n          <div class=\"input-group-append\">\r\n          <span class=\"input-group-text\" (click)=\"f3.user_id_one.setValue(systemUserId);\">\r\n            <img class=\"mr-1\" src=\"/static/svg/purple-cog-1.svg\" alt=\"\" width=\"20\" height=\"\"></span>\r\n          </div>\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"user_id_two\" placeholder=\"Search by user ID 2\"/>\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary dropdown-radius-left\" (click)=\"type=4; search(0)\">Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n      <div class=\"btn-group page-btns\" role=\"group\" aria-label=\"Search\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(0)\" [disabled]=\"messages.length === 0\">\r\n          <img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(1)\" [disabled]=\"nextCursor === '' || nextCursor === null\"><img\r\n          src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<h6 *ngIf=\"messages.length != 0 && error === '' && type==2\">Showing results for chat room label: {{this.f1.label.value}}</h6>\r\n<h6 *ngIf=\"messages.length != 0 && error === '' && type==3\">Showing results for group ID:\r\n  <a [routerLink]=\"['/groups', this.route.snapshot.queryParamMap.get('group_id')]\" style=\"width: 100%\">{{this.f2.group_id.value}}</a>\r\n</h6>\r\n<h6 *ngIf=\"messages.length != 0 && error === '' && type==4\">Showing results for user IDs:\r\n  <a [routerLink]=\"['/accounts', this.route.snapshot.queryParamMap.get('user_id_one')]\" style=\"width: 100%\">{{this.f3.user_id_one.value}}</a>,\r\n  <a [routerLink]=\"['/accounts', this.route.snapshot.queryParamMap.get('user_id_two')]\" style=\"width: 100%\">{{this.f3.user_id_two.value}}</a>\r\n</h6>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error when querying messages: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\" style=\"table-layout: fixed;\">\r\n    <thead class=\"thead-light\">\r\n    <tr>\r\n      <th style=\"width: 60px\">Code</th>\r\n      <th style=\"width: 320px\">Sender ID</th>\r\n      <th style=\"width: 150px\">Username</th>\r\n      <th>Content</th>\r\n      <th style=\"width: 180px\">Create Time</th>\r\n      <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngIf=\"messages.length === 0\">\r\n      <td [attr.colspan]=\"deleteAllowed()?6:5\" class=\"text-muted\">No messages found.</td>\r\n    </tr>\r\n\r\n    <ng-template ngFor let-item [ngForOf]=\"messages\" let-i=\"index\">\r\n      <tr>\r\n        <td>{{item.code}}</td>\r\n        <td (click)=\"viewAccount(item)\">{{item.sender_id}}</td>\r\n        <td (click)=\"viewAccount(item)\" style=\"text-overflow:ellipsis; overflow: hidden;\">{{item.username}}</td>\r\n        <td style=\"white-space: nowrap; text-overflow:ellipsis; overflow: hidden;\">\r\n          <div class=\"arrow\" (click)=\"messageStatesOpen[i]=!messageStatesOpen[i];\">\r\n            <div class=\"arrow-right\" *ngIf=\"!messageStatesOpen[i]\"></div>\r\n            <div class=\"arrow-down\" *ngIf=\"messageStatesOpen[i]\"></div>\r\n          </div>\r\n          {{item.content}}\r\n        </td>\r\n        <td>{{item.create_time}}</td>\r\n        <td *ngIf=\"deleteAllowed() && item.sender_id === systemUserId\"></td>\r\n        <td *ngIf=\"deleteAllowed() && item.sender_id !== systemUserId\" class=\"text-center\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteMessage($event, i, item);\">Delete</button>\r\n        </td>\r\n      </tr>\r\n      <tr *ngIf=\"messageStatesOpen[i]\" class=\"open-row\">\r\n        <td [attr.colspan]=\"deleteAllowed()?6:5\">\r\n          {{item.content}}\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"deleteError\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Failed to delete data.</h6>\r\n  <p class=\"mb-0 pl-4\">{{deleteError}}</p>\r\n</ngb-alert>\r\n\r\n<ngb-alert type=\"success\" *ngIf=\"deleteSuccess\" [dismissible]=\"true\" (close)=\"deleteSuccess=false\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">{{totalDeleted}} messages {{totalDeleted > 0?\"successfully\":\"\"}} deleted.</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"d-flex justify-content-between align-items-center\" role=\"alert\">\r\n  <button *ngIf=\"deleteMessagesAllowed()\" [disabled]=\"deleting\" (click)=\"deleteData()\" type=\"button\" class=\"btn btn-danger\">Delete messages</button>\r\n</div>\r\n\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {Config, ConfigParams, ConsoleService} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {dump} from 'js-yaml';\r\nimport * as FileSaver from 'file-saver';\r\nimport {FileSystemFileEntry, NgxFileDropEntry} from 'ngx-file-drop';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {delay} from 'rxjs/operators';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './config.component.html',\r\n  styleUrls: ['./config.component.scss']\r\n})\r\nexport class ConfigComponent implements OnInit, OnDestroy {\r\n  public configError = '';\r\n  public uploadError = '';\r\n  public deleteError = '';\r\n  public jsonConfig: any;\r\n  public flatConfig: any;\r\n  public nakamaVersion: string;\r\n  public file: NgxFileDropEntry;\r\n  public uploading = false;\r\n  public uploadSuccess = false;\r\n  public deleteSuccess = false;\r\n  public deleting = false;\r\n  public confirmDeleteForm: UntypedFormGroup;\r\n\r\n  private apiConfig: ConfigParams;\r\n\r\n  constructor(\r\n    private readonly config: ConfigParams,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly httpClient: HttpClient,\r\n    private readonly modalService: NgbModal,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {\r\n    this.apiConfig = config;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n    d => {\r\n      this.nakamaVersion = d[0].server_version;\r\n      const json = JSON.parse(d[0].config);\r\n      this.jsonConfig = json;\r\n      this.flatConfig = this.flattenConfig(json);\r\n    },\r\n    err => {\r\n      this.configError = err;\r\n    });\r\n    this.confirmDeleteForm = this.formBuilder.group({\r\n      delete: ['', Validators.compose([Validators.required, Validators.pattern('DELETE')])],\r\n    });\r\n  }\r\n\r\n  private flattenConfig(data: any, currPath: string = ''): any[] {\r\n    let result: any[] = []\r\n\r\n    Object.keys(data).forEach((key) => {\r\n      const node = data[key]\r\n      const path = currPath ? `${currPath}.${key}` : key\r\n\r\n      if (!key) return\r\n\r\n      if (node && typeof node === 'object' && !Array.isArray(node)) {\r\n        result = result.concat(this.flattenConfig(node, path))\r\n      } else {\r\n        result.push({\r\n          name: path,\r\n          value: node,\r\n        })\r\n      }\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  public isEmpty(value: any): boolean {\r\n    if (value === '') {\r\n      return true;\r\n    } else if (value === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public exportYaml(): void {\r\n    const blob = new Blob([dump(this.jsonConfig)], {type: 'text/yaml;charset=utf-8'});\r\n    FileSaver.saveAs(blob, 'config.yaml');\r\n  }\r\n\r\n  public dropped(files: NgxFileDropEntry[]): void {\r\n    this.uploadError = '';\r\n    this.uploadSuccess = false;\r\n\r\n    for (const file of files) {\r\n      if (file.fileEntry.isFile) {\r\n        const tokens = file.fileEntry.name.split('.');\r\n        const validExt = ['json', 'csv'];\r\n        if (tokens.length > 1 && validExt.includes(tokens[tokens.length - 1].toLowerCase())) {\r\n          const fileEntry = file.fileEntry as FileSystemFileEntry;\r\n          fileEntry.file((f: File) => {\r\n            this.uploadFile(f);\r\n          });\r\n        } else {\r\n          this.uploadError = 'Invalid file: must have extension .json or .csv';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private uploadFile(f: File): void {\r\n    const formData = new FormData();\r\n    formData.append(f.name, f);\r\n    this.uploading = true;\r\n    const headers = {\r\n      Authorization: 'Bearer ',\r\n    };\r\n    this.httpClient.post(this.apiConfig.host + '/v2/console/storage/import', formData, {headers}).subscribe(() => {\r\n      this.uploading = false;\r\n      this.uploadSuccess = true;\r\n    }, err => {\r\n      this.uploading = false;\r\n      this.uploadError = err;\r\n    });\r\n  }\r\n\r\n  public deleteData(): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        this.deleteError = '';\r\n        this.deleting = true;\r\n        this.consoleService.deleteAllData('').pipe(delay(2000)).subscribe(\r\n          () => {\r\n            this.deleting = false;\r\n            this.deleteError = '';\r\n            this.deleteSuccess = true;\r\n          }, err => {\r\n            this.deleting = false;\r\n            this.deleteError = err;\r\n          },\r\n        );\r\n      },\r\n      this.confirmDeleteForm,\r\n      'Delete All Data' ,\r\n     'Are you sure you want to delete all the database data?'\r\n    );\r\n  }\r\n\r\n  get f(): any {\r\n    return this.confirmDeleteForm.controls;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ConfigResolver implements Resolve<Config> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Config> {\r\n    return this.consoleService.getConfig('');\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"configError\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Failed to retrieve configuration.</h6>\r\n</ngb-alert>\r\n\r\n<h2 class=\"pb-4\">Server Configuration</h2>\r\n\r\n<div class=\"d-flex justify-content-between mb-4 align-items-baseline\">\r\n    <h5><b>Server version:</b> {{nakamaVersion}}</h5>\r\n    <button class=\"btn btn-primary btn-sm\" (click)=\"exportYaml()\">Export Configuration</button>\r\n</div>\r\n\r\n<div class=\"config-table\">\r\n  <ng-container *ngFor=\"let c of flatConfig; let i = index;\">\r\n    <div *ngIf=\"i % 2 === 0\" class=\"row py-2 border\" [class.border-top-0]=\"i>0\">\r\n      <div class=\"col-lg-3\">\r\n        <b>{{c.name}}</b>\r\n        <label class=\"pl-1\" [for]=\"c.name\">\r\n          <a target=\"_blank\" href=\"https://heroiclabs.com/docs/nakama/getting-started/configuration/#{{c.name}}\" class=\"d-inline\"><img src=\"/static/svg/hint.svg\" alt=\"\" width=\"16\" height=\"16\"></a>\r\n        </label>\r\n      </div>\r\n      <div class=\"col-lg-3\">\r\n        <span class=\"text-break-all\" *ngIf=\"!isEmpty(c.value)\" [id]=\"c.name\">{{c.value}}</span>\r\n        <span *ngIf=\"isEmpty(c.value)\" [id]=\"c.name\" class=\"text-muted\">(empty)</span>\r\n      </div>\r\n      <div *ngIf=\"i < flatConfig.length-1\" class=\"col-md-3 left-line\">\r\n        <b>{{flatConfig[i+1].name}}</b>\r\n        <label class=\"pl-1\" [for]=\"flatConfig[i+1].name\">\r\n          <a target=\"_blank\" href=\"https://heroiclabs.com/docs/nakama/getting-started/configuration/#{{flatConfig[i+1].name}}\" class=\"d-inline\"><img src=\"/static/svg/hint.svg\" alt=\"\" width=\"16\" height=\"16\"></a>\r\n        </label>\r\n      </div>\r\n      <div *ngIf=\"i < flatConfig.length-1\" class=\"col-md-3\">\r\n        <span class=\"text-break-all\" *ngIf=\"!isEmpty(flatConfig[i+1].value)\" [id]=\"flatConfig[i+1].name\">{{flatConfig[i+1].value}}</span>\r\n        <span *ngIf=\"isEmpty(flatConfig[i+1].value)\" [id]=\"flatConfig[i+1].name\" class=\"text-muted\">(empty)</span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <div class=\"row py-2 border border-top-0 add-border-larger mb-5\">\r\n    <div class=\"col-lg-3\">\r\n      <b>runtime.env</b>\r\n      <label class=\"pl-1\">\r\n        <a target=\"_blank\" href=\"https://heroiclabs.com/docs/nakama/getting-started/configuration/#runtime.env\" class=\"d-inline\"><img src=\"/static/svg/hint.svg\" alt=\"\" width=\"16\" height=\"16\"></a>\r\n      </label>\r\n    </div>\r\n    <div class=\"col-lg-9\">\r\n      <div *ngIf=\"jsonConfig['runtime'] && jsonConfig['runtime']['env'] && jsonConfig['runtime']['env'].length > 0;\">\r\n        <pre class=\"mb-0 text-break-all\" *ngFor=\"let v of jsonConfig.runtime.env\">{{v}}</pre>\r\n      </div>\r\n      <div *ngIf=\"jsonConfig['runtime'] && jsonConfig['runtime']['env'] && jsonConfig['runtime']['env'].length === 0;\">\r\n        <p class=\"mb-0 text-muted\">(empty)</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<h5 class=\"section-divider d-flex mb-4\">Import storage data</h5>\r\n\r\n<p>Import storage objects from a CSV or JSON file by dragging and dropping it below.</p>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"uploadError\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Failed to upload import data.</h6>\r\n  <p class=\"mb-0 pl-4\">{{uploadError}}</p>\r\n</ngb-alert>\r\n\r\n<ngb-alert *ngIf=\"uploadSuccess\" type=\"success\" [dismissible]=\"true\" (close)=\"uploadSuccess=false\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Storage data successfully imported.</h6>\r\n</ngb-alert>\r\n\r\n<ngx-file-drop accept=\".json,.csv\" [disabled]=\"uploading\" dropZoneClassName=\"drop-zone\" contentClassName=\"drop-zone-content\" dropZoneLabel=\"Drop CSV or JSON file here\" (onFileDrop)=\"dropped($event)\">\r\n  <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"openFileSelector()\">Browse Files</button>\r\n  </ng-template>\r\n</ngx-file-drop>\r\n\r\n<h5 class=\"section-divider d-flex mb-4\">Delete all data</h5>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"deleteError\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Failed to delete data.</h6>\r\n  <p class=\"mb-0 pl-4\">{{deleteError}}</p>\r\n</ngb-alert>\r\n\r\n<ngb-alert type=\"success\" *ngIf=\"deleteSuccess\" [dismissible]=\"true\" (close)=\"deleteSuccess=false\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">All data successfully deleted.</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"alert alert-danger d-flex justify-content-between align-items-center\" role=\"alert\">\r\n  <div>\r\n    <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\">\r\n    <small class=\"pl-2\">Warning - this operation is not reversible!</small>\r\n  </div>\r\n  <button [disabled]=\"deleting\" (click)=\"deleteData()\" type=\"button\" class=\"btn btn-danger\">Delete all</button>\r\n</div>\r\n\r\n","// tslint:disable\r\n/* Code generated by openapi-gen-angular/main.go. DO NOT EDIT. */\r\n\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n/** Account information. */\r\nexport interface Account {\r\n  // The user's account details.\r\n  account?:ApiAccount\r\n  // The UNIX time when the account was disabled.\r\n  disable_time?:string\r\n}\r\n\r\n/** An export of all information stored for a user account. */\r\nexport interface AccountExport {\r\n  // The user's account details.\r\n  account?:ApiAccount\r\n  // The user's friends.\r\n  friends?:Array<ApiFriend>\r\n  // The user's groups.\r\n  groups?:Array<ApiGroup>\r\n  // The user's leaderboard records.\r\n  leaderboard_records?:Array<ApiLeaderboardRecord>\r\n  // The user's chat messages.\r\n  messages?:Array<ApiChannelMessage>\r\n  // The user's notifications.\r\n  notifications?:Array<ApiNotification>\r\n  // The user's storage.\r\n  objects?:Array<ApiStorageObject>\r\n  // The user's wallet ledger items.\r\n  wallet_ledgers?:Array<WalletLedger>\r\n}\r\n\r\n/** A list of users. */\r\nexport interface AccountList {\r\n  // Next cursor.\r\n  next_cursor?:string\r\n  // Approximate total number of users.\r\n  total_count?:number\r\n  // A list of users.\r\n  users?:Array<ApiUser>\r\n}\r\n\r\nexport interface AddGroupUsersRequest {\r\n  // Users to add/join.\r\n  ids?:string\r\n  // Whether it is a join request.\r\n  join_request?:boolean\r\n}\r\n\r\nexport interface AddUserRequest {\r\n  // Email address of the user.\r\n  email?:string\r\n  // Require MFA\r\n  mfa_required?:boolean\r\n  // Subscribe to newsletters\r\n  newsletter_subscription?:boolean\r\n  // The password of the user.\r\n  password?:string\r\n  // Role of this user;\r\n  role?:UserRole\r\n  // The username of the user.\r\n  username?:string\r\n}\r\n\r\nexport interface ApiEndpointDescriptor {\r\n  body_template?:string\r\n  method?:string\r\n}\r\n\r\nexport interface ApiEndpointList {\r\n  endpoints?:Array<ApiEndpointDescriptor>\r\n  rpc_endpoints?:Array<ApiEndpointDescriptor>\r\n}\r\n\r\n/** Log out a session and invalidate a session token. */\r\nexport interface AuthenticateLogoutRequest {\r\n  // Session token to log out.\r\n  token?:string\r\n}\r\n\r\n/** Request to change MFA. */\r\nexport interface AuthenticateMFASetupRequest {\r\n  // MFA code.\r\n  code?:string\r\n  // MFA token.\r\n  mfa?:string\r\n}\r\n\r\n/** Response to change MFA. */\r\nexport interface AuthenticateMFASetupResponse {\r\n  // An one-time code to configure the MFA mechanism\r\n  recovery_codes?:Array<string>\r\n}\r\n\r\n/** Authenticate a console user with username and password. */\r\nexport interface AuthenticateRequest {\r\n  // Multi-factor authentication code.\r\n  mfa?:string\r\n  // The password of the user.\r\n  password?:string\r\n  // The username of the user.\r\n  username?:string\r\n}\r\n\r\nexport interface CallApiEndpointRequest {\r\n  body?:string\r\n  session_vars?:Map<string, string>\r\n  user_id?:string\r\n}\r\n\r\nexport interface CallApiEndpointResponse {\r\n  body?:string\r\n  error_message?:string\r\n}\r\n\r\nexport interface CallRpcEndpointRequest {\r\n  body?:string\r\n  session_vars?:Map<string, string>\r\n  user_id?:string\r\n}\r\n\r\n/** The current server configuration and any associated warnings. */\r\nexport interface Config {\r\n  // JSON-encoded active server configuration.\r\n  config?:string\r\n  // Server version\r\n  server_version?:string\r\n  // Any warnings about the current config.\r\n  warnings?:Array<ConfigWarning>\r\n}\r\n\r\n/** A warning for a configuration field. */\r\nexport interface ConfigWarning {\r\n  // The config field this warning is for in a JSON pointer format.\r\n  field?:string\r\n  // Warning message text.\r\n  message?:string\r\n}\r\n\r\n/** A console user session. */\r\nexport interface ConsoleSession {\r\n  // MFA code required to setup the MFA mechanism.\r\n  mfa_code?:string\r\n  // A session token (JWT) for the console user.\r\n  token?:string\r\n}\r\n\r\nexport interface DeleteChannelMessagesResponse {\r\n  // Total number of messages deleted.\r\n  total?:string\r\n}\r\n\r\n/** An export of all information stored for a group. */\r\nexport interface GroupExport {\r\n  // The group details.\r\n  group?:ApiGroup\r\n  // The group's list of members.\r\n  members?:Array<GroupUserListGroupUser>\r\n}\r\n\r\n/** A list of groups. */\r\nexport interface GroupList {\r\n  // A list of groups.\r\n  groups?:Array<ApiGroup>\r\n  // Next cursor.\r\n  next_cursor?:string\r\n  // Approximate total number of groups.\r\n  total_count?:number\r\n}\r\n\r\n/** A single user-role pair. */\r\nexport interface GroupUserListGroupUser {\r\n  // Their relationship to the group.\r\n  state?:number\r\n  // User.\r\n  user?:ApiUser\r\n}\r\n\r\n/** A leaderboard. */\r\nexport interface Leaderboard {\r\n  // Authoritative.\r\n  authoritative?:boolean\r\n  // The category of the leaderboard. e.g. \"vip\" could be category 1.\r\n  category?:number\r\n  // The UNIX time when the leaderboard was created.\r\n  create_time?:string\r\n  // The description of the leaderboard. May be blank.\r\n  description?:string\r\n  // Duration of the tournament in seconds.\r\n  duration?:number\r\n  // The UNIX time when the leaderboard stops being active until next reset. A computed value.\r\n  end_active?:number\r\n  // The UNIX time when the leaderboard will be stopped.\r\n  end_time?:string\r\n  // The ID of the leaderboard.\r\n  id?:string\r\n  // Join required.\r\n  join_required?:boolean\r\n  // The maximum score updates allowed per player for the current leaderboard.\r\n  max_num_score?:number\r\n  // The maximum number of players for the leaderboard.\r\n  max_size?:number\r\n  // Additional information stored as a JSON object.\r\n  metadata?:string\r\n  // The UNIX time when the tournament is next playable. A computed value.\r\n  next_reset?:number\r\n  // The operator of the leaderboard\r\n  operator?:number\r\n  // The UNIX time when the tournament was last reset. A computed value.\r\n  prev_reset?:number\r\n  // Reset cron expression.\r\n  reset_schedule?:string\r\n  // The current number of players in the leaderboard.\r\n  size?:number\r\n  // ASC or DESC sort mode of scores in the leaderboard.\r\n  sort_order?:number\r\n  // The UNIX time when the leaderboard start being active. A computed value.\r\n  start_active?:number\r\n  // The UNIX time when the leaderboard will start.\r\n  start_time?:string\r\n  // The title for the leaderboard.\r\n  title?:string\r\n  // Tournament.\r\n  tournament?:boolean\r\n}\r\n\r\n/** A list of leaderboards. */\r\nexport interface LeaderboardList {\r\n  // A cursor, if any.\r\n  cursor?:string\r\n  // The list of leaderboards returned.\r\n  leaderboards?:Array<Leaderboard>\r\n  // Total count of leaderboards and tournaments.\r\n  total?:number\r\n}\r\n\r\nexport enum ListChannelMessagesRequestType {\r\n  UNKNOWN = 0,\r\n  ROOM = 1,\r\n  GROUP = 2,\r\n  DIRECT = 3,\r\n}\r\n\r\n/** A list of realtime matches, with their node names. */\r\nexport interface MatchList {\r\n  matches?:Array<MatchListMatch>\r\n}\r\n\r\nexport interface MatchListMatch {\r\n  // The API match\r\n  api_match?:ApiMatch\r\n  // The node name\r\n  node?:string\r\n}\r\n\r\nexport interface MatchState {\r\n  // Presence list.\r\n  presences?:Array<RealtimeUserPresence>\r\n  // State.\r\n  state?:string\r\n  // Current tick number.\r\n  tick?:string\r\n}\r\n\r\nexport interface RequireUserMfaRequest {\r\n  // Required.\r\n  required?:boolean\r\n}\r\n\r\nexport interface RuntimeInfo {\r\n  // Go loaded modules\r\n  go_modules?:Array<RuntimeInfoModuleInfo>\r\n  // Go registered RPC functions\r\n  go_rpc_functions?:Array<string>\r\n  // JavaScript loaded modules\r\n  js_modules?:Array<RuntimeInfoModuleInfo>\r\n  // JavaScript registered RPC functions\r\n  js_rpc_functions?:Array<string>\r\n  // Lua loaded modules\r\n  lua_modules?:Array<RuntimeInfoModuleInfo>\r\n  // Lua registered RPC functions\r\n  lua_rpc_functions?:Array<string>\r\n}\r\n\r\nexport interface RuntimeInfoModuleInfo {\r\n  // Module last modified date\r\n  mod_time?:string\r\n  // Module path\r\n  path?:string\r\n}\r\n\r\nexport enum StatusHealth {\r\n  STATUS_HEALTH_OK = 0,\r\n  STATUS_HEALTH_ERROR = 1,\r\n  STATUS_HEALTH_CONNECTING = 2,\r\n  STATUS_HEALTH_DISCONNECTING = 3,\r\n}\r\n\r\n/** List of nodes and their stats. */\r\nexport interface StatusList {\r\n  // List of nodes and their stats.\r\n  nodes?:Array<StatusListStatus>\r\n  // Timestamp\r\n  timestamp?:string\r\n}\r\n\r\n/** The status of a Nakama node. */\r\nexport interface StatusListStatus {\r\n  // Average input bandwidth usage.\r\n  avg_input_kbs?:number\r\n  // Average response latency in milliseconds.\r\n  avg_latency_ms?:number\r\n  // Average output bandwidth usage.\r\n  avg_output_kbs?:number\r\n  // Average number of requests per second.\r\n  avg_rate_sec?:number\r\n  // Current number of running goroutines.\r\n  goroutine_count?:number\r\n  // Health score.\r\n  health?:StatusHealth\r\n  // Current number of active authoritative matches.\r\n  match_count?:number\r\n  // Node name.\r\n  name?:string\r\n  // Currently registered live presences.\r\n  presence_count?:number\r\n  // Currently connected sessions.\r\n  session_count?:number\r\n}\r\n\r\nexport interface StorageCollectionsList {\r\n  // Available collection names in the whole of the storage\r\n  collections?:Array<string>\r\n}\r\n\r\n/** List of storage objects. */\r\nexport interface StorageList {\r\n  // Next page cursor if any\r\n  next_cursor?:string\r\n  // List of storage objects matching list/filter operation.\r\n  objects?:Array<StorageListObject>\r\n  // Approximate total number of storage objects.\r\n  total_count?:number\r\n}\r\n\r\n/** An object within the storage engine. */\r\nexport interface StorageListObject {\r\n  // The collection which stores the object.\r\n  collection?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was created.\r\n  create_time?:string\r\n  // The key of the object within the collection.\r\n  key?:string\r\n  // The read access permissions for the object.\r\n  permission_read?:number\r\n  // The write access permissions for the object.\r\n  permission_write?:number\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was last updated.\r\n  update_time?:string\r\n  // The user owner of the object.\r\n  user_id?:string\r\n  // The version hash of the object.\r\n  version?:string\r\n}\r\n\r\nexport interface UnlinkDeviceRequest {\r\n  // Device ID to unlink.\r\n  device_id?:string\r\n}\r\n\r\nexport interface UpdateAccountRequest {\r\n  // Avatar URL.\r\n  avatar_url?:string\r\n  // Custom ID.\r\n  custom_id?:string\r\n  // Device ID modifications.\r\n  device_ids?:Map<string, string>\r\n  // Display name.\r\n  display_name?:string\r\n  // Email.\r\n  email?:string\r\n  // Langtag.\r\n  lang_tag?:string\r\n  // Location.\r\n  location?:string\r\n  // Metadata.\r\n  metadata?:string\r\n  // Password.\r\n  password?:string\r\n  // Timezone.\r\n  timezone?:string\r\n  // Username.\r\n  username?:string\r\n  // Wallet.\r\n  wallet?:string\r\n}\r\n\r\nexport interface UpdateGroupRequest {\r\n  // Avatar URL.\r\n  avatar_url?:string\r\n  // Description.\r\n  description?:string\r\n  // Langtag.\r\n  lang_tag?:string\r\n  // The maximum number of members allowed.\r\n  max_count?:number\r\n  // Metadata.\r\n  metadata?:string\r\n  // Name.\r\n  name?:string\r\n  // Anyone can join open groups, otherwise only admins can accept members.\r\n  open?:boolean\r\n}\r\n\r\n/** A single group-role pair. */\r\nexport interface UserGroupListUserGroup {\r\n  // Group.\r\n  group?:ApiGroup\r\n  // The user's relationship to the group.\r\n  state?:number\r\n}\r\n\r\n/** A list of console users. */\r\nexport interface UserList {\r\n  // A list of users.\r\n  users?:Array<UserListUser>\r\n}\r\n\r\nexport interface UserListUser {\r\n  // Email of the user\r\n  email?:string\r\n  // Whether the user has MFA enabled.\r\n  mfa_enabled?:boolean\r\n  // Whether the user is required to setup MFA.\r\n  mfa_required?:boolean\r\n  // Role of the user;\r\n  role?:UserRole\r\n  // Username of the user\r\n  username?:string\r\n}\r\n\r\n/** - USER_ROLE_ADMIN: All access\r\n - USER_ROLE_DEVELOPER: Best for developers, also enables APIs and API explorer\r\n - USER_ROLE_MAINTAINER: Best for users who regularly update player information.\r\n - USER_ROLE_READONLY: Read-only role for those only need to view data */\r\nexport enum UserRole {\r\n  USER_ROLE_UNKNOWN = 0,\r\n  USER_ROLE_ADMIN = 1,\r\n  USER_ROLE_DEVELOPER = 2,\r\n  USER_ROLE_MAINTAINER = 3,\r\n  USER_ROLE_READONLY = 4,\r\n}\r\n\r\n/** An individual update to a user's wallet. */\r\nexport interface WalletLedger {\r\n  // The changeset.\r\n  changeset?:string\r\n  // The UNIX time when the wallet ledger item was created.\r\n  create_time?:string\r\n  // The identifier of this wallet change.\r\n  id?:string\r\n  // Any associated metadata.\r\n  metadata?:string\r\n  // The UNIX time when the wallet ledger item was updated.\r\n  update_time?:string\r\n  // The user ID this wallet ledger item belongs to.\r\n  user_id?:string\r\n}\r\n\r\n/** List of wallet ledger items for a particular user. */\r\nexport interface WalletLedgerList {\r\n  // A list of wallet ledger items.\r\n  items?:Array<WalletLedger>\r\n  // The cursor to send when retrieving the next older page, if any.\r\n  next_cursor?:string\r\n  // The cursor to send when retrieving the previous page newer, if any.\r\n  prev_cursor?:string\r\n}\r\n\r\nexport interface WriteStorageObjectRequest {\r\n  // Read permission value.\r\n  permission_read?:number\r\n  // Write permission value.\r\n  permission_write?:number\r\n  // Value.\r\n  value?:string\r\n  // Version for OCC.\r\n  version?:string\r\n}\r\n\r\n/** A user with additional account details. Always the current user. */\r\nexport interface ApiAccount {\r\n  // The custom id in the user's account.\r\n  custom_id?:string\r\n  // The devices which belong to the user's account.\r\n  devices?:Array<ApiAccountDevice>\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the user's account was disabled/banned.\r\n  disable_time?:string\r\n  // The email address of the user.\r\n  email?:string\r\n  // The user object.\r\n  user?:ApiUser\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the user's email was verified.\r\n  verify_time?:string\r\n  // The user's wallet data.\r\n  wallet?:string\r\n}\r\n\r\n/** Send a device to the server. Used with authenticate/link/unlink and user. */\r\nexport interface ApiAccountDevice {\r\n  // A device identifier. Should be obtained by a platform-specific device API.\r\n  id?:string\r\n  // Extra information that will be bundled in the session token.\r\n  vars?:Map<string, string>\r\n}\r\n\r\n/** A message sent on a channel. */\r\nexport interface ApiChannelMessage {\r\n  // The channel this message belongs to.\r\n  channel_id?:string\r\n  // The code representing a message type or category.\r\n  code?:number\r\n  // The content payload.\r\n  content?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the message was created.\r\n  create_time?:string\r\n  // The ID of the group, or an empty string if this message was not sent through a group channel.\r\n  group_id?:string\r\n  // The unique ID of this message.\r\n  message_id?:string\r\n  // True if the message was persisted to the channel's history, false otherwise.\r\n  persistent?:boolean\r\n  // The name of the chat room, or an empty string if this message was not sent through a chat room.\r\n  room_name?:string\r\n  // Message sender, usually a user ID.\r\n  sender_id?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the message was last updated.\r\n  update_time?:string\r\n  // The ID of the first DM user, or an empty string if this message was not sent through a DM chat.\r\n  user_id_one?:string\r\n  // The ID of the second DM user, or an empty string if this message was not sent through a DM chat.\r\n  user_id_two?:string\r\n  // The username of the message sender, if any.\r\n  username?:string\r\n}\r\n\r\n/** A list of channel messages, usually a result of a list operation. */\r\nexport interface ApiChannelMessageList {\r\n  // Cacheable cursor to list newer messages. Durable and designed to be stored, unlike next/prev cursors.\r\n  cacheable_cursor?:string\r\n  // A list of messages.\r\n  messages?:Array<ApiChannelMessage>\r\n  // The cursor to send when retrieving the next page, if any.\r\n  next_cursor?:string\r\n  // The cursor to send when retrieving the previous page, if any.\r\n  prev_cursor?:string\r\n}\r\n\r\n/** A friend of a user. */\r\nexport interface ApiFriend {\r\n  // The friend status. /  / one of \"Friend.State\".\r\n  state?:number\r\n  // Time of the latest relationship update.\r\n  update_time?:string\r\n  // The user object.\r\n  user?:ApiUser\r\n}\r\n\r\n/** A collection of zero or more friends of the user. */\r\nexport interface ApiFriendList {\r\n  // Cursor for the next page of results, if any.\r\n  cursor?:string\r\n  // The Friend objects.\r\n  friends?:Array<ApiFriend>\r\n}\r\n\r\n/** A group in the server. */\r\nexport interface ApiGroup {\r\n  // A URL for an avatar image.\r\n  avatar_url?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the group was created.\r\n  create_time?:string\r\n  // The id of the user who created the group.\r\n  creator_id?:string\r\n  // A description for the group.\r\n  description?:string\r\n  // The current count of all members in the group.\r\n  edge_count?:number\r\n  // The id of a group.\r\n  id?:string\r\n  // The language expected to be a tag which follows the BCP-47 spec.\r\n  lang_tag?:string\r\n  // The maximum number of members allowed.\r\n  max_count?:number\r\n  // Additional information stored as a JSON object.\r\n  metadata?:string\r\n  // The unique name of the group.\r\n  name?:string\r\n  // Anyone can join open groups, otherwise only admins can accept members.\r\n  open?:boolean\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the group was last updated.\r\n  update_time?:string\r\n}\r\n\r\n/** A list of users belonging to a group, along with their role. */\r\nexport interface ApiGroupUserList {\r\n  // Cursor for the next page of results, if any.\r\n  cursor?:string\r\n  // User-role pairs for a group.\r\n  group_users?:Array<GroupUserListGroupUser>\r\n}\r\n\r\n/** Represents a complete leaderboard record with all scores and associated metadata. */\r\nexport interface ApiLeaderboardRecord {\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the leaderboard record was created.\r\n  create_time?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the leaderboard record expires.\r\n  expiry_time?:string\r\n  // The ID of the leaderboard this score belongs to.\r\n  leaderboard_id?:string\r\n  // The maximum number of score updates allowed by the owner.\r\n  max_num_score?:number\r\n  // Metadata.\r\n  metadata?:string\r\n  // The number of submissions to this score record.\r\n  num_score?:number\r\n  // The ID of the score owner, usually a user or group.\r\n  owner_id?:string\r\n  // The rank of this record.\r\n  rank?:string\r\n  // The score value.\r\n  score?:string\r\n  // An optional subscore value.\r\n  subscore?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the leaderboard record was updated.\r\n  update_time?:string\r\n  // The username of the score owner, if the owner is a user.\r\n  username?:string\r\n}\r\n\r\n/** A set of leaderboard records, may be part of a leaderboard records page or a batch of individual records. */\r\nexport interface ApiLeaderboardRecordList {\r\n  // The cursor to send when retrieving the next page, if any.\r\n  next_cursor?:string\r\n  // A batched set of leaderboard records belonging to specified owners.\r\n  owner_records?:Array<ApiLeaderboardRecord>\r\n  // The cursor to send when retrieving the previous page, if any.\r\n  prev_cursor?:string\r\n  // The total number of ranks available.\r\n  rank_count?:string\r\n  // A list of leaderboard records.\r\n  records?:Array<ApiLeaderboardRecord>\r\n}\r\n\r\n/** Represents a realtime match. */\r\nexport interface ApiMatch {\r\n  // True if it's an server-managed authoritative match, false otherwise.\r\n  authoritative?:boolean\r\n  // Handler name\r\n  handler_name?:string\r\n  // Match label, if any.\r\n  label?:string\r\n  // The ID of the match, can be used to join.\r\n  match_id?:string\r\n  // Current number of users in the match.\r\n  size?:number\r\n  // Tick Rate\r\n  tick_rate?:number\r\n}\r\n\r\n/** A notification in the server. */\r\nexport interface ApiNotification {\r\n  // Category code for this notification.\r\n  code?:number\r\n  // Content of the notification in JSON.\r\n  content?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the notification was created.\r\n  create_time?:string\r\n  // ID of the Notification.\r\n  id?:string\r\n  // True if this notification was persisted to the database.\r\n  persistent?:boolean\r\n  // ID of the sender, if a user. Otherwise 'null'.\r\n  sender_id?:string\r\n  // Subject of the notification.\r\n  subject?:string\r\n}\r\n\r\n/** A list of validated purchases stored by Nakama. */\r\nexport interface ApiPurchaseList {\r\n  // The cursor to send when retrieving the next page, if any.\r\n  cursor?:string\r\n  // The cursor to send when retrieving the previous page, if any.\r\n  prev_cursor?:string\r\n  // Stored validated purchases.\r\n  validated_purchases?:Array<ApiValidatedPurchase>\r\n}\r\n\r\n/** An object within the storage engine. */\r\nexport interface ApiStorageObject {\r\n  // The collection which stores the object.\r\n  collection?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was created.\r\n  create_time?:string\r\n  // The key of the object within the collection.\r\n  key?:string\r\n  // The read access permissions for the object.\r\n  permission_read?:number\r\n  // The write access permissions for the object.\r\n  permission_write?:number\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was last updated.\r\n  update_time?:string\r\n  // The user owner of the object.\r\n  user_id?:string\r\n  // The value of the object.\r\n  value?:string\r\n  // The version hash of the object.\r\n  version?:string\r\n}\r\n\r\n/** A storage acknowledgement. */\r\nexport interface ApiStorageObjectAck {\r\n  // The collection which stores the object.\r\n  collection?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was created.\r\n  create_time?:string\r\n  // The key of the object within the collection.\r\n  key?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was last updated.\r\n  update_time?:string\r\n  // The owner of the object.\r\n  user_id?:string\r\n  // The version hash of the object.\r\n  version?:string\r\n}\r\n\r\n/** Environment where a purchase/subscription took place, */\r\nexport enum ApiStoreEnvironment {\r\n  UNKNOWN = 0,\r\n  SANDBOX = 1,\r\n  PRODUCTION = 2,\r\n}\r\n\r\n/** Validation Provider, */\r\nexport enum ApiStoreProvider {\r\n  APPLE_APP_STORE = 0,\r\n  GOOGLE_PLAY_STORE = 1,\r\n  HUAWEI_APP_GALLERY = 2,\r\n  FACEBOOK_INSTANT_STORE = 3,\r\n}\r\n\r\n/** A list of validated subscriptions stored by Nakama. */\r\nexport interface ApiSubscriptionList {\r\n  // The cursor to send when retrieving the next page, if any.\r\n  cursor?:string\r\n  // The cursor to send when retrieving the previous page, if any.\r\n  prev_cursor?:string\r\n  // Stored validated subscriptions.\r\n  validated_subscriptions?:Array<ApiValidatedSubscription>\r\n}\r\n\r\n/** A user in the server. */\r\nexport interface ApiUser {\r\n  // The Apple Sign In ID in the user's account.\r\n  apple_id?:string\r\n  // A URL for an avatar image.\r\n  avatar_url?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the user was created.\r\n  create_time?:string\r\n  // The display name of the user.\r\n  display_name?:string\r\n  // Number of related edges to this user.\r\n  edge_count?:number\r\n  // The Facebook id in the user's account.\r\n  facebook_id?:string\r\n  // The Facebook Instant Game ID in the user's account.\r\n  facebook_instant_game_id?:string\r\n  // The Apple Game Center in of the user's account.\r\n  gamecenter_id?:string\r\n  // The Google id in the user's account.\r\n  google_id?:string\r\n  // The id of the user's account.\r\n  id?:string\r\n  // The language expected to be a tag which follows the BCP-47 spec.\r\n  lang_tag?:string\r\n  // The location set by the user.\r\n  location?:string\r\n  // Additional information stored as a JSON object.\r\n  metadata?:string\r\n  // Indicates whether the user is currently online.\r\n  online?:boolean\r\n  // The Steam id in the user's account.\r\n  steam_id?:string\r\n  // The timezone set by the user.\r\n  timezone?:string\r\n  // The UNIX time (for gRPC clients) or ISO string (for REST clients) when the user was last updated.\r\n  update_time?:string\r\n  // The username of the user's account.\r\n  username?:string\r\n}\r\n\r\n/** A list of groups belonging to a user, along with the user's role in each group. */\r\nexport interface ApiUserGroupList {\r\n  // Cursor for the next page of results, if any.\r\n  cursor?:string\r\n  // Group-role pairs for a user.\r\n  user_groups?:Array<UserGroupListUserGroup>\r\n}\r\n\r\n/** Validated Purchase stored by Nakama. */\r\nexport interface ApiValidatedPurchase {\r\n  // Timestamp when the receipt validation was stored in DB.\r\n  create_time?:string\r\n  // Whether the purchase was done in production or sandbox environment.\r\n  environment?:ApiStoreEnvironment\r\n  // Purchase Product ID.\r\n  product_id?:string\r\n  // Raw provider validation response.\r\n  provider_response?:string\r\n  // Timestamp when the purchase was done.\r\n  purchase_time?:string\r\n  // Timestamp when the purchase was refunded. Set to UNIX\r\n  refund_time?:string\r\n  // Whether the purchase had already been validated by Nakama before.\r\n  seen_before?:boolean\r\n  // Store identifier\r\n  store?:ApiStoreProvider\r\n  // Purchase Transaction ID.\r\n  transaction_id?:string\r\n  // Timestamp when the receipt validation was updated in DB.\r\n  update_time?:string\r\n  // Purchase User ID.\r\n  user_id?:string\r\n}\r\n\r\nexport interface ApiValidatedSubscription {\r\n  // Whether the subscription is currently active or not.\r\n  active?:boolean\r\n  // UNIX Timestamp when the receipt validation was stored in DB.\r\n  create_time?:string\r\n  // Whether the purchase was done in production or sandbox environment.\r\n  environment?:ApiStoreEnvironment\r\n  // Subscription expiration time. The subscription can still be auto-renewed to extend the expiration time further.\r\n  expiry_time?:string\r\n  // Purchase Original transaction ID (we only keep track of the original subscription, not subsequent renewals).\r\n  original_transaction_id?:string\r\n  // Purchase Product ID.\r\n  product_id?:string\r\n  // Raw provider notification body.\r\n  provider_notification?:string\r\n  // Raw provider validation response body.\r\n  provider_response?:string\r\n  // UNIX Timestamp when the purchase was done.\r\n  purchase_time?:string\r\n  // Subscription refund time. If this time is set, the subscription was refunded.\r\n  refund_time?:string\r\n  // Store identifier\r\n  store?:ApiStoreProvider\r\n  // UNIX Timestamp when the receipt validation was updated in DB.\r\n  update_time?:string\r\n  // Subscription User ID.\r\n  user_id?:string\r\n}\r\n\r\n/** A user session associated to a stream, usually through a list operation or a join/leave event. */\r\nexport interface RealtimeUserPresence {\r\n  // Whether this presence generates persistent data/messages, if applicable for the stream type.\r\n  persistence?:boolean\r\n  // A unique session ID identifying the particular connection, because the user may have many.\r\n  session_id?:string\r\n  // A user-set status message for this stream, if applicable.\r\n  status?:string\r\n  // The user this presence belongs to.\r\n  user_id?:string\r\n  // The username for display purposes.\r\n  username?:string\r\n}\r\n\r\nconst DEFAULT_HOST = 'http://127.0.0.1:7120';\r\nconst DEFAULT_TIMEOUT_MS = 5000;\r\n\r\nexport class ConfigParams {\r\n  host!: string\r\n  timeoutMs!: number\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ConsoleService {\r\n  private readonly config;\r\n\r\n  constructor(private httpClient: HttpClient, @Optional() config: ConfigParams) {\r\n    const defaultConfig: ConfigParams = {\r\n      host: DEFAULT_HOST,\r\n      timeoutMs: DEFAULT_TIMEOUT_MS,\r\n    };\r\n    this.config = config || defaultConfig;\r\n  }\r\n\r\n  /** Delete (non-recorded) all user accounts. */\r\n  deleteAccounts(auth_token: string): Observable<any> {\r\n    const urlPath = `/v2/console/account`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List (and optionally filter) accounts. */\r\n  listAccounts(auth_token: string, filter?: string, tombstones?: boolean, cursor?: string): Observable<AccountList> {\r\n    const urlPath = `/v2/console/account`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (filter) {\r\n      params = params.set('filter', filter);\r\n    }\r\n    if (tombstones || tombstones === false) {\r\n      params = params.set('tombstones', String(tombstones));\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<AccountList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get a list of the user's wallet transactions. */\r\n  getWalletLedger(auth_token: string, account_id: string, limit?: number, cursor?: string): Observable<WalletLedgerList> {\r\n    account_id = encodeURIComponent(String(account_id))\r\n    const urlPath = `/v2/console/account/${account_id}/wallet`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (limit) {\r\n      params = params.set('limit', String(limit));\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<WalletLedgerList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete all information stored for a user account. */\r\n  deleteAccount(auth_token: string, id: string, record_deletion?: boolean): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (record_deletion || record_deletion === false) {\r\n      params = params.set('record_deletion', String(record_deletion));\r\n    }\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get detailed account information for a single user. */\r\n  getAccount(auth_token: string, id: string): Observable<Account> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<Account>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Update one or more fields on a user account. */\r\n  updateAccount(auth_token: string, id: string, body: UpdateAccountRequest): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Ban a user. */\r\n  banAccount(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/ban`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Export all information stored about a user account. */\r\n  exportAccount(auth_token: string, id: string): Observable<AccountExport> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/export`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<AccountExport>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get a user's list of friend relationships. */\r\n  getFriends(auth_token: string, id: string): Observable<ApiFriendList> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/friend`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiFriendList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete the friend relationship between two users. */\r\n  deleteFriend(auth_token: string, id: string, friend_id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    friend_id = encodeURIComponent(String(friend_id))\r\n    const urlPath = `/v2/console/account/${id}/friend/${friend_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get a list of groups the user is a member of. */\r\n  getGroups(auth_token: string, id: string): Observable<ApiUserGroupList> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/group`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiUserGroupList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Remove a user from a group. */\r\n  deleteGroupUser(auth_token: string, id: string, group_id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    group_id = encodeURIComponent(String(group_id))\r\n    const urlPath = `/v2/console/account/${id}/group/${group_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unban a user. */\r\n  unbanAccount(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unban`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Apple ID from a user account. */\r\n  unlinkApple(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/apple`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the custom ID from a user account. */\r\n  unlinkCustom(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/custom`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the device ID from a user account. */\r\n  unlinkDevice(auth_token: string, id: string, body: UnlinkDeviceRequest): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/device`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the email from a user account. */\r\n  unlinkEmail(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/email`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Facebook ID from a user account. */\r\n  unlinkFacebook(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/facebook`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Facebook Instant Game ID from a user account. */\r\n  unlinkFacebookInstantGame(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/facebookinstantgame`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Game Center ID from a user account. */\r\n  unlinkGameCenter(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/gamecenter`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Google ID from a user account. */\r\n  unlinkGoogle(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/google`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Unlink the Steam ID from a user account. */\r\n  unlinkSteam(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/account/${id}/unlink/steam`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete a wallet ledger item. */\r\n  deleteWalletLedger(auth_token: string, id: string, wallet_id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    wallet_id = encodeURIComponent(String(wallet_id))\r\n    const urlPath = `/v2/console/account/${id}/wallet/${wallet_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Deletes all data */\r\n  deleteAllData(auth_token: string): Observable<any> {\r\n    const urlPath = `/v2/console/all`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** API Explorer - list all endpoints */\r\n  listApiEndpoints(auth_token: string): Observable<ApiEndpointList> {\r\n    const urlPath = `/v2/console/api/endpoints`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiEndpointList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** API Explorer - call a custom RPC endpoint */\r\n  callRpcEndpoint(auth_token: string, method: string, body: CallRpcEndpointRequest): Observable<CallApiEndpointResponse> {\r\n    method = encodeURIComponent(String(method))\r\n    const urlPath = `/v2/console/api/endpoints/rpc/${method}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post<CallApiEndpointResponse>(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** API Explorer - call an endpoint */\r\n  callApiEndpoint(auth_token: string, method: string, body: CallApiEndpointRequest): Observable<CallApiEndpointResponse> {\r\n    method = encodeURIComponent(String(method))\r\n    const urlPath = `/v2/console/api/endpoints/${method}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post<CallApiEndpointResponse>(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Authenticate a console user with username and password. */\r\n  authenticate(body: AuthenticateRequest): Observable<ConsoleSession> {\r\n    const urlPath = `/v2/console/authenticate`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post<ConsoleSession>(this.config.host + urlPath, body, { params: params })\r\n  }\r\n\r\n  /** Log out a session and invalidate the session token. */\r\n  authenticateLogout(auth_token: string, body: AuthenticateLogoutRequest): Observable<any> {\r\n    const urlPath = `/v2/console/authenticate/logout`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Change an account's MFA using a code, usually delivered over email. */\r\n  authenticateMFASetup(auth_token: string, body: AuthenticateMFASetupRequest): Observable<AuthenticateMFASetupResponse> {\r\n    const urlPath = `/v2/console/authenticate/mfa`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post<AuthenticateMFASetupResponse>(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List channel messages with the selected filter */\r\n  listChannelMessages(auth_token: string, type?: string, label?: string, group_id?: string, user_id_one?: string, user_id_two?: string, cursor?: string): Observable<ApiChannelMessageList> {\r\n    const urlPath = `/v2/console/channel`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (type) {\r\n      params = params.set('type', type);\r\n    }\r\n    if (label) {\r\n      params = params.set('label', label);\r\n    }\r\n    if (group_id) {\r\n      params = params.set('group_id', group_id);\r\n    }\r\n    if (user_id_one) {\r\n      params = params.set('user_id_one', user_id_one);\r\n    }\r\n    if (user_id_two) {\r\n      params = params.set('user_id_two', user_id_two);\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<ApiChannelMessageList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get server config and configuration warnings. */\r\n  getConfig(auth_token: string): Observable<Config> {\r\n    const urlPath = `/v2/console/config`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<Config>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List (and optionally filter) groups. */\r\n  listGroups(auth_token: string, filter?: string, cursor?: string): Observable<GroupList> {\r\n    const urlPath = `/v2/console/group`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (filter) {\r\n      params = params.set('filter', filter);\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<GroupList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Demote a user from a group. */\r\n  demoteGroupMember(auth_token: string, group_id: string, id: string): Observable<any> {\r\n    group_id = encodeURIComponent(String(group_id))\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${group_id}/account/${id}/demote`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Promote a user from a group. */\r\n  promoteGroupMember(auth_token: string, group_id: string, id: string): Observable<any> {\r\n    group_id = encodeURIComponent(String(group_id))\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${group_id}/account/${id}/promote`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Add/join members to a group. */\r\n  addGroupUsers(auth_token: string, group_id: string, body: AddGroupUsersRequest): Observable<any> {\r\n    group_id = encodeURIComponent(String(group_id))\r\n    const urlPath = `/v2/console/group/${group_id}/add`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Remove a group. */\r\n  deleteGroup(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get detailed group information. */\r\n  getGroup(auth_token: string, id: string): Observable<ApiGroup> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiGroup>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Update one or more fields on a group. */\r\n  updateGroup(auth_token: string, id: string, body: UpdateGroupRequest): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Export all information stored about a group. */\r\n  exportGroup(auth_token: string, id: string): Observable<GroupExport> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${id}/export`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<GroupExport>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get a list of members of the group. */\r\n  getMembers(auth_token: string, id: string): Observable<ApiGroupUserList> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/group/${id}/member`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiGroupUserList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get purchase by transaction_id */\r\n  getPurchase(auth_token: string, transaction_id: string): Observable<ApiValidatedPurchase> {\r\n    transaction_id = encodeURIComponent(String(transaction_id))\r\n    const urlPath = `/v2/console/iap/purchase/${transaction_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiValidatedPurchase>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get subscription by original_transaction_id */\r\n  getSubscription(auth_token: string, original_transaction_id: string): Observable<ApiValidatedSubscription> {\r\n    original_transaction_id = encodeURIComponent(String(original_transaction_id))\r\n    const urlPath = `/v2/console/iap/subscription/${original_transaction_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiValidatedSubscription>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List leaderboards */\r\n  listLeaderboards(auth_token: string, cursor?: string): Observable<LeaderboardList> {\r\n    const urlPath = `/v2/console/leaderboard`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<LeaderboardList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete leaderboard */\r\n  deleteLeaderboard(auth_token: string, id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/leaderboard/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get leaderboard. */\r\n  getLeaderboard(auth_token: string, id: string): Observable<Leaderboard> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/leaderboard/${id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<Leaderboard>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete leaderboard record */\r\n  deleteLeaderboardRecord(auth_token: string, id: string, owner_id: string): Observable<any> {\r\n    id = encodeURIComponent(String(id))\r\n    owner_id = encodeURIComponent(String(owner_id))\r\n    const urlPath = `/v2/console/leaderboard/${id}/owner/${owner_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List leaderboard records. */\r\n  listLeaderboardRecords(auth_token: string, leaderboard_id: string, owner_ids?: Array<string>, limit?: number, cursor?: string, expiry?: string): Observable<ApiLeaderboardRecordList> {\r\n    leaderboard_id = encodeURIComponent(String(leaderboard_id))\r\n    const urlPath = `/v2/console/leaderboard/${leaderboard_id}/records`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (owner_ids) {\r\n      owner_ids.forEach(e => params = params.append('owner_ids', String(e)))\r\n    }\r\n    if (limit) {\r\n      params = params.set('limit', String(limit));\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    if (expiry) {\r\n      params = params.set('expiry', expiry);\r\n    }\r\n    return this.httpClient.get<ApiLeaderboardRecordList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List ongoing matches */\r\n  listMatches(auth_token: string, limit?: number, authoritative?: boolean, label?: string, min_size?: number, max_size?: number, match_id?: string, query?: string, node?: string): Observable<MatchList> {\r\n    const urlPath = `/v2/console/match`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (limit) {\r\n      params = params.set('limit', String(limit));\r\n    }\r\n    if (authoritative || authoritative === false) {\r\n      params = params.set('authoritative', String(authoritative));\r\n    }\r\n    if (label) {\r\n      params = params.set('label', label);\r\n    }\r\n    if (min_size) {\r\n      params = params.set('min_size', String(min_size));\r\n    }\r\n    if (max_size) {\r\n      params = params.set('max_size', String(max_size));\r\n    }\r\n    if (match_id) {\r\n      params = params.set('match_id', match_id);\r\n    }\r\n    if (query) {\r\n      params = params.set('query', query);\r\n    }\r\n    if (node) {\r\n      params = params.set('node', node);\r\n    }\r\n    return this.httpClient.get<MatchList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get current state of a running match */\r\n  getMatchState(auth_token: string, id: string): Observable<MatchState> {\r\n    id = encodeURIComponent(String(id))\r\n    const urlPath = `/v2/console/match/${id}/state`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<MatchState>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete messages. */\r\n  deleteChannelMessages(auth_token: string, before?: string, ids?: Array<string>): Observable<DeleteChannelMessagesResponse> {\r\n    const urlPath = `/v2/console/message`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (before) {\r\n      params = params.set('before', before);\r\n    }\r\n    if (ids) {\r\n      ids.forEach(e => params = params.append('ids', String(e)))\r\n    }\r\n    return this.httpClient.delete<DeleteChannelMessagesResponse>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List validated purchases */\r\n  listPurchases(auth_token: string, user_id?: string, limit?: number, cursor?: string): Observable<ApiPurchaseList> {\r\n    const urlPath = `/v2/console/purchase`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (user_id) {\r\n      params = params.set('user_id', user_id);\r\n    }\r\n    if (limit) {\r\n      params = params.set('limit', String(limit));\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<ApiPurchaseList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get runtime info */\r\n  getRuntime(auth_token: string): Observable<RuntimeInfo> {\r\n    const urlPath = `/v2/console/runtime`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<RuntimeInfo>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get current status data for all nodes. */\r\n  getStatus(auth_token: string): Observable<StatusList> {\r\n    const urlPath = `/v2/console/status`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<StatusList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete all storage data. */\r\n  deleteStorage(auth_token: string): Observable<any> {\r\n    const urlPath = `/v2/console/storage`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List (and optionally filter) storage data. */\r\n  listStorage(auth_token: string, user_id?: string, key?: string, collection?: string, cursor?: string): Observable<StorageList> {\r\n    const urlPath = `/v2/console/storage`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (user_id) {\r\n      params = params.set('user_id', user_id);\r\n    }\r\n    if (key) {\r\n      params = params.set('key', key);\r\n    }\r\n    if (collection) {\r\n      params = params.set('collection', collection);\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<StorageList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List storage collections */\r\n  listStorageCollections(auth_token: string): Observable<StorageCollectionsList> {\r\n    const urlPath = `/v2/console/storage/collections`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<StorageCollectionsList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete a storage object. */\r\n  deleteStorageObject(auth_token: string, collection: string, key: string, user_id: string, version?: string): Observable<any> {\r\n    collection = encodeURIComponent(String(collection))\r\n    key = encodeURIComponent(String(key))\r\n    user_id = encodeURIComponent(String(user_id))\r\n    const urlPath = `/v2/console/storage/${collection}/${key}/${user_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (version) {\r\n      params = params.set('version', version);\r\n    }\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Get a storage object. */\r\n  getStorage(auth_token: string, collection: string, key: string, user_id: string): Observable<ApiStorageObject> {\r\n    collection = encodeURIComponent(String(collection))\r\n    key = encodeURIComponent(String(key))\r\n    user_id = encodeURIComponent(String(user_id))\r\n    const urlPath = `/v2/console/storage/${collection}/${key}/${user_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<ApiStorageObject>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Write a new storage object or replace an existing one. */\r\n  writeStorageObject(auth_token: string, collection: string, key: string, user_id: string, body: WriteStorageObjectRequest): Observable<ApiStorageObjectAck> {\r\n    collection = encodeURIComponent(String(collection))\r\n    key = encodeURIComponent(String(key))\r\n    user_id = encodeURIComponent(String(user_id))\r\n    const urlPath = `/v2/console/storage/${collection}/${key}/${user_id}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.put<ApiStorageObjectAck>(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete a storage object. */\r\n  deleteStorageObject2(auth_token: string, collection: string, key: string, user_id: string, version: string): Observable<any> {\r\n    collection = encodeURIComponent(String(collection))\r\n    key = encodeURIComponent(String(key))\r\n    user_id = encodeURIComponent(String(user_id))\r\n    version = encodeURIComponent(String(version))\r\n    const urlPath = `/v2/console/storage/${collection}/${key}/${user_id}/${version}`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List validated subscriptions */\r\n  listSubscriptions(auth_token: string, user_id?: string, limit?: number, cursor?: string): Observable<ApiSubscriptionList> {\r\n    const urlPath = `/v2/console/subscription`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (user_id) {\r\n      params = params.set('user_id', user_id);\r\n    }\r\n    if (limit) {\r\n      params = params.set('limit', String(limit));\r\n    }\r\n    if (cursor) {\r\n      params = params.set('cursor', cursor);\r\n    }\r\n    return this.httpClient.get<ApiSubscriptionList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Delete console user. */\r\n  deleteUser(auth_token: string, username?: string): Observable<any> {\r\n    const urlPath = `/v2/console/user`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    if (username) {\r\n      params = params.set('username', username);\r\n    }\r\n    return this.httpClient.delete(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** List (and optionally filter) users. */\r\n  listUsers(auth_token: string): Observable<UserList> {\r\n    const urlPath = `/v2/console/user`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.get<UserList>(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Add a new console user. */\r\n  addUser(auth_token: string, body: AddUserRequest): Observable<any> {\r\n    const urlPath = `/v2/console/user`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Sets the user's MFA as required or not required. */\r\n  requireUserMfa(auth_token: string, username: string, body: RequireUserMfaRequest): Observable<any> {\r\n    username = encodeURIComponent(String(username))\r\n    const urlPath = `/v2/console/user/${username}/mfa/require`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, body, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  /** Reset a user's multi-factor authentication credentials. */\r\n  resetUserMfa(auth_token: string, username: string): Observable<any> {\r\n    username = encodeURIComponent(String(username))\r\n    const urlPath = `/v2/console/user/${username}/mfa/reset`;\r\n    let params = new HttpParams({ encoder: new CustomHttpParamEncoder() });\r\n    return this.httpClient.post(this.config.host + urlPath, { params: params, headers: this.getTokenAuthHeaders(auth_token) })\r\n  }\r\n\r\n  private getTokenAuthHeaders(token: string): HttpHeaders {\r\n    return new HttpHeaders().set('Authorization', 'Bearer ' + token);\r\n  }\r\n\r\n  private getBasicAuthHeaders(username: string, password: string): HttpHeaders {\r\n    return new HttpHeaders().set('Authorization', 'Basic ' + btoa(username + ':' + password));\r\n  }\r\n}\r\n\r\nimport { HttpParameterCodec } from '@angular/common/http';\r\nexport class CustomHttpParamEncoder implements HttpParameterCodec {\r\n  encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n  encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n  decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n  decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UserRole} from './console.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class Globals {\r\n  restrictedPages = new Map([\r\n    ['users', UserRole.USER_ROLE_ADMIN],\r\n    ['config', UserRole.USER_ROLE_DEVELOPER],\r\n    ['modules', UserRole.USER_ROLE_DEVELOPER],\r\n    ['apiexplorer', UserRole.USER_ROLE_DEVELOPER],\r\n  ]);\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiGroup, ConsoleService, UpdateGroupRequest, UserRole} from '../../console.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {JSONEditor, Mode, toTextContent} from 'vanilla-jsoneditor';\r\n\r\n@Component({\r\n  templateUrl: './groupDetails.component.html',\r\n  styleUrls: ['./groupDetails.component.scss']\r\n})\r\nexport class GroupDetailsComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editor') private editor: ElementRef<HTMLElement>;\r\n\r\n  private jsonEditor: JSONEditor;\r\n  public error = '';\r\n  public group: ApiGroup;\r\n  public groupForm: UntypedFormGroup;\r\n  public updating = false;\r\n  public updated = false;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.groupForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      avatar_url: [''],\r\n      lang_tag: [''],\r\n      open: [''],\r\n      max_count: [''],\r\n    });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.group = d[0];\r\n        this.f.name.setValue(this.group.name);\r\n        this.f.description.setValue(this.group.description);\r\n        this.f.avatar_url.setValue(this.group.avatar_url);\r\n        this.f.lang_tag.setValue(this.group.lang_tag);\r\n        this.f.open.setValue(this.group.open);\r\n        this.f.max_count.setValue(this.group.max_count);\r\n        if (!this.updateAllowed()) {\r\n          this.groupForm.disable();\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditor = new JSONEditor({\r\n      target: this.editor.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: !this.updateAllowed(),\r\n        content:{text:this.group.metadata},\r\n      },\r\n    });\r\n  }\r\n\r\n  updateGroup(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = true;\r\n\r\n    let metadata = '';\r\n    try {\r\n      metadata = toTextContent(this.jsonEditor.get()).text;\r\n    } catch (e) {\r\n      this.error = e;\r\n      this.updating = false;\r\n      return\r\n    }\r\n\r\n    if (this.f.max_count.value < this.group.edge_count) {\r\n      this.error = RangeError(\"Max Count cannot be lower than the number of members\").message;\r\n      this.updating = false;\r\n      return\r\n    }\r\n\r\n    const body: UpdateGroupRequest = {\r\n      name: this.f.name.value,\r\n      description: this.f.description.value,\r\n      avatar_url: this.f.avatar_url.value,\r\n      lang_tag: this.f.lang_tag.value,\r\n      open: this.f.open.value,\r\n      max_count: this.f.max_count.value,\r\n      metadata: metadata,\r\n    };\r\n    this.consoleService.updateGroup('', this.group.id, body).subscribe(d => {\r\n      this.updated = true;\r\n      this.updating = false;\r\n    }, err => {\r\n      this.error = err;\r\n      this.updating = false;\r\n    })\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  get f(): any {\r\n    return this.groupForm.controls;\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"success\" class=\"mb-3\" *ngIf=\"updated\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Group was modified successfully.</h6>\r\n</ngb-alert>\r\n\r\n<form [formGroup]=\"groupForm\" (ngSubmit)=\"updateGroup()\" class=\"add-border\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"group_id\">Group ID</label>\r\n      </div>\r\n      <input type=\"text\" id=\"group_id\" [value]=\"group.id\" class=\"form-control-plaintext form-control-sm my-2\"\r\n             placeholder=\"Group ID\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"creator_id\">Creator ID</label>\r\n      </div>\r\n      <a [routerLink]=\"['/accounts', group.creator_id]\" style=\"width: 100%\">\r\n      <input type=\"text\" id=\"creator_id\"  [value]=\"group.creator_id\" class=\"form-control-plaintext form-control-sm my-2\"\r\n             placeholder=\"Creator ID\" disabled readonly>\r\n      </a>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"name\">Name</label>\r\n      </div>\r\n      <input type=\"text\" id=\"name\" class=\"form-control form-control-sm my-2\" placeholder=\"Name\" required\r\n             formControlName=\"name\" [ngClass]=\"{'is-invalid': f.name.dirty && f.name.errors}\">\r\n      <div class=\"invalid-tooltip\" [hidden]=\"f.name.disabled || f.name.valid || f.name.pristine\">Name is required</div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"description\">Description</label>\r\n      </div>\r\n      <input type=\"text\" id=\"description\" class=\"form-control form-control-sm my-2\" placeholder=\"Description\"\r\n             formControlName=\"description\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"avatar_url\">Avatar URL</label>\r\n      </div>\r\n      <input type=\"text\" id=\"avatar_url\" class=\"form-control form-control-sm my-2\" placeholder=\"Avatar URL\"\r\n             formControlName=\"avatar_url\">\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"lang_tag\">Language</label>\r\n      </div>\r\n      <input type=\"text\" id=\"lang_tag\" class=\"form-control form-control-sm my-2\" placeholder=\"Language\"\r\n             formControlName=\"lang_tag\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"creator_id\">Members</label>\r\n      </div>\r\n      <input type=\"text\" id=\"edge_count\" [value]=\"group.edge_count\" class=\"form-control-plaintext form-control-sm my-2\"\r\n             placeholder=\"Members\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"max_count\">Max Count</label>\r\n      </div>\r\n      <input type=\"text\" id=\"max_count\" class=\"form-control form-control-sm my-2\" placeholder=\"Max Count\"\r\n             formControlName=\"max_count\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"max_count\">Open</label>\r\n      </div>\r\n      <input type=\"checkbox\" id=\"open\" class=\"my-2\" formControlName=\"open\">\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"row mb-3 add-border-single-row-bottom\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"create_time\">Create Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"create_time\" [value]=\"group.create_time\"\r\n             class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Create Time\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"update_time\">Update Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"update_time\" [value]=\"group.update_time\"\r\n             class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Update Time\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card p-2 mb-3 jsoneditor\" style=\"height: 400px\">\r\n    <div #editor style=\"height: 400px\"></div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"updating\" *ngIf=\"updateAllowed()\">Save</button>\r\n</form>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ApiAccount, ApiGroup, ConsoleService, UserRole} from '../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {saveAs} from 'file-saver';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.scss']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n  public group: ApiGroup;\r\n  public error = '';\r\n\r\n  public views = [\r\n    {label: 'Details', path: 'details'},\r\n    {label: 'Members', path: 'members'},\r\n  ];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.group = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  deleteGroup(event, recorded: boolean): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        this.error = '';\r\n        this.consoleService.deleteGroup('', this.group.id).subscribe(() => {\r\n          this.error = '';\r\n          this.router.navigate(['/groups']);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  exportGroup(event): void {\r\n    event.target.disabled = true;\r\n    this.error = '';\r\n    this.consoleService.exportGroup('', this.group.id).subscribe(groupExport => {\r\n      this.error = '';\r\n      const fileName = this.group.id + '-export.json';\r\n      const json = JSON.stringify(groupExport, null, 2);\r\n      const bytes = new TextEncoder().encode(json);\r\n      const blob = new Blob([bytes], {type: 'application/json;charset=utf-8'});\r\n      saveAs(blob, fileName);\r\n      event.target.disabled = false;\r\n    }, err => {\r\n      event.target.disabled = false;\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  updateAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  exportAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  banAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GroupResolver implements Resolve<ApiGroup> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiGroup> {\r\n    const groupId = route.paramMap.get('id');\r\n    return this.consoleService.getGroup('', groupId);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">User Group</h2>\r\n<div class=\"account-top-nav d-flex justify-content-between align-items-baseline mb-4\">\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/groups']\">Group</a></li>\r\n      <li class=\"breadcrumb-item active\">{{group.id}}</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  <div>\r\n    <button *ngIf=\"exportAllowed()\" (click)=\"exportGroup($event)\" type=\"button\" class=\"btn  btn-outline-secondary mr-2\"><img class=\"mr-2\" src=\"/static/svg/export.svg\" alt=\"\" width=\"13\" height=\"13\">Export</button>\r\n    <button *ngIf=\"deleteAllowed()\" (click)=\"deleteGroup($event, false)\" type=\"button\" class=\"btn btn-danger btn-danger-icon mr-2\"><img class=\"mr-2\" src=\"/static/svg/bin-red.svg\" alt=\"\" width=\"14\" height=\"\">Delete</button>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<nav ngbNav #accountNav=\"ngbNav\" class=\"navbar-expand-sm p-0 mb-3\">\r\n  <div *ngFor=\"let v of views\">\r\n    <ng-container [ngbNavItem]=\"v.path\">\r\n      <a ngbNavLink routerLinkActive=\"account-link-active\" [routerLink]=\"['/groups', group.id, v.path]\">{{v.label}}</a>\r\n    </ng-container>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {\r\n  AddGroupUsersRequest,\r\n  ApiGroup,\r\n  ApiGroupUserList,\r\n  ConsoleService,\r\n  GroupUserListGroupUser, UpdateAccountRequest,\r\n  UserGroupListUserGroup,\r\n  UserRole\r\n} from '../../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from \"@angular/forms\";\r\nimport {resolve} from \"@angular/compiler-cli/src/ngtsc/file_system\";\r\n\r\n@Component({\r\n  templateUrl: './groupMembers.component.html',\r\n  styleUrls: ['./groupMembers.component.scss']\r\n})\r\nexport class GroupMembersComponent implements OnInit {\r\n  public error = '';\r\n  public group: ApiGroup;\r\n  public members: Array<GroupUserListGroupUser> = [];\r\n  public activeState = 'Add Member';\r\n  public readonly states = ['Add Member', 'Join'];\r\n  public addForm: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly authService: AuthenticationService,\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = 'reload'\r\n    this.addForm = this.formBuilder.group({\r\n      ids: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.members.length = 0;\r\n        this.members.push(...d[0].group_users);\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.group = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  editionAllowed() {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteGroupUser(event, i: number, f: GroupUserListGroupUser) {\r\n    event.target.disabled = true;\r\n    event.preventDefault();\r\n    this.error = '';\r\n    this.consoleService.deleteGroupUser('', f.user.id, this.group.id).subscribe(() => {\r\n      this.members.splice(i, 1)\r\n    }, err => {\r\n      this.error = err;\r\n    })\r\n  }\r\n\r\n  demoteGroupUser(event, i: number, f: GroupUserListGroupUser) {\r\n    this.error = '';\r\n    this.consoleService.demoteGroupMember('', this.group.id, f.user.id).subscribe(() => {\r\n      this.members[i].state++;\r\n    }, err => {\r\n      this.error = err;\r\n    })\r\n  }\r\n\r\n  promoteGroupUser(event, i: number, f: GroupUserListGroupUser) {\r\n    this.error = '';\r\n    this.consoleService.promoteGroupMember('', this.group.id, f.user.id).subscribe(() => {\r\n      this.members[i].state--;\r\n    }, err => {\r\n      this.error = err;\r\n    })\r\n  }\r\n\r\n  viewAccount(g: GroupUserListGroupUser): void {\r\n    this.router.navigate(['/accounts', g.user.id], {relativeTo: this.route});\r\n  }\r\n\r\n  add(): void {\r\n    let body: AddGroupUsersRequest = {ids: this.f.ids.value, join_request: this.activeState === 'Join'};\r\n    this.consoleService.addGroupUsers('', this.group.id, body).subscribe(() => {\r\n      this.error = '';\r\n      // refresh\r\n      this.router.navigate([this.router.url])\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  get f(): any {\r\n    return this.addForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GroupMembersResolver implements Resolve<ApiGroupUserList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiGroupUserList> {\r\n    const groupId = route.parent.paramMap.get('id');\r\n    return this.consoleService.getMembers('', groupId);\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div *ngIf=\"!group.open && editionAllowed()\" class=\"btn-group mb-1\" ngbDropdown>\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" ngbDropdownToggle>\r\n    <span *ngIf=\"!activeState || activeState === ''\">Add by membership state</span>\r\n    <span *ngIf=\"activeState && activeState !== ''\">{{activeState}}</span>\r\n  </button>\r\n  <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n    <button *ngFor=\"let f of states\" type=\"button\" ngbDropdownItem (click)=\"activeState = f;\">{{f}}</button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"editionAllowed()\" class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"addForm\">\r\n        <div class=\"input-group\">\r\n          <input id=\"ids\" type=\"text\" class=\"form-control border-right-0\" formControlName=\"ids\" placeholder=\"Add user IDs as members, comma-separated\"/>\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary dropdown-radius-left\" (click)=\"add()\">Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 320px\">User ID</th>\r\n        <th>Name</th>\r\n        <th style=\"width: 300px\">State</th>\r\n        <th style=\"width: 180px\">Update Time</th>\r\n        <th style=\"width: 70px\" *ngIf=\"editionAllowed()\">Demote</th>\r\n        <th style=\"width: 70px\" *ngIf=\"editionAllowed()\">Promote</th>\r\n        <th style=\"width: 90px\" *ngIf=\"editionAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"members.length === 0\">\r\n        <td colSpan=\"7\" class=\"text-muted\">No group membership found.</td>\r\n      </tr>\r\n\r\n      <tr *ngFor=\"let m of members; index as i\">\r\n        <td (click)=\"viewAccount(m)\">{{m.user.id}}</td>\r\n        <td (click)=\"viewAccount(m)\">{{m.user.username}}</td>\r\n        <td (click)=\"viewAccount(m)\">\r\n          <span *ngIf=\"m.state === 0\">Superadmin (0)</span>\r\n          <span *ngIf=\"m.state === 1\">Admin (1)</span>\r\n          <span *ngIf=\"m.state === 2\">Member (2)</span>\r\n          <span *ngIf=\"m.state === 3\">Join Request (3)</span>\r\n          <span *ngIf=\"m.state === 4\">Banned (4)</span>\r\n        </td>\r\n        <td (click)=\"viewAccount(m)\">{{m.user.update_time}}</td>\r\n        <td *ngIf=\"editionAllowed()\" class=\"text-center\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" (click)=\"demoteGroupUser($event, i, m);\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-down\" viewBox=\"0 0 16 16\">\r\n            <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\r\n          </svg>\r\n        </button></td>\r\n        <td *ngIf=\"editionAllowed()\" class=\"text-center\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" (click)=\"promoteGroupUser($event, i, m);\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up\" viewBox=\"0 0 16 16\">\r\n            <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\r\n          </svg>\r\n        </button></td>\r\n        <td *ngIf=\"editionAllowed()\" class=\"text-center align-middle\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteGroupUser($event, i, m);\">Delete</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {GroupList, ApiGroup, ConsoleService, UserRole} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.scss']\r\n})\r\nexport class GroupListComponent implements OnInit {\r\n  public readonly systemUserId = '00000000-0000-0000-0000-000000000000';\r\n  public error = '';\r\n  public groupsCount = 0;\r\n  public groups: Array<ApiGroup> = [];\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public searchForm: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = this.formBuilder.group({\r\n      filter: [''],\r\n    });\r\n\r\n    const qp = this.route.snapshot.queryParamMap;\r\n    this.f.filter.setValue(qp.get('filter'));\r\n    this.nextCursor = qp.get('cursor');\r\n\r\n    if (this.nextCursor && this.nextCursor !== '') {\r\n      this.search(1);\r\n    } else if (this.f.filter.value) {\r\n      this.search(0);\r\n    }\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.groups.length = 0;\r\n        if (d) {\r\n          this.groups.push(...d[0].groups);\r\n          this.groupsCount = d[0].total_count;\r\n          this.nextCursor = d[0].next_cursor;\r\n          this.prevCursor = d[0].prev_cursor;\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  search(state: number): void {\r\n    let cursor = '';\r\n    switch (state) {\r\n      case -1:\r\n        cursor = this.prevCursor;\r\n        break;\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n\r\n    this.consoleService.listGroups('', this.f.filter.value, cursor).subscribe(d => {\r\n      this.error = '';\r\n\r\n      this.groups.length = 0;\r\n      this.groups.push(...d.groups);\r\n      this.groupsCount = d.total_count;\r\n      this.nextCursor = d.next_cursor;\r\n\r\n      this.router.navigate([], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          filter: this.f.filter.value,\r\n          cursor\r\n        },\r\n        queryParamsHandling: 'merge',\r\n      });\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  deleteGroup(event, i: number, o: ApiGroup): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteGroup('', o.id).subscribe(() => {\r\n          this.error = '';\r\n          this.groups.splice(i, 1);\r\n          this.groupsCount--;\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_DEVELOPER;\r\n  }\r\n\r\n  viewGroup(g: ApiGroup): void {\r\n    this.router.navigate(['/groups', g.id], {relativeTo: this.route});\r\n  }\r\n\r\n  get f(): any {\r\n    return this.searchForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GroupSearchResolver implements Resolve<GroupList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<GroupList> {\r\n    const filter = route.queryParamMap.get('filter');\r\n\r\n    return this.consoleService.listGroups('', filter, null);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">User Groups</h2>\r\n<h6 class=\"pb-3\">{{groupsCount}} groups found.</h6>\r\n\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(0)\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"filter\" placeholder=\"Filter by group ID or name (use '%' for wildcard search)\"/>\r\n\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-primary dropdown-radius\" (click)=\"search(0)\">Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n        <div class=\"btn-group page-btns\" role=\"group\" aria-label=\"Search\">\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(0)\" [disabled]=\"groups.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n<!--            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(-1)\" [disabled]=\"prev_cursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>-->\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(1)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error when querying groups: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 320px\">Group ID</th>\r\n        <th>Name</th>\r\n        <th style=\"width: 180px\">Last Update</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"groups.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No groups found - change the filter criteria or add new user groups.</td>\r\n      </tr>\r\n      <tr *ngFor=\"let g of groups; index as i;\">\r\n        <td (click)=\"viewGroup(g);\">{{g.id}}</td>\r\n        <td (click)=\"viewGroup(g);\">{{g.name}}</td>\r\n        <td (click)=\"viewGroup(g);\">{{g.update_time}}</td>\r\n        <td *ngIf=\"deleteAllowed() && g.id === systemUserId\"></td>\r\n        <td *ngIf=\"deleteAllowed() && g.id !== systemUserId\" class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteGroup($event, i, g);\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {Leaderboard} from '../../console.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {JSONEditor, Mode} from 'vanilla-jsoneditor';\r\n\r\n@Component({\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.scss']\r\n})\r\nexport class LeaderboardDetailsComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editor') private editor: ElementRef<HTMLElement>;\r\n\r\n  public orderString = {\r\n    0: 'Ascending',\r\n    1: 'Descending',\r\n  };\r\n  public operatorString = {\r\n    0: 'Best',\r\n    1: 'Set',\r\n    2: 'Increment',\r\n    3: 'Decrement',\r\n  };\r\n\r\n  private jsonEditor: JSONEditor;\r\n  public leaderboard: Leaderboard;\r\n  public error = '';\r\n\r\n  constructor(private readonly route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.leaderboard = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditor = new JSONEditor({\r\n      target: this.editor.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: true,\r\n        content:{text:this.leaderboard.metadata ?? ''},\r\n      },\r\n    });\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"add-border mb-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"id\">ID</label>\r\n      </div>\r\n      <input type=\"text\" id=\"id\" placeholder=\"ID\" [value]=\"leaderboard.id\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"authoritative\">Authoritative</label>\r\n      </div>\r\n      <input type=\"text\" id=\"authoritative\" placeholder=\"Authoritative\" [value]=\"leaderboard.authoritative\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"sortorder\">Sort Order</label>\r\n      </div>\r\n      <input type=\"text\" id=\"sortorder\" placeholder=\"Sort Order\" [value]=\"orderString[leaderboard.sort_order]\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"operator\">Operator</label>\r\n      </div>\r\n      <input type=\"text\" id=\"operator\" placeholder=\"Operator\" [value]=\"operatorString[leaderboard.operator]\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"reset\">Reset Schedule</label>\r\n      </div>\r\n      <input type=\"text\" id=\"reset\" placeholder=\"Not Set\" [value]=\"leaderboard.reset_schedule\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"create_time\">Create Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"create_time\" placeholder=\"Create Time\" [value]=\"leaderboard.create_time\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row add-border-single-row-bottom\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"reset\">Prev Reset</label>\r\n      </div>\r\n      <input type=\"text\" id=\"prev_reset\" placeholder=\"Not Set\" [value]=\"leaderboard.prev_reset\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"create_time\">Next Reset</label>\r\n      </div>\r\n      <input type=\"text\" id=\"next_reset\" placeholder=\"Create Time\" [value]=\"leaderboard.next_reset\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mt-4\" *ngIf=\"leaderboard.tournament\">\r\n  <h6>Tournament</h6>\r\n  <hr class=\"mb-4\"/>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"title\">Title</label>\r\n      </div>\r\n      <input type=\"text\" id=\"title\" placeholder=\"Title\" [value]=\"leaderboard.title\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"description\">Description</label>\r\n      </div>\r\n      <input type=\"text\" id=\"description\" placeholder=\"Description\" [value]=\"leaderboard.description\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"category\">Category</label>\r\n      </div>\r\n      <input type=\"text\" id=\"category\" placeholder=\"Not Set\" [value]=\"leaderboard.category\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"max_num_score\">Max Num Score</label>\r\n      </div>\r\n      <input type=\"text\" id=\"max_num_score\" placeholder=\"Not Set\" [value]=\"leaderboard.max_num_score\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"size\">Size</label>\r\n      </div>\r\n      <input type=\"text\" id=\"size\" placeholder=\"Not Set\" [value]=\"leaderboard.size\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"max_size\">Max Size</label>\r\n      </div>\r\n      <input type=\"text\" id=\"max_size\" placeholder=\"Not Set\" [value]=\"leaderboard.max_size\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"duration\">Duration</label>\r\n      </div>\r\n      <input type=\"text\" id=\"duration\" placeholder=\"Not Set\" [value]=\"leaderboard.duration\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"join_required\">Join Required</label>\r\n      </div>\r\n      <input type=\"text\" id=\"join_required\" placeholder=\"Not Set\" [value]=\"leaderboard.join_required\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"start_time\">Start Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"start_time\" placeholder=\"Not Set\" [value]=\"leaderboard.start_time\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"end_time\">End Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"end_time\" placeholder=\"Not Set\" [value]=\"leaderboard.end_time\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"start_active\">Start Active</label>\r\n      </div>\r\n      <input type=\"text\" id=\"start_active\" placeholder=\"Not Set\" [value]=\"leaderboard.start_active\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"end_active\">End Active</label>\r\n      </div>\r\n      <input type=\"text\" id=\"end_active\" placeholder=\"Not Set\" [value]=\"leaderboard.end_active\" class=\"form-control-plaintext form-control-sm my-2\" disabled readonly>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card p-2 mb-3 jsoneditor\" style=\"height: 400px\">\r\n  <div #editor style=\"height: 400px\"></div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ConsoleService, Leaderboard, UserRole} from '../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.scss']\r\n})\r\nexport class LeaderboardComponent implements OnInit {\r\n  public leaderboard: Leaderboard;\r\n  public error = '';\r\n\r\n  public views = [\r\n    {label: 'Details', path: 'details'},\r\n    {label: 'Records', path: 'records'},\r\n  ];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.leaderboard = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  deleteLeaderboard(event): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        this.error = '';\r\n        this.consoleService.deleteLeaderboard('', this.leaderboard.id).subscribe(() => {\r\n          this.error = '';\r\n          this.router.navigate(['/leaderboards']);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_DEVELOPER;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LeaderboardResolver implements Resolve<Leaderboard> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Leaderboard> {\r\n    const leaderboardId = route.paramMap.get('id');\r\n    return this.consoleService.getLeaderboard('', leaderboardId);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Leaderboard</h2>\r\n<div class=\"leaderboard-top-nav d-flex justify-content-between align-items-baseline mb-3\">\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/leaderboards']\">Leaderboards</a></li>\r\n      <li class=\"breadcrumb-item active\">{{leaderboard.id}}</li>\r\n    </ol>\r\n  </nav>\r\n\r\n  <div>\r\n    <button *ngIf=\"deleteAllowed()\" (click)=\"deleteLeaderboard($event)\" type=\"button\" class=\"btn btn-danger btn-danger-icon\"><img class=\"mr-2\" src=\"/static/svg/bin-red.svg\" alt=\"\" width=\"13\" height=\"13\">Delete Leaderboard</button>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<nav ngbNav #leaderboardNav=\"ngbNav\" class=\"navbar-expand-sm p-0 mb-3\">\r\n  <div *ngFor=\"let v of views\">\r\n    <ng-container [ngbNavItem]=\"v.path\">\r\n      <a ngbNavLink routerLinkActive=\"account-link-active\" [routerLink]=\"['/leaderboards', leaderboard.id, v.path]\">{{v.label}}</a>\r\n    </ng-container>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {\r\n  ApiLeaderboardRecord, ApiLeaderboardRecordList,\r\n  ConsoleService, Leaderboard,\r\n  UserRole,\r\n} from '../../console.service';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthenticationService} from '../../authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './records.component.html',\r\n  styleUrls: ['./records.component.scss']\r\n})\r\nexport class LeaderboardRecordsComponent implements OnInit {\r\n  public error = '';\r\n\r\n  public leaderboard: Leaderboard;\r\n  public records: Array<ApiLeaderboardRecord> = [];\r\n  public recordsMetadataOpen: Array<boolean> = [];\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.records.length = 0;\r\n        this.records.push(...d[0].records);\r\n        this.nextCursor = d[0].next_cursor;\r\n        this.prevCursor = d[0].prev_cursor;\r\n        this.recordsMetadataOpen.length = this.records.length;\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    this.route.parent.data.subscribe(\r\n      d => {\r\n        this.leaderboard = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  loadRecords(state: number): void {\r\n    let cursor = '';\r\n    switch (state) {\r\n      case -1:\r\n        cursor = this.prevCursor;\r\n        break;\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n\r\n    this.consoleService.listLeaderboardRecords('', this.leaderboard.id, null, 100, cursor, null).subscribe(d => {\r\n      this.error = '';\r\n\r\n      this.nextCursor = d.next_cursor;\r\n      this.prevCursor = d.prev_cursor;\r\n\r\n      this.records.length = 0;\r\n      this.records.push(...d.records);\r\n      this.recordsMetadataOpen.length = 0; // wipe old records\r\n      this.recordsMetadataOpen.length = this.records.length;\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  deleteRecord(event, i: number, r: ApiLeaderboardRecord): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteLeaderboardRecord('', r.leaderboard_id, r.owner_id).subscribe(() => {\r\n          this.error = '';\r\n          this.records.splice(i, 1);\r\n          this.recordsMetadataOpen.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LeaderboardRecordsResolver implements Resolve<ApiLeaderboardRecordList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiLeaderboardRecordList> {\r\n    const leaderboardId = route.parent.paramMap.get('id');\r\n    return this.consoleService.listLeaderboardRecords('', leaderboardId, null, 100, null, null);\r\n  }\r\n}\r\n","<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters mb-3\">\r\n  <div class=\"col d-flex justify-content-between no-gutters\">\r\n    <div class=\"col-md-9\"></div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n      <div class=\"btn-group page-btns\" role=\"group\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadRecords(0)\" [disabled]=\"records.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadRecords(-1)\" [disabled]=\"prevCursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"loadRecords(1)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th style=\"width: 380px\">Owner ID</th>\r\n        <th>Username</th>\r\n        <th style=\"width: 150px\">Score</th>\r\n        <th style=\"width: 150px\">Subscore</th>\r\n        <th style=\"width: 150px\">Rank</th>\r\n        <th style=\"width: 150px\">No. of scores</th>\r\n        <th style=\"width: 180px\">Expiry Time</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"records.length === 0\">\r\n        <td colSpan=\"8\" class=\"text-muted\">No records found.</td>\r\n      </tr>\r\n\r\n      <ng-template ngFor let-i=\"index\" let-r [ngForOf]=\"records\">\r\n        <tr>\r\n          <td>\r\n            <div class=\"arrow\" (click)=\"recordsMetadataOpen[i]=!recordsMetadataOpen[i]\">\r\n              <div class=\"arrow-right\" *ngIf=\"!recordsMetadataOpen[i]\"></div>\r\n              <div class=\"arrow-down\" *ngIf=\"recordsMetadataOpen[i]\"></div>\r\n            </div>\r\n            {{r.owner_id}}\r\n          </td>\r\n          <td>{{r.username}}</td>\r\n          <td>{{r.score}}</td>\r\n          <td>{{r.subscore}}</td>\r\n          <td>{{r.rank}}</td>\r\n          <td>{{r.num_score}}</td>\r\n          <td>{{r.expiry_time ? r.expiry_time : '-'}}</td>\r\n          <td class=\"text-center\" *ngIf=\"deleteAllowed()\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRecord($event, i, r);\">Delete</button></td>\r\n        </tr>\r\n        <tr *ngIf=\"recordsMetadataOpen[i]\">\r\n          <td colspan=\"7\" class=\"align-middle\"><pre class=\"pre-wrap m-0 p-0\"><small>{{r.metadata}}</small></pre></td>\r\n        </tr>\r\n      </ng-template>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {ConsoleService, Leaderboard, LeaderboardList, UserRole} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './leaderboards.component.html',\r\n  styleUrls: ['./leaderboards.component.scss']\r\n})\r\nexport class LeaderboardsComponent implements OnInit {\r\n  public error = '';\r\n  public leaderboards: Array<Leaderboard> = [];\r\n\r\n  public nextCursor: string = \"\";\r\n  public leaderboardsCount: number = 0;\r\n  public orderString = {\r\n    0: 'Ascending',\r\n    1: 'Descending',\r\n  };\r\n  public operatorString = {\r\n    0: 'Best',\r\n    1: 'Set',\r\n    2: 'Increment',\r\n    3: 'Decrement',\r\n  };\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const qp = this.route.snapshot.queryParamMap;\r\n    this.nextCursor = qp.get('cursor');\r\n\r\n    if (this.nextCursor && this.nextCursor !== '') {\r\n      this.search(1);\r\n    } else {\r\n      this.search(0);\r\n    }\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_DEVELOPER;\r\n  }\r\n\r\n  deleteLeaderboard(event, i: number, l: Leaderboard): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteLeaderboard('', l.id).subscribe(() => {\r\n          this.error = '';\r\n          this.leaderboards.splice(i, 1);\r\n          this.leaderboardsCount--;\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  viewLeaderboardEntries(l: Leaderboard): void {\r\n    this.router.navigate(['/leaderboards', l.id], {relativeTo: this.route});\r\n  }\r\n\r\n  search(state: number): void {\r\n    let cursor = '';\r\n    switch (state) {\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n\r\n    this.consoleService.listLeaderboards('', cursor).subscribe(d => {\r\n      this.error = '';\r\n\r\n      this.leaderboards.length = 0;\r\n      this.leaderboards.push(...d.leaderboards);\r\n      this.leaderboardsCount = d.total;\r\n      this.nextCursor = d.cursor;\r\n\r\n      this.router.navigate([], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          cursor\r\n        },\r\n        queryParamsHandling: 'merge',\r\n      });\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LeaderboardListResolver implements Resolve<LeaderboardList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<LeaderboardList> {\r\n    return this.consoleService.listLeaderboards('');\r\n  }\r\n}\r\n","\r\n<div class=\"row no-gutters\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <h2 class=\"pb-1\">Leaderboards</h2>\r\n      <h6 class=\"pb-4\">{{leaderboardsCount}} leaderboards found.</h6>\r\n    </div>\r\n    <div class=\"col-md-3 justify-content-end text-right\">\r\n        <div class=\"btn-group page-btns\" role=\"group\" aria-label=\"Search\">\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(0)\" [disabled]=\"leaderboards.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(1)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error while processing request: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<table class=\"table table-sm table-bordered table-hover\">\r\n  <thead class=\"thead-light\">\r\n  <tr>\r\n    <th>Leaderboard ID</th>\r\n    <th style=\"width: 130px\">Sort Order</th>\r\n    <th style=\"width: 130px\">Operator</th>\r\n    <th style=\"width: 130px\">Reset Schedule</th>\r\n    <th style=\"width: 100px\">Authoritative</th>\r\n    <th style=\"width: 100px\">Tournament</th>\r\n    <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let l of leaderboards; index as i\">\r\n      <td (click)=\"viewLeaderboardEntries(l);\">{{l.id}}</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\">{{orderString[l.sort_order]}}</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\">{{operatorString[l.operator]}}</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\">{{l.reset_schedule === '' ? '-' : l.reset_schedule}}</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\" *ngIf=\"l.authoritative\" class=\"text-center\">Yes</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\" *ngIf=\"!l.authoritative\" class=\"text-center\">No</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\" *ngIf=\"l.tournament\" class=\"text-center\">Yes</td>\r\n      <td (click)=\"viewLeaderboardEntries(l);\" *ngIf=\"!l.tournament\" class=\"text-center\">No</td>\r\n      <td *ngIf=\"deleteAllowed()\" class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteLeaderboard($event, i, l);\">Delete</button></td>\r\n    </tr>\r\n    <tr *ngIf=\"leaderboards.length === 0\"><td colspan=\"7\" class=\"text-muted\">No leaderboards were found.</td></tr>\r\n  </tbody>\r\n</table>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {\r\n  ActivatedRoute,\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot, UrlTree\r\n} from '@angular/router';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {SegmentService} from 'ngx-segment-analytics';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public error = '';\r\n  public loginForm!: UntypedFormGroup;\r\n  public submitted!: boolean;\r\n  public mfaEnabled = false;\r\n  private returnUrl!: string;\r\n\r\n  constructor(\r\n    public readonly router: Router,\r\n    private segment: SegmentService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly authService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!environment.nt) {\r\n      this.segment.page('/login');\r\n    }\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\r\n      code: [{ value: '', disabled: true }, Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(8)])],\r\n    });\r\n    this.returnUrl = this.route.snapshot.queryParams.next || '/';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.f.username.value, this.f.password.value, this.f.code.value)\r\n      .subscribe(response => {\r\n        this.loginForm.reset();\r\n        this.submitted = false;\r\n        if (response.body.mfa_code && this.authService.mfaRequired) {\r\n          this.router.navigate(['mfa'], {relativeTo: this.route});\r\n        } else {\r\n          this.router.navigate([this.returnUrl]);\r\n        }\r\n      }, err => {\r\n        if (err.status === 403) {\r\n          // MFA is enabled for this account, require code.\r\n          this.mfaEnabled = true;\r\n          this.f.username.disable();\r\n          this.f.password.disable();\r\n          this.f.code.enable();\r\n        } else {\r\n          this.error = err;\r\n          this.submitted = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  get f(): any {\r\n    return this.loginForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private readonly authService: AuthenticationService, private readonly router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.authService.session && !this.authService.session.mfa_code && !this.authService.mfaRequired) {\r\n      const _ = this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column flex-lg-row h-100 relative\">\r\n  <img src=\"/static/svg/logo-white.svg\" alt=\"Nakama Logo\" width=\"175\" height=\"43\" class=\"logo\">\r\n\r\n  <div class=\"login-panel\">\r\n    <div class=\"align-self-center login-form\">\r\n      <div *ngIf=\"!router.url.endsWith('mfa'); else mfa\" class=\"px-4\">\r\n        <h3 class=\"login-title mb-4\">Sign in to continue to the Nakama Dashboard</h3>\r\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\">\r\n          {{error}}\r\n        </div>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" [ngClass]=\"{'was-validated': submitted}\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" required autofocus\r\n                    [ngClass]=\"{'is-invalid': f.username.dirty && f.username.errors}\" />\r\n            <div class=\"invalid-tooltip\" [hidden]=\"f.username.disabled || f.username.pristine || f.username.valid\">Please enter a username.</div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" required [ngClass]=\"{'is-invalid': f.password.dirty && f.password.errors}\" />\r\n            <div class=\"invalid-tooltip\" [hidden]=\"f.password.disabled || f.password.pristine || f.password.valid\">Password must be at least 8 characters.</div>\r\n          </div>\r\n          <div [hidden]=\"!mfaEnabled\" class=\"form-group\">\r\n            <label for=\"code\">MFA Code</label>\r\n            <input type=\"code\" id=\"code\" class=\"form-control\" formControlName=\"code\" required [ngClass]=\"{'is-invalid': f.code.dirty && f.code.errors}\"/>\r\n            <div class=\"invalid-tooltip\" [hidden]=\"f.code.disabled || f.code.pristine || f.code.valid\">Code must contain 6 digits.</div>\r\n          </div>\r\n          <button class=\"btn btn-primary btn-lg btn-block\" [disabled]=\"!loginForm.valid\">{{mfaEnabled ? 'Verify' : 'Login'}}</button>\r\n        </form>\r\n      </div>\r\n      <ng-template #mfa>\r\n        <router-outlet></router-outlet>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"login-panel\">\r\n    <div class=\"heroic-stack\">\r\n      <div class=\"\">\r\n        <img src=\"/static/svg/hiro-logo.svg\" alt=\"Hiro Logo\" width=\"110\" height=\"50\" class=\"mb-3\">\r\n        <p>A metagame framework built on Nakama to add virtual store, rewards, event leaderboards and much more rapidly and flexibly to your game. <a href=\"https://www.youtube.com/playlist?list=PLOAExZcDNj9sWny_J8J5ARkxDTwAV0i6f&utm_source=NOSS%20Sign-In&utm_medium=Banner&utm_campaign=NOSS%20Reconstructing%20Fun%20Sign-In\" target=\"_blank\">RECONSTRUCTING FUN</a> on YouTube shows you how.</p>\r\n        <a class=\"login-link\" href=\"https://heroiclabs.com/hiro/?utm_source=NOSS%20Sign-In&utm_medium=Banner&utm_campaign=NOSS%20Hiro%20Sign-In\" target=\"_blank\">Explore Hiro</a>\r\n      </div>\r\n      <hr>\r\n      <div class=\"\">\r\n        <img src=\"/static/svg/satori-logo.svg\" alt=\"Satori Logo\" width=\"134\" height=\"50\" class=\"mb-3\">\r\n        <p>LiveOps for your live services game. Live events, Experiments, Feature Flags, Audience Segmentation and Analytics built to work independently but beautifully with Nakama.</p>\r\n        <a class=\"login-link\" href=\"https://heroiclabs.com/satori/?utm_source=NOSS%20Sign-In&utm_medium=Banner&utm_campaign=NOSS%20Satori%20Sign-In\" target=\"_blank\">Explore Satori</a>\r\n      </div>\r\n      <hr>\r\n      <div>\r\n        <div class=\"d-flex align-items-center mb-3\">\r\n          <img src=\"/static/svg/calendar.svg\" alt=\"Calendar\">\r\n          <span class=\"font-weight-bold ml-2\" style=\"font-size: 20px;\">Working at a Game Studio?</span>\r\n        </div>\r\n        <p>Ready to take your game development to the next level? Contact us for a free 45 minute demo call.</p>\r\n\r\n        <a class=\"login-link-pink\" href=\"https://heroiclabs.com/bookademo?utm_source=NOSS%20Sign-In&utm_medium=Banner&utm_campaign=NOSS%20Book%20a%20Demo%20Sign-In\" target=\"_blank\">\r\n          <img src=\"/static/svg/phone.svg\" alt=\"Phone\">\r\n          <span>Schedule a call with us</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Params, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {\r\n  ConsoleService,\r\n  MatchList,\r\n  MatchListMatch,\r\n  MatchState,\r\n  RealtimeUserPresence\r\n} from '../console.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\nimport {catchError, mergeMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: './matches.component.html',\r\n  styleUrls: ['./matches.component.scss']\r\n})\r\nexport class MatchesComponent implements OnInit {\r\n  public error = '';\r\n  public matches: Array<MatchListMatch> = [];\r\n  public matchStates: Array<MatchState> = [];\r\n  public matchStatesOpen: Array<boolean> = [];\r\n  public updated = false;\r\n  public searchForm1: UntypedFormGroup;\r\n  public searchForm2: UntypedFormGroup;\r\n  public searchForm3: UntypedFormGroup; // Authoritative\r\n  public type: number;\r\n  public activeType = 'All';\r\n  public readonly types = ['All', 'Authoritative', 'Relayed'];\r\n  public activeNode = 'All Nodes';\r\n  public nodes: Array<string> = ['All Nodes'];\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly consoleService: ConsoleService,\r\n  ) {\r\n    this.searchForm1 = this.formBuilder.group({\r\n      match_id: '',\r\n    });\r\n    this.searchForm2 = this.formBuilder.group({\r\n      match_id: '',\r\n    });\r\n    this.searchForm3 = this.formBuilder.group({\r\n      query: '',\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const qp = this.route.snapshot.queryParamMap;\r\n\r\n    this.f1.match_id.setValue(qp.get('match_id'));\r\n    this.f2.match_id.setValue(qp.get('match_id'));\r\n    this.f3.query.setValue(qp.get('query'));\r\n\r\n    const qType = qp.get('type');\r\n    this.type = Number(qType);\r\n    const qNode = qp.get('node');\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        if (d) {\r\n          if (d[0]) {\r\n            this.error = '';\r\n            this.matches.length = 0;\r\n            this.matches.push(...d[0].matches);\r\n            this.matchStates.length = this.matches.length;\r\n            this.matchStatesOpen.length = this.matches.length;\r\n          }\r\n          if (d[1]) {\r\n            this.nodes.push(...d[1]);\r\n          }\r\n          if (d.error) {\r\n            this.error = d.error;\r\n          }\r\n        }\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n\r\n    if (qType === null) {\r\n      this.type = 0;\r\n      this.activeType = this.types[0];\r\n    } else {\r\n      if (this.type == 0 || this.type === 1 || this.type === 2) {\r\n        this.activeType = this.types[this.type];\r\n      } else {\r\n        this.error = 'Invalid type';\r\n      }\r\n    }\r\n    if (qNode !== null) {\r\n      let found = false;\r\n      this.nodes.forEach((node) => {\r\n        if (qNode === node) {\r\n          this.activeNode = qNode;\r\n          found = true;\r\n        }\r\n      });\r\n      if (!found) {\r\n        this.error = 'Invalid node.';\r\n      }\r\n    }\r\n  }\r\n\r\n  search(): void {\r\n    const type = this.getType();\r\n    this.type = type;\r\n    list(this.consoleService, type, type === 0 ? this.f1.match_id.value : this.f2.match_id.value, this.f3.query.value, this.activeNode === this.nodes[0] ? '' : this.activeNode)\r\n      .subscribe(d => this.postData(d), err => { this.error = err; });\r\n  }\r\n\r\n  postData(d): void {\r\n    this.error = '';\r\n    this.matches.length = 0;\r\n    this.matches.push(...d.matches);\r\n    this.matchStates.length = this.matches.length;\r\n    this.matchStatesOpen.length = this.matches.length;\r\n\r\n    let params: Params;\r\n    switch (this.type) {\r\n      case (0):\r\n        params = {type: this.type, match_id: this.f1.match_id.value};\r\n        break;\r\n      case (1):\r\n        params = {\r\n          type: this.type,\r\n          query: this.f3.query.value,\r\n        };\r\n        if (this.activeNode !== this.nodes[0]) {\r\n          params.node = this.activeNode;\r\n        }\r\n        break;\r\n      case (2):\r\n        params = {type: this.type, match_id: this.f2.match_id.value};\r\n        break;\r\n    }\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams: params,\r\n    });\r\n  }\r\n\r\n  getType(): number {\r\n    let tp = 0;\r\n    this.types.forEach((t, ix) => {\r\n        if (this.activeType === t) {\r\n          tp = ix;\r\n        }\r\n      });\r\n    return tp;\r\n  }\r\n\r\n  getMatchState(i: number, match: MatchListMatch): void {\r\n    if (this.matchStatesOpen[i]) {\r\n      // match state view was open already...\r\n      return;\r\n    }\r\n\r\n    this.matchStates[i] = null;\r\n    this.error = '';\r\n    this.consoleService.getMatchState('', match.api_match.match_id).subscribe(d => {\r\n      this.matchStatesOpen[i] = true;\r\n      this.matchStates[i] = d;\r\n    }, err => {\r\n      this.matchStatesOpen[i] = false;\r\n      this.matchStates[i] = null;\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  getMatchPresencesString(ps: Array<RealtimeUserPresence>): string {\r\n    return JSON.stringify(ps);\r\n  }\r\n\r\n  get f1(): any {\r\n    return this.searchForm1.controls;\r\n  }\r\n  get f2(): any {\r\n    return this.searchForm2.controls;\r\n  }\r\n  get f3(): any {\r\n    return this.searchForm3.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class MatchesResolver implements Resolve<MatchList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<MatchList> {\r\n    const type = Number(route.queryParamMap.get('type'));\r\n    return list(this.consoleService, type, route.queryParamMap.get('match_id'), route.queryParamMap.get('query'), route.queryParamMap.get('node')).pipe(catchError(error => {\r\n      route.data = {...route.data, error};\r\n      return of(null);\r\n    }));\r\n  }\r\n}\r\n\r\nfunction list(service: ConsoleService, type: number, matchId: string, query: string, node: string): Observable<MatchList> {\r\n  switch (type) {\r\n  case (0):\r\n    return service.listMatches('', null, null, null, null, null, matchId);\r\n  case (1):\r\n    return service.listMatches('', null, true, null, null, null, null, query, node);\r\n  case (2):\r\n    return service.listMatches('', null, false, null, null, null, matchId);\r\n  }\r\n  return of(null);\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class NodesResolver implements Resolve<string[]> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string[]> {\r\n    return this.consoleService.getStatus('').pipe(mergeMap(r => of(r.nodes.map(n => n.name))))\r\n      .pipe(catchError(error => {\r\n        route.data = {...route.data, error};\r\n        return of([]);\r\n      }));\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Active Matches</h2>\r\n<h6 class=\"pb-4\">{{matches.length}} running matches found.</h6>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"input-group mb-1\">\r\n  <div class=\"input-group-prepend\">\r\n    <div class=\"btn-group\" ngbDropdown>\r\n      <button type=\"button\" class=\"btn btn-outline-secondary dropdown-radius-right\" ngbDropdownToggle>\r\n        <span *ngIf=\"activeType && activeType !== ''\">{{activeType}}</span>\r\n      </button>\r\n      <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n        <button *ngFor=\"let t of types\" type=\"button\" ngbDropdownItem (click)=\"activeType = t;\">{{t}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"input-group-append\">\r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"search()\">Search</button>\r\n  </div>\r\n</div>\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [hidden]=\"activeType !== 'All'\" [formGroup]=\"searchForm1\" (ngSubmit)=\"search()\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"match_id\" placeholder=\"Filter by match ID\"/>\r\n        </div>\r\n      </form>\r\n      <form [hidden]=\"activeType !== 'Relayed'\" [formGroup]=\"searchForm2\" (ngSubmit)=\"search()\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"match_id\" placeholder=\"Filter by match ID\"/>\r\n        </div>\r\n      </form>\r\n      <form [hidden]=\"activeType !== 'Authoritative'\" [formGroup]=\"searchForm3\" (ngSubmit)=\"search()\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"query\" placeholder=\"Filter by query or match ID\"/>\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\" ngbDropdown>\r\n              <button type=\"button\" class=\"btn btn-outline-secondary dropdown-radius-left\" ngbDropdownToggle>\r\n                <span *ngIf=\"activeNode && activeNode !== ''\">{{activeNode}}</span>\r\n              </button>\r\n              <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n                <button *ngFor=\"let n of nodes\" type=\"button\" ngbDropdownItem (click)=\"activeNode = n;\">{{n}}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-bordered\">\r\n    <thead class=\"thead-light\">\r\n    <tr>\r\n      <th><span [class.pl-3]=\"matches.length > 0\">Match ID</span></th>\r\n      <th style=\"width: 140px\">Presence Count</th>\r\n      <th style=\"width: 100px\">Authoritative</th>\r\n      <th style=\"width: 100px\">Node</th>\r\n      <th style=\"width: 130px\">Handler Name</th>\r\n      <th style=\"width: 90px\">Tick Rate</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngIf=\"matches.length === 0\">\r\n      <td colSpan=\"8\" class=\"text-muted\">No realtime matches were found.</td>\r\n    </tr>\r\n\r\n    <ng-template ngFor let-i=\"index\" let-m [ngForOf]=\"matches\">\r\n      <tr>\r\n        <td>\r\n          <div class=\"arrow\" *ngIf=\"m.api_match.authoritative\" (click)=\"getMatchState(i, m); matchStatesOpen[i]=!matchStatesOpen[i];\">\r\n            <div class=\"arrow-right\" *ngIf=\"!matchStatesOpen[i]\"></div>\r\n            <div class=\"arrow-down\" *ngIf=\"matchStatesOpen[i]\"></div>\r\n          </div>\r\n\r\n          <div *ngIf=\"!m.api_match.authoritative\" class=\"d-inline-block mr-3\"></div>\r\n          {{m.api_match.match_id}}\r\n        </td>\r\n        <td>{{m.api_match.size}}</td>\r\n        <td class=\"text-center\">\r\n          <span *ngIf=\"m.api_match.authoritative\">Yes</span>\r\n          <span *ngIf=\"!m.api_match.authoritative\">No</span>\r\n        </td>\r\n        <td>{{m.node}}</td>\r\n        <td>{{m.api_match.handler_name}}</td>\r\n        <td>{{m.api_match.authoritative ? m.api_match.tick_rate : '-'}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"matchStatesOpen[i]\" class=\"open-row\">\r\n        <td colspan=\"6\" class=\"align-middle\">\r\n\r\n          <div class=\"d-flex p-0\">\r\n            <div class=\"p-3 w-33 border\">\r\n              <small><b>Match Label</b></small>\r\n\r\n              <pre class=\"pre-wrap m-0 p-0\"><small>{{m.api_match.label}}</small></pre>\r\n            </div>\r\n\r\n            <div class=\"p-3 w-33 border border-left-0\">\r\n              <img *ngIf=\"!matchStates[i] || matchStates[i] === null\" src=\"/static/spinner.svg\" class=\"d-block\" width=\"16\">\r\n              <div *ngIf=\"matchStates[i] !== null\">\r\n                <small><b>Current Tick</b></small>\r\n                <pre class=\"pre-wrap m-0 p-0\"><small>{{matchStates[i].tick}}</small></pre>\r\n                <small><b>Match State</b></small>\r\n                <pre class=\"pre-wrap m-0 p-0\"><small>{{matchStates[i].state}}</small></pre>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"p-3 w-33 border border-left-0\">\r\n              <small><b>Match Presences</b></small>\r\n              <img *ngIf=\"!matchStates[i] || matchStates[i] === null\" src=\"/static/spinner.svg\" class=\"d-block\" width=\"16\">\r\n              <pre *ngIf=\"matchStates[i] !== null\" class=\"pre-wrap m-0 p-0\"><small>{{getMatchPresencesString(matchStates[i].presences)}}</small></pre>\r\n            </div>\r\n          </div>\r\n\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ConsoleService} from '../console.service';\r\nimport {AuthenticationService, MFAClaims} from '../authentication.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mfa-setup',\r\n  templateUrl: './mfa-setup.component.html',\r\n  styleUrls: ['./mfa-setup.component.scss']\r\n})\r\nexport class MfaSetupComponent implements OnInit {\r\n  @Input() required: boolean;\r\n\r\n  public codeForm: FormGroup;\r\n  public mfaCode: MFAClaims;\r\n  public submitted = false;\r\n  public downloadClicked = false;\r\n  public recoveryCodes: string[];\r\n  public error = '';\r\n\r\n  constructor(\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    public readonly router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.codeForm = this.formBuilder.group({\r\n      code: ['', Validators.required],\r\n    });\r\n\r\n    this.mfaCode = this.authService.mfa;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.codeForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.mfaSet(this.f.code.value).subscribe(response => {\r\n      this.codeForm.reset();\r\n      this.submitted = false;\r\n      this.recoveryCodes = response.recovery_codes;\r\n    }, err => {\r\n      this.error = err;\r\n      this.submitted = false;\r\n    });\r\n  }\r\n\r\n  mfaUrl(): string {\r\n    return decodeURIComponent(this.mfaCode.mfa_url);\r\n  }\r\n\r\n  get f(): any {\r\n    return this.codeForm.controls;\r\n  }\r\n\r\n  downloadRecoveryCodes(): void {\r\n    const codes = this.recoveryCodes.map(((v, i) => i % 2 === 0 ? '\\n' + v : v));\r\n    const link = document.createElement('a');\r\n\r\n    link.href = window.URL.createObjectURL(new Blob([codes.join(' ').trim()], { type: 'text/plain' }));\r\n    link.download = 'nakama_mfa_recovery_codes.txt';\r\n    link.click();\r\n    window.URL.revokeObjectURL(link.href);\r\n    this.downloadClicked = true;\r\n  }\r\n}\r\n","<h3 class=\"login-title mb-4\">Setup Multi-Factor Authentication</h3>\r\n<div class=\"container\">\r\n  <ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n    <h6 class=\"mr-2 d-inline font-weight-bold\">{{error}}</h6>\r\n  </ngb-alert>\r\n  <div class=\"row\">\r\n    <ng-container *ngIf=\"!recoveryCodes; else recoveryCodesBlock\">\r\n      <div>\r\n        <h5 style=\"font-size: 23px;\">Instructions</h5>\r\n        <form [formGroup]=\"codeForm\" (ngSubmit)=\"onSubmit()\" [ngClass]=\"{'was-validated': submitted}\">\r\n          <ol>\r\n            <div class=\"form-group\">\r\n              <li>Install an Authenticator app and use it to scan the QR code.\r\n                <div>\r\n                  e.g.\r\n                  <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\" target=\"blank\" rel=\"noopener noreferrer\">Google Authenticator</a>\r\n                  or <a href=\"https://authy.com/download/\" target=\"blank\" rel=\"noopener noreferrer\">Authy</a>.\r\n                </div>\r\n              </li>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <li>Scan the QR code with your authenticator app.\r\n                <qrcode [qrdata]=\"mfaUrl()\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\r\n              </li>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <li>\r\n                <label class=\"d-inline\" for=\"code\">Insert 6-digit code from your authenticator app.</label>\r\n                <input class=\"form-control\" type=\"code\" id=\"code\" class=\"form-control\" formControlName=\"code\" required [ngClass]=\"{'is-invalid': f.code.dirty && f.code.errors}\" />\r\n              </li>\r\n            </div>\r\n          <button class=\"btn btn-primary btn-lg btn-block\" [disabled]=\"!codeForm.valid || submitted\">Verify</button>\r\n          </ol>\r\n        </form>\r\n      </div>\r\n      </ng-container>\r\n    <ng-template #recoveryCodesBlock>\r\n      <div>\r\n        <div class=\"alert alert-success mb-4\" role=\"alert\" *ngIf=\"!error && recoveryCodes\">\r\n          Multi-factor authentication has been successfully set up. Please download the recovery codes and keep them in a safe place.\r\n        </div>\r\n        <button class=\"btn btn-primary btn-lg btn-block mb-4\" (click)=\"downloadRecoveryCodes()\">Download Recovery Codes</button>\r\n        <button [disabled]=\"!downloadClicked\" class=\"btn btn-outline-primary btn-lg btn-block\" href=\"/\" (click)=\"this.router.navigateByUrl('/');\">Continue to Dashboard</button>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './purchases-list.component.html',\r\n  styleUrls: ['./purchases-list.component.scss']\r\n})\r\nexport class PurchasesListComponent implements OnInit {\r\n  public transactionId: string;\r\n  public searchForm: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = this.formBuilder.group({\r\n      transaction_id: [''],\r\n    });\r\n  }\r\n\r\n  search(): void {\r\n    this.transactionId = this.f.transaction_id.value;\r\n  }\r\n\r\n  get f(): any {\r\n    return this.searchForm.controls;\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Purchases</h2>\r\n\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"transaction_id\" placeholder=\"Search by transaction_id (purchaseToken for Play Store purchases)\"/>\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-primary dropdown-radius\" (click)=\"search()\">Search</button>\r\n            </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-purchases [transaction_id]=\"transactionId\"></app-purchases>\r\n","<h2 class=\"pb-4\">Runtime Modules</h2>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Failed to retrieve runtime information: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<table class=\"runtime-table mb-4 table table-sm table-bordered  mb-5\">\r\n  <thead class=\"thead-light\">\r\n    <tr>\r\n      <th>Go Modules</th>\r\n      <th style=\"width: 180px\">Last Modified</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.go_modules\"><td>{{m.path}}</td><td style=\"width: 200px\">{{m.mod_time}}</td></tr>\r\n    <tr *ngIf=\"runtimeInfo.go_modules.length === 0\"><td class=\"text-muted\">No Go modules were found.</td><td></td></tr>\r\n  </tbody>\r\n  <thead class=\"thead-light\">\r\n    <tr><th colspan=\"2\">Lua Modules</th></tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.lua_modules\"><td>{{m.path}}</td><td style=\"width: 200px\">{{m.mod_time}}</td></tr>\r\n    <tr *ngIf=\"runtimeInfo.lua_modules.length === 0\"><td class=\"text-muted\">No Lua modules were found.</td><td></td></tr>\r\n  </tbody>\r\n  <thead class=\"thead-light\">\r\n    <tr><th colspan=\"2\">JavaScript Modules</th></tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.js_modules\"><td>{{m.path}}</td><td style=\"width: 200px\">{{m.mod_time}}</td></tr>\r\n    <tr *ngIf=\"runtimeInfo.js_modules.length === 0\"><td class=\"text-muted\">No JavaScript modules were found.</td><td></td></tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h4 class=\"mb-4 section-divider d-flex\">Registered RPC Functions</h4>\r\n\r\n<table class=\"runtime-table table table-sm table-bordered\">\r\n  <thead class=\"thead-light\">\r\n    <tr><th colspan=\"2\">Go RPC Functions</th></tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.go_rpc_functions\">\r\n      <td><code>{{m}}</code></td>\r\n      <td style=\"width: 180px; text-align: center;\"><a class=\"btn btn-sm btn-secondary\" [routerLink]=\"['/apiexplorer']\" [queryParams]=\"{'endpoint': m}\">API Explorer</a></td>\r\n    </tr>\r\n    <tr *ngIf=\"runtimeInfo.go_rpc_functions.length === 0\"><td colspan=\"2\" class=\"text-muted\">No Go RPC functions were found.</td></tr>\r\n  </tbody>\r\n  <thead class=\"thead-light\">\r\n    <tr><th colspan=\"2\">Lua RPC Functions</th></tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.lua_rpc_functions\">\r\n      <td><code>{{m}}</code></td>\r\n      <td style=\"width: 180px; text-align: center;\"><a class=\"btn btn-sm btn-secondary\" [routerLink]=\"['/apiexplorer']\" [queryParams]=\"{'endpoint': m}\">API Explorer</a></td>\r\n    </tr>\r\n    <tr *ngIf=\"runtimeInfo.lua_rpc_functions.length === 0\"><td colspan=\"2\" class=\"text-muted\">No Lua RPC functions were found.</td></tr>\r\n  </tbody>\r\n  <thead class=\"thead-light\">\r\n    <tr><th colspan=\"2\">JavaScript RPC Functions</th></tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let m of runtimeInfo.js_rpc_functions\">\r\n      <td><code>{{m}}</code></td>\r\n      <td style=\"width: 180px; text-align: center;\"><a class=\"btn btn-sm btn-secondary\" [routerLink]=\"['/apiexplorer']\" [queryParams]=\"{'endpoint': m}\">API Explorer</a></td>\r\n    </tr>\r\n    <tr *ngIf=\"runtimeInfo.js_rpc_functions.length === 0\"><td colspan=\"2\" class=\"text-muted\">No JavaScript RPC functions were found.</td></tr>\r\n  </tbody>\r\n</table>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {ConsoleService, RuntimeInfo} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  templateUrl: './runtime.component.html',\r\n  styleUrls: ['./runtime.component.scss']\r\n})\r\nexport class RuntimeComponent implements OnInit, OnDestroy {\r\n  public error = '';\r\n  public runtimeInfo: RuntimeInfo;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.runtimeInfo = d[0];\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RuntimeResolver implements Resolve<RuntimeInfo> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RuntimeInfo> {\r\n    return this.consoleService.getRuntime('');\r\n  }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SessionInterceptor implements HttpInterceptor {\r\n  constructor(private readonly authenticationService: AuthenticationService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const session = this.authenticationService.session;\r\n    if (session && session.token) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${session.token}`\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import {Component, Output, EventEmitter, Input} from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-delete-confirm-dialog',\r\n  templateUrl: './delete-confirm-dialog.component.html',\r\n  styleUrls: ['./delete-confirm-dialog.component.scss']\r\n})\r\nexport class DeleteConfirmDialogComponent {\r\n  @Output() confirmed: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() canceled: EventEmitter<void> = new EventEmitter<void>();\r\n  title = 'Delete Confirmation';\r\n  message = 'Are you sure you want to delete this item?';\r\n  /*\r\nThis parameter is optional\r\nwe support two type of control\r\n1. numberValueControl  -> { title: \"\", id: \"\", defaultValue: number }. e.g.: Chat Message delete retain setting\r\n2. delete  -> control input for confirmation\r\n  * */\r\n  @Input() confirmDeleteForm: FormGroup;\r\n\r\n  closeModal(): void {\r\n    this.canceled.emit();\r\n  }\r\n\r\n  cancel(): void {\r\n    this.canceled.emit();\r\n  }\r\n\r\n  confirm(): void {\r\n    // if there is no form data pass or the form valid, confirmed can be emitted\r\n    if (!this.confirmDeleteForm || this.confirmDeleteForm.valid) {\r\n      this.confirmed.emit();\r\n    }\r\n  }\r\n\r\n  get f(): any {\r\n    return this.confirmDeleteForm.controls;\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ title }}</h4>\r\n  <button type=\"button\" class=\"close\" aria-describedby=\"Close\" aria-label=\"Close\" (click)=\"closeModal()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ message }}\r\n  <!--Currently,we support 2 type of form control in delete confirmation modal\r\n  1. Delete confirmation\r\n  2. numberValueControl-->\r\n  <div *ngIf=\"confirmDeleteForm\" class=\"d-flex flex-column justify-content-center\">\r\n    <form [formGroup]=\"confirmDeleteForm\" autocomplete=\"off\">\r\n      <div *ngIf=\"confirmDeleteForm.controls.numberValueControl\" class=\"mt-2\">\r\n        <p>\r\n          <b>{{ confirmDeleteForm.controls.numberValueControl.value.title }}</b>\r\n          <input type=\"number\" style=\"width: 80px;\"\r\n                 value=\"30\" min=\"0\"\r\n                 formControlName=\"{{ confirmDeleteForm.controls.numberValueControl.value.id }}\"/>\r\n        </p>\r\n      </div>\r\n      <input *ngIf=\"confirmDeleteForm.controls.delete\" type=\"text\" class=\"form-control\" id=\"delete-confirm\"\r\n             placeholder=\"Type 'DELETE' to confirm\" formControlName=\"delete\"\r\n             [ngClass]=\"{'is-invalid': f.delete.touched && f.delete.invalid}\"/>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"confirm()\">Delete</button>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbModal, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';\r\nimport {DeleteConfirmDialogComponent} from './delete-confirm-dialog/delete-confirm-dialog.component';\r\nimport {FormGroup} from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteConfirmService {\r\n  public required = false;\r\n\r\n  constructor(private modalService: NgbModal) {\r\n  }\r\n\r\n  openDeleteConfirmModal(\r\n    confirmedCallback: (formValue: any) => void,\r\n    formGroup: FormGroup = null,\r\n    title: string = '',\r\n    message: string = ''): void {\r\n    const modalOptions: NgbModalOptions = {\r\n      backdrop: false,\r\n      centered: true,\r\n    };\r\n    const modalRef = this.modalService.open(DeleteConfirmDialogComponent, modalOptions);\r\n    if (formGroup) {\r\n      modalRef.componentInstance.confirmDeleteForm = formGroup;\r\n    }\r\n    if (title) {\r\n      modalRef.componentInstance.title = title;\r\n    }\r\n    if (message) {\r\n      modalRef.componentInstance.message = message;\r\n    }\r\n    modalRef.componentInstance.confirmed.subscribe(() => {\r\n      confirmedCallback(formGroup?.value);\r\n      modalRef.close();\r\n    });\r\n    modalRef.componentInstance.canceled.subscribe(() => {\r\n      modalRef.close();\r\n    });\r\n  }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, OnInit, OnDestroy, Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport {ConsoleService, StatusList, StatusListStatus} from '../console.service';\r\nimport {Observable, of, Subscription, timer} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {catchError, mergeMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.scss']\r\n})\r\nexport class StatusComponent implements OnInit, OnDestroy {\r\n  public error = '';\r\n  public showDelta = false;\r\n  public statusData: StatusList;\r\n  public rateGraphData = [];\r\n  public latencyGraphData = [];\r\n  public inputGraphData = [];\r\n  public outputGraphData = [];\r\n  public rangeForm: UntypedFormGroup;\r\n  public readonly ranges = {\r\n    1: 'last 1 minute',\r\n    10: 'last 10 minutes',\r\n    30: 'last 30 minutes',\r\n    60: 'last 1 hour',\r\n    1440: 'last 24 hours',\r\n  };\r\n  public rangesKeys = Object.keys(this.ranges).map(n => +n);\r\n  public readonly colorScheme = {\r\n    domain: ['#5AA454', '#E44D25', '#1e59cf', '#7aa3e5', '#a8385d', '#d0bd00']\r\n  };\r\n  private readonly samples = 60; // Number of samples in the series\r\n  private refreshTimer: Observable<number>;\r\n  private $refreshTimer: Subscription;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.rangeForm = this.formBuilder.group({\r\n      rangeMinutes: [10], // Default range to 10 min window\r\n    });\r\n\r\n    this.route.data.subscribe(data => {\r\n      const nodeNames = data[0];\r\n      this.initData(nodeNames);\r\n      this.refresh();\r\n      this.refreshTimer = timer(0, this.getPeriod() * 1000);\r\n      this.$refreshTimer = this.refreshTimer.subscribe(_ => this.refresh());\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  private refresh(): void {\r\n    this.consoleService.getStatus('').subscribe(data => {\r\n      this.statusData = data;\r\n      this.rateGraphData = this.updateData(this.rateGraphData, 'avg_rate_sec', data);\r\n      this.latencyGraphData = this.updateData(this.latencyGraphData, 'avg_latency_ms', data);\r\n      this.inputGraphData = this.updateData(this.inputGraphData, 'avg_input_kbs', data);\r\n      this.outputGraphData = this.updateData(this.outputGraphData, 'avg_output_kbs', data);\r\n      // TODO: handle error\r\n    });\r\n  }\r\n\r\n  private generateSeries(): any {\r\n    let pointTs = new Date();\r\n    pointTs.setMilliseconds(0);\r\n    const timestamps = [];\r\n    for (let i = 0; i < this.samples; i++) {\r\n      pointTs = new Date(pointTs.getTime() - this.getPeriod() * 1000);\r\n      timestamps.push(pointTs);\r\n    }\r\n\r\n    return timestamps.reverse().map(p => {\r\n      return {\r\n        name: p,\r\n        value: 0,\r\n      };\r\n    });\r\n  }\r\n\r\n  private initData(names: string[]): void {\r\n    const series = this.generateSeries();\r\n    this.latencyGraphData = names.map(n => ({ name: n, series }));\r\n    this.rateGraphData = names.map(n => ({ name: n, series }));\r\n    this.inputGraphData = names.map(n => ({ name: n, series }));\r\n    this.outputGraphData = names.map(n => ({ name: n, series }));\r\n  }\r\n\r\n  private updateData(currentData: any, key: string, data: StatusList): any {\r\n    const statusList = data.nodes;\r\n    const updatedData = [];\r\n    const ts = data.timestamp;\r\n\r\n    // If a node is not present in the results anymore, append a new point with 0 value.\r\n    const currentNodes = currentData.map(d => d.name);\r\n    const dataNodes = statusList.map(d => d.name);\r\n    const missingNodes = this.diff(currentNodes, dataNodes);\r\n    for (const node of currentData) {\r\n      if (missingNodes.includes(node.name)) {\r\n        updatedData.push({\r\n          name: node.name,\r\n          series: this.shiftData(node.series, 0, ts),\r\n        });\r\n      }\r\n    }\r\n\r\n    // Update new and already existing nodes\r\n    for (const node of statusList) {\r\n      let newSeries = [];\r\n      let newData = {};\r\n      const currentSeries = currentData.find(d => d.name === node.name)?.series;\r\n      if (currentSeries) {\r\n        // A series for this node already exists, append new data point\r\n        newSeries = this.shiftData(currentSeries, node[key], ts);\r\n      } else {\r\n        // A series for this node does not exists yet, generate it and append data point\r\n        newSeries = this.shiftData(this.generateSeries(), node[key], ts);\r\n      }\r\n      newData = {\r\n        name: node.name,\r\n        series: newSeries,\r\n      };\r\n      updatedData.push(newData);\r\n    }\r\n\r\n    return updatedData;\r\n  }\r\n\r\n  private shiftData(data, value, ts): any {\r\n    const newData = data.slice(1);\r\n    newData.push({\r\n      name: new Date(ts),\r\n      value,\r\n    });\r\n\r\n    return newData;\r\n  }\r\n\r\n  private getPeriod(): number {\r\n    return Math.floor((this.f.rangeMinutes.value * 60) / this.samples);\r\n  }\r\n\r\n  public setRange(event): void {\r\n    this.rangeForm.reset({rangeMinutes: +event.target.value});\r\n    this.reset();\r\n  }\r\n\r\n  private reset(): void {\r\n    this.consoleService.getStatus('').subscribe(data => {\r\n      this.initData(data.nodes.map(n => n.name));\r\n      this.$refreshTimer?.unsubscribe();\r\n      this.refreshTimer = timer(0, this.getPeriod() * 1000);\r\n      this.$refreshTimer = this.refreshTimer.subscribe(_ => this.refresh());\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  // Returns the diff between setA and setB\r\n  private diff(setA, setB): string[] {\r\n    const difference = new Set<string>(setA);\r\n    for (const elem of setB) {\r\n      difference.delete(elem);\r\n    }\r\n    return Array.from(difference);\r\n  }\r\n\r\n  get f(): any {\r\n    return this.rangeForm.controls;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$refreshTimer.unsubscribe();\r\n  }\r\n\r\n  getTotalSessionCount(): number {\r\n    return this.statusData.nodes.reduce((acc, v) => acc + v.session_count, 0);\r\n  }\r\n\r\n  getMaxSessionCount(): number {\r\n    return Math.max(...this.statusData.nodes.map(e => e.session_count));\r\n  }\r\n\r\n  getMaxPresenceCount(): number {\r\n    return Math.max(...this.statusData.nodes.map(e => e.presence_count));\r\n  }\r\n\r\n  getMaxMatchCount(): number {\r\n    return Math.max(...this.statusData.nodes.map(e => e.match_count));\r\n  }\r\n\r\n  getTotalMatchCount(): number {\r\n    return this.statusData.nodes.reduce((acc, v) => acc + v.match_count, 0);\r\n  }\r\n\r\n  getMaxGoroutineCount(): number {\r\n    return Math.max(...this.statusData.nodes.map(e => e.goroutine_count));\r\n  }\r\n\r\n  getTotalGorountineCount(): number {\r\n    return this.statusData.nodes.reduce((acc, v) => acc + v.goroutine_count, 0);\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GraphInitNodesResolver implements Resolve<string[]> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string[]> {\r\n    return this.consoleService.getStatus('').pipe(mergeMap(r => of(r.nodes.map(n => n.name))))\r\n      .pipe(catchError(error => {\r\n        route.data = {...route.data, error};\r\n        return of([]);\r\n      }));\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: 'sortNumbers',\r\n  pure: false\r\n})\r\nexport class SortNumbersPipe implements PipeTransform {\r\n  transform(items: any[]): number[] {\r\n    return items.sort((a, b) => (a - b));\r\n  }\r\n}\r\n","<script src=\"status.component.ts\"></script><h2 class=\"pb-4\">Status</h2>\r\n\r\n<ngb-alert *ngIf=\"error\" type=\"danger\" [dismissible]=\"false\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<table class=\"status-table table table-sm table-striped mb-4\" (mouseover)=\"showDelta = true\" (mouseout)=\"showDelta = false\">\r\n  <thead class=\"thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">Node name</th>\r\n      <th scope=\"col\">Sessions</th>\r\n      <th scope=\"col\">Presences</th>\r\n      <th scope=\"col\">Authoritative Matches</th>\r\n      <th scope=\"col\">Goroutines</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody *ngIf=\"statusData\">\r\n    <tr class=\"clickable\" *ngFor=\"let nodeData of statusData.nodes\">\r\n      <td>\r\n        <ng-container [ngSwitch]=\"nodeData.health\">\r\n          <img *ngSwitchCase=\"0\" class=\"mr-2\" src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"15\" height=\"\" ngbTooltip=\"OK\">\r\n          <img *ngSwitchCase=\"1\" class=\"mr-2\" src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"15\" height=\"\" ngbTooltip=\"Error\">\r\n          <img *ngSwitchCase=\"2\" class=\"mr-2\" src=\"/static/blue-spinner.svg\" alt=\"\" width=\"15\" height=\"\" ngbTooltip=\"Connecting\">\r\n          <img *ngSwitchCase=\"3\" class=\"mr-2\" src=\"/static/red-spinner.svg\" alt=\"\" width=\"15\" height=\"\" ngbTooltip=\"Disconnecting\">\r\n        </ng-container>\r\n        <span>{{nodeData.name}}</span>\r\n      </td>\r\n      <td>{{nodeData.session_count}} <span [hidden]=\"!showDelta\" class=\"text-muted small\">({{getMaxSessionCount() - nodeData.session_count}} delta)</span></td>\r\n      <td>{{nodeData.presence_count}} <span [hidden]=\"!showDelta\" class=\"text-muted small\">({{getMaxPresenceCount() - nodeData.presence_count}} delta)</span></td>\r\n      <td>{{nodeData.match_count}} <span [hidden]=\"!showDelta\" class=\"text-muted small\">({{getMaxMatchCount() - nodeData.match_count}} delta)</span></td>\r\n      <td>{{nodeData.goroutine_count}} <span [hidden]=\"!showDelta\" class=\"text-muted small\">({{getMaxGoroutineCount() - nodeData.goroutine_count}} delta)</span></td>\r\n    </tr>\r\n    <tr class=\"thead-light\">\r\n      <td class=\"border-0\"></td>\r\n      <th class=\"thead-light\">{{getTotalSessionCount()}}</th>\r\n      <th class=\"thead-light\">{{getMaxPresenceCount()}}</th>\r\n      <th class=\"thead-light\">{{getTotalMatchCount()}}</th>\r\n      <th class=\"thead-light\">{{getTotalGorountineCount()}}</th>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<form [formGroup]=\"rangeForm\">\r\n  <div class=\"row no-gutters justify-content-end\">\r\n    <div class=\"col-12 text-right\">\r\n      <span>View:</span>\r\n      <div class=\"btn-group\" ngbDropdown role=\"group\">\r\n        <select formControlName=\"rangeMinutes\" class=\"custom-select custom-select-sm ml-3\" (change)=setRange($event)>\r\n          <option *ngFor=\"let key of rangesKeys | sortNumbers\" value=\"{{key}}\">{{ranges[key]}}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-6 d-inline-flex justify-content-between align-items-center\">\r\n    <div class=\"graph-title\"><h5 class=\"d-inline\">Processing Latency</h5><small> (ms)</small></div>\r\n  </div>\r\n  <div class=\"col-6 d-inline-flex justify-content-between align-items-center\">\r\n    <div class=\"graph-title\"><h5 class=\"d-inline\">Rate</h5><small> (rpc/s)</small></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <div class=\"graph\" *ngIf=\"latencyGraphData.length > 0\">\r\n      <ngx-charts-line-chart\r\n        [scheme]=\"colorScheme\"\r\n        [legend]=\"false\"\r\n        [showXAxisLabel]=\"false\"\r\n        [showYAxisLabel]=\"false\"\r\n        [animations]=\"false\"\r\n        [timeline]=\"false\"\r\n        [autoScale]=\"false\"\r\n        [xAxis]=\"true\"\r\n        [yAxis]=\"true\"\r\n        xAxisLabel=\"Time\"\r\n        yAxisLabel=\"Latency (ms)\"\r\n        [yScaleMin]=\"0\"\r\n        [roundDomains]=\"true\"\r\n        [results]=\"latencyGraphData\">\r\n        <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n          <div class=\"chart-legend\">\r\n            {{model[0].name.toLocaleString()}}\r\n            <span *ngFor=\"let g of model\">\r\n              <br/>\r\n              <span class=\"legend-label-color\" [ngStyle]=\"{'background-color': g.color}\"></span>\r\n              <span class=\"legend-label-text\">{{g.series}}: {{g.value}}</span>\r\n            </span>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-charts-line-chart>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <div class=\"graph\" *ngIf=\"rateGraphData.length > 0\">\r\n      <ngx-charts-line-chart\r\n        [scheme]=\"colorScheme\"\r\n        [legend]=\"false\"\r\n        [showXAxisLabel]=\"false\"\r\n        [showYAxisLabel]=\"false\"\r\n        [animations]=\"false\"\r\n        [timeline]=\"false\"\r\n        [autoScale]=\"false\"\r\n        [xAxis]=\"true\"\r\n        [yAxis]=\"true\"\r\n        xAxisLabel=\"Time\"\r\n        yAxisLabel=\"Request Count\"\r\n        [yScaleMin]=\"0\"\r\n        [roundDomains]=\"true\"\r\n        [results]=\"rateGraphData\">\r\n        <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n          <div class=\"chart-legend\">\r\n            {{model[0].name.toLocaleString()}}\r\n            <span *ngFor=\"let g of model\">\r\n                <br/>\r\n                <span class=\"legend-label-color\" [ngStyle]=\"{'background-color': g.color}\"></span>\r\n                <span class=\"legend-label-text\">{{g.series}}: {{g.value}}</span>\r\n              </span>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-charts-line-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"row mt-4\">\r\n  <div class=\"col-6 d-inline-flex justify-content-between align-items-center\">\r\n    <div class=\"graph-title\"><h5 class=\"d-inline\">Input</h5><small> (kb/s)</small></div>\r\n  </div>\r\n  <div class=\"col-6 d-inline-flex justify-content-between align-items-center\">\r\n    <div class=\"graph-title\"><h5 class=\"d-inline\">Output</h5><small> (kb/s)</small></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <div class=\"graph\" *ngIf=\"inputGraphData.length > 0\">\r\n      <ngx-charts-line-chart\r\n        [scheme]=\"colorScheme\"\r\n        [legend]=\"false\"\r\n        [showXAxisLabel]=\"false\"\r\n        [showYAxisLabel]=\"false\"\r\n        [animations]=\"false\"\r\n        [timeline]=\"false\"\r\n        [autoScale]=\"false\"\r\n        [xAxis]=\"true\"\r\n        [yAxis]=\"true\"\r\n        xAxisLabel=\"Time\"\r\n        yAxisLabel=\"Input (kb/s)\"\r\n        [yScaleMin]=\"0\"\r\n        [roundDomains]=\"true\"\r\n        [results]=\"inputGraphData\">\r\n        <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n          <div class=\"chart-legend\">\r\n            {{model[0].name.toLocaleString()}}\r\n            <span *ngFor=\"let g of model\">\r\n              <br/>\r\n              <span class=\"legend-label-color\" [ngStyle]=\"{'background-color': g.color}\"></span>\r\n              <span class=\"legend-label-text\">{{g.series}}: {{g.value}}</span>\r\n            </span>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-charts-line-chart>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <div class=\"graph\" *ngIf=\"outputGraphData.length > 0\">\r\n      <ngx-charts-line-chart\r\n        [scheme]=\"colorScheme\"\r\n        [legend]=\"false\"\r\n        [showXAxisLabel]=\"false\"\r\n        [showYAxisLabel]=\"false\"\r\n        [animations]=\"false\"\r\n        [timeline]=\"false\"\r\n        [autoScale]=\"false\"\r\n        [xAxis]=\"true\"\r\n        [yAxis]=\"true\"\r\n        xAxisLabel=\"Time\"\r\n        yAxisLabel=\"Output (kb/s)\"\r\n        [yScaleMin]=\"0\"\r\n        [roundDomains]=\"true\"\r\n        [results]=\"outputGraphData\">\r\n        <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n          <div class=\"chart-legend\">\r\n            {{model[0].name.toLocaleString()}}\r\n            <span *ngFor=\"let g of model\">\r\n                <br/>\r\n                <span class=\"legend-label-color\" [ngStyle]=\"{'background-color': g.color}\"></span>\r\n                <span class=\"legend-label-text\">{{g.series}}: {{g.value}}</span>\r\n              </span>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-charts-line-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {AfterViewInit, Component, ElementRef, Injectable, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {JSONEditor, Mode, toTextContent} from 'vanilla-jsoneditor';\r\nimport {ApiStorageObject, ConsoleService, UserRole, WriteStorageObjectRequest} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './storage-object.component.html',\r\n  styleUrls: ['./storage-object.component.scss']\r\n})\r\nexport class StorageObjectComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('editor') private editor: ElementRef<HTMLElement>;\r\n\r\n  private jsonEditor: JSONEditor;\r\n  public error = '';\r\n  public object: ApiStorageObject;\r\n  public objectForm: UntypedFormGroup;\r\n  public updating = false;\r\n  public updated = false;\r\n\r\n  ngOnInit(): void {\r\n    this.objectForm = this.formBuilder.group({\r\n      collection: ['', Validators.required],\r\n      keyname: ['', Validators.required],\r\n      user_id: ['', Validators.required],\r\n      permission_read: [{value: 0, disabled: false}, Validators.required],\r\n      permission_write: [{value: 0, disabled: false}, Validators.required]\r\n    });\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.object = d[0];\r\n        this.f.collection.setValue(this.object.collection);\r\n        this.f.keyname.setValue(this.object.key);\r\n        this.f.user_id.setValue(this.object.user_id);\r\n        this.f.permission_read.setValue(this.object.permission_read);\r\n        this.f.permission_write.setValue(this.object.permission_write);\r\n        if (!this.updateAllowed()) {\r\n          this.objectForm.disable();\r\n        }\r\n\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.jsonEditor = new JSONEditor({\r\n      target: this.editor.nativeElement,\r\n      props: {\r\n        mode: Mode.text,\r\n        readOnly: !this.updateAllowed(),\r\n        content: {text: this.object.value},\r\n      },\r\n    });\r\n  }\r\n\r\n  updateObject(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = true;\r\n\r\n    let value = '';\r\n    try {\r\n      value = toTextContent(this.jsonEditor.get()).text;\r\n    } catch (e) {\r\n      this.error = e;\r\n      this.updating = false;\r\n      return;\r\n    }\r\n\r\n    let version = this.object.version;\r\n\r\n    if (this.object.collection !== this.f.collection.value\r\n      || this.object.key !== this.f.keyname.value\r\n      || this.object.user_id !== this.f.user_id.value) {\r\n      // don't send version through if we are changing collection/key/userid from the original object.\r\n      version = '';\r\n    }\r\n\r\n    const body: WriteStorageObjectRequest = {\r\n      version,\r\n      value,\r\n      permission_read: this.f.permission_read.value,\r\n      permission_write: this.f.permission_write.value,\r\n    };\r\n    this.consoleService.writeStorageObject('', this.f.collection.value, this.f.keyname.value, this.f.user_id.value, body).subscribe(d => {\r\n      this.updated = true;\r\n      this.updating = false;\r\n      this.object.version = d.version;\r\n\r\n      if (version === '') {\r\n        // if created copy, then reset the object definitions\r\n        this.object.collection = this.f.collection.value;\r\n        this.object.key = this.f.keyname.value;\r\n        this.object.user_id = this.f.user_id.value;\r\n        this.object.permission_read = this.f.permission_read.value;\r\n        this.object.permission_write = this.f.permission_write.value;\r\n      }\r\n\r\n    }, err => {\r\n      this.error = err;\r\n      this.updating = false;\r\n    });\r\n  }\r\n\r\n  deleteObject(): void {\r\n    this.error = '';\r\n    this.updated = false;\r\n    this.updating = false;\r\n\r\n    const o = this.object;\r\n    this.consoleService.deleteStorageObject('', o.collection, o.key, o.user_id, o.version).subscribe(() => {\r\n      this.router.navigate(['/storage'], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          collection: this.f.collection.value,\r\n          key: this.f.key.value,\r\n          user_id: this.f.user_id.value,\r\n        },\r\n      });\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  updateAllowed(): any {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  deleteAllowed(): any {\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  get f(): any {\r\n    // console.log(this.objectForm.controls);\r\n    return this.objectForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageObjectResolver implements Resolve<ApiStorageObject> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ApiStorageObject> {\r\n    const collection = route.paramMap.get('collection');\r\n    const key = route.paramMap.get('key');\r\n    const userId = route.paramMap.get('user_id');\r\n\r\n    return this.consoleService.getStorage('', collection, key, userId);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Storage Object</h2>\r\n<div class=\"storage-top-nav d-flex justify-content-between align-items-baseline mb-3\">\r\n  <nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">Storage</li>\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/storage']\" [queryParams]=\"{'collection': this.object.collection}\">{{this.object.collection}}</a></li>\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/storage']\" [queryParams]=\"{'collection': this.object.collection, 'key': this.object.key}\">{{this.object.key}}</a></li>\r\n      <li class=\"breadcrumb-item\"><a [routerLink]=\"['/storage']\" [queryParams]=\"{'collection': this.object.collection, 'key': this.object.key, 'user_id': this.object.user_id}\">{{this.object.user_id}}</a></li>\r\n    </ol>\r\n  </nav>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error while modifying storage object: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"success\" class=\"mb-3\" *ngIf=\"updated\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Storage object was modified successfully.</h6>\r\n</ngb-alert>\r\n\r\n<form [formGroup]=\"objectForm\" (ngSubmit)=\"updateObject()\" class=\"add-border\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"collection\">Collection</label>\r\n      </div>\r\n      <input type=\"text\" id=\"collection\" class=\"form-control form-control-sm my-2\" placeholder=\"Collection\" required formControlName=\"collection\" [ngClass]=\"{'is-invalid': f.collection.dirty && f.collection.errors}\">\r\n      <div class=\"invalid-tooltip\" [hidden]=\"f.collection.disabled || f.collection.valid || f.collection.pristine\">Collection is required</div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"key\">Key</label>\r\n      </div>\r\n      <input type=\"text\" id=\"key\" class=\"form-control form-control-sm my-2\" placeholder=\"Key\" required formControlName=\"keyname\" [ngClass]=\"{'is-invalid': f.keyname.dirty && f.keyname.errors}\">\r\n      <div class=\"invalid-tooltip\" [hidden]=\"f.keyname.disabled || f.keyname.valid || f.keyname.pristine\">Key is required</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"user_id\">User ID</label>\r\n      </div>\r\n      <input type=\"text\" id=\"user_id\" class=\"form-control form-control-sm my-2\" placeholder=\"User ID\" required formControlName=\"user_id\" [ngClass]=\"{'is-invalid': f.user_id.dirty && f.user_id.errors}\">\r\n      <div class=\"invalid-tooltip\" [hidden]=\"f.user_id.disabled || f.user_id.valid || f.user_id.pristine\">User ID is required</div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"permission_read\">Read Permission</label>\r\n      </div>\r\n      <div class=\"btn-group btn-group-toggle\" id=\"permission_read\" name=\"permission_read\">\r\n        <label class=\"btn btn-outline-secondary\" [ngClass]=\"{'active': f.permission_read.value == 0}\">\r\n          <input formControlName=\"permission_read\" type=\"radio\" [value]=\"0\"> No Read\r\n        </label>\r\n        <label class=\"btn btn-outline-secondary\" [ngClass]=\"{'active': f.permission_read.value == 1}\">\r\n          <input formControlName=\"permission_read\" type=\"radio\" [value]=\"1\"> Owner Read\r\n        </label>\r\n        <label class=\"btn btn-outline-secondary\" [ngClass]=\"{'active': f.permission_read.value == 2}\">\r\n          <input formControlName=\"permission_read\" type=\"radio\" [value]=\"2\"> Public Read\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"version\">Version</label>\r\n      </div>\r\n      <input type=\"text\" id=\"version\" [value]=\"object.version\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Version\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline align-self-center\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"permission_write\">Write Permission</label>\r\n      </div>\r\n      <div class=\"btn-group btn-group-toggle\" id=\"permission_write\" name=\"permission_write\">\r\n        <label class=\"btn btn-outline-secondary\" [ngClass]=\"{'active': f.permission_write.value == 0}\">\r\n          <input formControlName=\"permission_write\" type=\"radio\" [value]=\"0\"> No Write\r\n        </label>\r\n        <label class=\"btn btn-outline-secondary\" [ngClass]=\"{'active': f.permission_write.value == 1}\">\r\n          <input formControlName=\"permission_write\" type=\"radio\" [value]=\"1\"> Owner Write\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row add-border-single-row-bottom mb-3\">\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"create_time\">Create Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"create_time\" [value]=\"object.create_time\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Create Time\" disabled readonly>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-start align-items-baseline\">\r\n      <div class=\"col-3 pl-0\">\r\n        <label class=\"d-inline\" for=\"update_time\">Update Time</label>\r\n      </div>\r\n      <input type=\"text\" id=\"update_time\" [value]=\"object.update_time\" class=\"form-control-plaintext form-control-sm my-2\" placeholder=\"Update Time\" disabled readonly>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card p-2 mt-3 mb-3 jsoneditor\" style=\"height: 518px\">\r\n    <div #editor style=\"height: 500px\"></div>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"updating\" *ngIf=\"updateAllowed()\">\r\n    <span *ngIf=\"object.collection !== f.collection.value\r\n      || object.key !== f.keyname.value\r\n      || object.user_id !== f.user_id.value; else elseBlock\">Save as a copy</span>\r\n    <ng-template #elseBlock>Save</ng-template>\r\n  </button>\r\n</form>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {ApiStorageObject, ConsoleService, StorageCollectionsList, StorageList, UserRole} from '../console.service';\r\nimport {Observable} from 'rxjs';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\nimport {AuthenticationService} from '../authentication.service';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  templateUrl: './storage.component.html',\r\n  styleUrls: ['./storage.component.scss']\r\n})\r\nexport class StorageListComponent implements OnInit {\r\n  public readonly systemUserId = '00000000-0000-0000-0000-000000000000';\r\n  public error = '';\r\n  public collections = [];\r\n  public objects: Array<ApiStorageObject> = [];\r\n  public objectCount = 0;\r\n  public nextCursor = '';\r\n  public prevCursor = '';\r\n  public searchForm: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly authService: AuthenticationService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = this.formBuilder.group({\r\n      collection: [''],\r\n      key: [''],\r\n      user_id: [''],\r\n    });\r\n\r\n    const qp = this.route.snapshot.queryParamMap;\r\n    this.f.collection.setValue(qp.get('collection'));\r\n    this.f.key.setValue(qp.get('key'));\r\n    this.f.user_id.setValue(qp.get('user_id'));\r\n\r\n    this.nextCursor = qp.get('cursor');\r\n\r\n    if (this.nextCursor && this.nextCursor !== '') {\r\n      this.search(1);\r\n    } else if (this.f.collection.value || this.f.user_id.value) {\r\n      this.search(0);\r\n    }\r\n\r\n    this.route.data.subscribe(\r\n      d => {\r\n        this.collections.length = 0;\r\n        this.collections.push(...d[0].collections);\r\n\r\n        this.objectCount = d[1].total_count;\r\n        this.nextCursor = d[1].next_cursor;\r\n        this.prevCursor = d[1].prev_cursor;\r\n        this.objects.length = 0;\r\n        this.objects.push(...d[1].objects);\r\n      },\r\n      err => {\r\n        this.error = err;\r\n      });\r\n  }\r\n\r\n  disableSearch(): boolean {\r\n    // if key is not set, don't disable search.\r\n    // if key is set, make sure collection is also set, otherwise disable search.\r\n    if (this.f.key.value && this.f.key.value !== '') {\r\n      return !(this.f.collection.value && this.f.collection.value !== '');\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  search(state: number): void {\r\n    let cursor = '';\r\n    switch (state) {\r\n      case -1:\r\n        cursor = this.prevCursor;\r\n        break;\r\n      case 0:\r\n        cursor = '';\r\n        break;\r\n      case 1:\r\n        cursor = this.nextCursor;\r\n        break;\r\n    }\r\n\r\n    this.consoleService.listStorage('', this.f.user_id.value, this.f.key.value, this.f.collection.value, cursor).subscribe(d => {\r\n      this.error = '';\r\n      this.objectCount = d.total_count;\r\n      this.nextCursor = d.next_cursor;\r\n      this.objects.length = 0;\r\n      this.objects.push(...d.objects);\r\n\r\n      this.router.navigate([], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          collection: this.f.collection.value,\r\n          key: this.f.key.value,\r\n          user_id: this.f.user_id.value,\r\n          cursor,\r\n        },\r\n        queryParamsHandling: 'merge',\r\n      });\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n\r\n  }\r\n\r\n  deleteObject(event, i: number, o: ApiStorageObject): void {\r\n    this.deleteConfirmService.openDeleteConfirmModal(\r\n      () => {\r\n        event.target.disabled = true;\r\n        event.preventDefault();\r\n        this.error = '';\r\n        this.consoleService.deleteStorageObject('', o.collection, o.key, o.user_id, o.version).subscribe(() => {\r\n          this.error = '';\r\n          this.objectCount--;\r\n          this.objects.splice(i, 1);\r\n        }, err => {\r\n          this.error = err;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllowed(): boolean {\r\n    // only admin and developers are allowed.\r\n    return this.authService.sessionRole <= UserRole.USER_ROLE_MAINTAINER;\r\n  }\r\n\r\n  viewObject(o: ApiStorageObject): void {\r\n    this.router.navigate(['/storage', o.collection, o.key, o.user_id], {relativeTo: this.route});\r\n  }\r\n\r\n  get f(): any {\r\n    return this.searchForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageCollectionResolver implements Resolve<StorageCollectionsList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<StorageCollectionsList> {\r\n    return this.consoleService.listStorageCollections('');\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageSearchResolver implements Resolve<StorageList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<StorageList> {\r\n    const collection = route.queryParamMap.get('collection');\r\n    const key = route.queryParamMap.get('key');\r\n    const userId = route.queryParamMap.get('user_id');\r\n\r\n    return this.consoleService.listStorage('', userId, key, collection, null);\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Storage Objects</h2>\r\n<h6 class=\"pb-4\">{{objectCount}} objects found.</h6>\r\n\r\n<div class=\"row no-gutters mb-3\">\r\n    <div class=\"col d-flex justify-content-between no-gutters\">\r\n      <div class=\"col-md-9\">\r\n        <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(0)\">\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <div class=\"btn-group\" ngbDropdown>\r\n                <button [disabled]=\"collections.length === 0\" type=\"button\" class=\"btn btn-outline-secondary dropdown-radius\" ngbDropdownToggle>\r\n                  <span *ngIf=\"!f.collection.value || f.collection.value === ''\">Filter by collection</span>\r\n                  <span *ngIf=\"f.collection.value && f.collection.value !== ''\">{{f.collection.value}}</span>\r\n                </button>\r\n                <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n                  <button [hidden]=\"!f.collection.value || f.collection.value === ''\" type=\"button\" class=\"btn btn-secondary text-secondary\" ngbDropdownItem (click)=\"f.collection.reset();\">&#10008; Deselect collection</button>\r\n                  <div [hidden]=\"!f.collection.value || f.collection.value === ''\" class=\"dropdown-divider\"></div>\r\n                  <button *ngFor=\"let c of collections\" type=\"button\" ngbDropdownItem (click)=\"f.collection.setValue(c);\">{{c}}</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"key\" placeholder=\"Filter by key\"/>\r\n\r\n            <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"user_id\" placeholder=\"Filter by user ID\"/>\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\" (click)=\"f.user_id.setValue(systemUserId);\"><img class=\"mr-1\" src=\"/static/svg/purple-cog-1.svg\" alt=\"\" width=\"20\" height=\"\"></span>\r\n            </div>\r\n            <div class=\"input-group-append\">\r\n              <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"disableSearch()\" (click)=\"search(0)\">Search</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-3 justify-content-end text-right\">\r\n          <div class=\"btn-group page-btns\" role=\"group\" aria-label=\"Search\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(0)\" [disabled]=\"objects.length === 0\"><img src=\"/static/svg/page-first.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n<!--            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(-1)\" [disabled]=\"prev_cursor === ''\"><img src=\"/static/svg/page-prev.svg\" alt=\"\" width=\"20\" height=\"\"></button>-->\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"search(1)\" [disabled]=\"nextCursor === ''\"><img src=\"/static/svg/page-next.svg\" alt=\"\" width=\"20\" height=\"\"></button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<ngb-alert [dismissible]=\"false\" type=\"danger\" class=\"mb-3\" *ngIf=\"error\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">Error when querying storage objects: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<div class=\"row no-gutters\">\r\n  <table class=\"table table-sm table-hover table-bordered\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th>Collection Name</th>\r\n        <th>Key Name</th>\r\n        <th style=\"width: 320px\">User ID</th>\r\n        <th style=\"width: 180px\">Last Update</th>\r\n        <th style=\"width: 90px\" *ngIf=\"deleteAllowed()\">Remove</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngIf=\"objects.length === 0\">\r\n        <td colSpan=\"5\" class=\"text-muted\">No storage objects found - change the filter criteria or add new objects.</td>\r\n      </tr>\r\n      <tr *ngFor=\"let o of objects; index as i;\">\r\n        <td (click)=\"viewObject(o);\">{{o.collection}}</td>\r\n        <td (click)=\"viewObject(o);\">{{o.key}}</td>\r\n        <td (click)=\"viewObject(o);\">{{o.user_id}}</td>\r\n        <td (click)=\"viewObject(o);\">{{o.update_time}}</td>\r\n        <td *ngIf=\"deleteAllowed()\" class=\"text-center\"><button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deleteObject($event, i, o);\">Delete</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {UntypedFormBuilder, UntypedFormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './subscriptions-list.component.html',\r\n  styleUrls: ['./subscriptions-list.component.scss']\r\n})\r\nexport class SubscriptionsListComponent implements OnInit {\r\n  public originalTransactionId: string;\r\n  public searchForm: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.searchForm = this.formBuilder.group({\r\n      original_transaction_id: [''],\r\n    });\r\n  }\r\n\r\n  search(): void {\r\n    this.originalTransactionId = this.f.original_transaction_id.value;\r\n  }\r\n\r\n  get f(): any {\r\n    return this.searchForm.controls;\r\n  }\r\n}\r\n","<h2 class=\"pb-1\">Subscriptions</h2>\r\n\r\n<div class=\"row no-gutters mb-4\">\r\n  <div class=\"col d-flex justify-content-between no-gutters align-items-center\">\r\n    <div class=\"col-md-9\">\r\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control border-right-0\" formControlName=\"original_transaction_id\" placeholder=\"Search by original_transaction_id (purchaseToken for Play Store purchases)\"/>\r\n\r\n          <div class=\"input-group-append\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-primary dropdown-radius\" (click)=\"search()\">Search</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<app-subscriptions [original_transaction_id]=\"originalTransactionId\"></app-subscriptions>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {Component, Injectable, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {AddUserRequest, ConsoleService, UserList, UserListUser, UserRole} from '../console.service';\r\nimport {UntypedFormBuilder, UntypedFormGroup, Validators} from '@angular/forms';\r\nimport {mergeMap} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {DeleteConfirmService} from '../shared/delete-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  public error = '';\r\n  public userCreateError = '';\r\n  public successMessage = '';\r\n  public users: Array<UserListUser> = [];\r\n  public createUserForm: UntypedFormGroup;\r\n  public adminRole = UserRole.USER_ROLE_ADMIN;\r\n  public developerRole = UserRole.USER_ROLE_DEVELOPER;\r\n  public maintainerRole = UserRole.USER_ROLE_MAINTAINER;\r\n  public readonlyRole = UserRole.USER_ROLE_READONLY;\r\n\r\n  constructor(\r\n    private readonly route: ActivatedRoute,\r\n    private readonly consoleService: ConsoleService,\r\n    private readonly formBuilder: UntypedFormBuilder,\r\n    private readonly deleteConfirmService: DeleteConfirmService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createUserForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.compose([Validators.required, Validators.minLength(8)])],\r\n      role: [+this.readonlyRole, Validators.required],\r\n      mfa: [true, Validators.required],\r\n      newsletter: [false],\r\n    });\r\n\r\n    this.route.data.subscribe(data => {\r\n      const users = data[0] as UserList;\r\n      this.users.length = 0;\r\n      this.users.push(...users.users);\r\n    }, err => {\r\n      this.error = err;\r\n    });\r\n  }\r\n\r\n  public requireUserMfa(username: string, enforce: boolean): void {\r\n    this.error = '';\r\n\r\n    this.consoleService.requireUserMfa('', username, {required: enforce}).pipe(mergeMap(() => {\r\n      return this.consoleService.listUsers('');\r\n    })).subscribe((userList) => {\r\n      this.error = '';\r\n      this.users.length = 0;\r\n      this.users.push(...userList.users);\r\n      this.successMessage = `User ${username} Multi-factor authentication is now required`;\r\n      setTimeout(() => {\r\n        this.successMessage = '';\r\n      }, 5000);\r\n    }, error => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  public resetUserMfa(username: string): void {\r\n    this.error = '';\r\n\r\n    this.consoleService.resetUserMfa('', username).pipe(mergeMap(() => {\r\n      return this.consoleService.listUsers('');\r\n    })).subscribe((userList) => {\r\n      this.error = '';\r\n      this.users.length = 0;\r\n      this.users.push(...userList.users);\r\n      this.successMessage = `User ${username} Multi-factor authentication was reset successfully`;\r\n      setTimeout(() => {\r\n        this.successMessage = '';\r\n      }, 5000);\r\n    }, error => {\r\n      this.error = error;\r\n    });\r\n  }\r\n\r\n  public deleteUser(username: string): void {\r\n    this.error = '';\r\n\r\n    this.deleteConfirmService.openDeleteConfirmModal(() => {\r\n      this.consoleService.deleteUser('', username).pipe(mergeMap(() => {\r\n        return this.consoleService.listUsers('');\r\n      })).subscribe(userList => {\r\n        this.error = '';\r\n        this.users.length = 0;\r\n        this.users.push(...userList.users);\r\n      }, error => {\r\n        this.error = error;\r\n      });\r\n    });\r\n  }\r\n\r\n  public addUser(): void {\r\n    this.userCreateError = '';\r\n    this.createUserForm.disable();\r\n\r\n    let role: UserRole = UserRole.USER_ROLE_READONLY;\r\n\r\n    switch (this.f.role.value) {\r\n      case 1:\r\n        role = UserRole.USER_ROLE_ADMIN;\r\n        break;\r\n      case 2:\r\n        role = UserRole.USER_ROLE_DEVELOPER;\r\n        break;\r\n      case 3:\r\n        role = UserRole.USER_ROLE_MAINTAINER;\r\n        break;\r\n      case 4:\r\n        role = UserRole.USER_ROLE_READONLY;\r\n        break;\r\n    }\r\n\r\n    const req: AddUserRequest = {\r\n      username: this.f.username.value,\r\n      email: this.f.email.value,\r\n      password: this.f.password.value,\r\n      role,\r\n      newsletter_subscription: this.f.newsletter.value,\r\n      mfa_required: this.f.mfa.value,\r\n    };\r\n\r\n    this.consoleService.addUser('', req).pipe(mergeMap(() => {\r\n        return this.consoleService.listUsers('');\r\n    })).subscribe(userList => {\r\n        this.userCreateError = '';\r\n        this.createUserForm.reset({role: +role, mfa: true});\r\n        this.createUserForm.enable();\r\n        this.users.length = 0;\r\n        this.users.push(...userList.users);\r\n    }, error => {\r\n      this.userCreateError = error;\r\n      this.createUserForm.enable();\r\n    });\r\n  }\r\n\r\n  get f(): any {\r\n    return this.createUserForm.controls;\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UsersResolver implements Resolve<UserList> {\r\n  constructor(private readonly consoleService: ConsoleService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UserList> {\r\n    return this.consoleService.listUsers('');\r\n  }\r\n}\r\n","<h2 class=\"pb-4\">User Management</h2>\r\n\r\n<ngb-alert *ngIf=\"error\" type=\"danger\" [dismissible]=\"false\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred: {{error}}</h6>\r\n</ngb-alert>\r\n\r\n<ngb-alert type=\"success\" class=\"mb-3\" [dismissible]=\"true\" *ngIf=\"successMessage\">\r\n  <img src=\"/static/svg/green-tick.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">{{successMessage}}</h6>\r\n</ngb-alert>\r\n\r\n<table class=\"user-details mb-5 table table-bordered table-sm table-striped\">\r\n  <thead class=\"thead-light\">\r\n    <tr>\r\n      <th style=\"width: 400px\">Username</th>\r\n      <th>Email</th>\r\n      <th style=\"width: 300px\">Role</th>\r\n      <th>MFA Required</th>\r\n      <th>MFA Setup</th>\r\n      <th style=\"width: 90px\">Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngIf=\"users.length === 0\">\r\n    <td [colSpan]=\"5\" class=\"text-muted\">No additional users are setup. Create a new user below.</td>\r\n  </tr>\r\n  <tr *ngFor=\"let user of users\">\r\n    <td>{{user.username}}</td>\r\n    <td>{{user.email}}</td>\r\n    <td>\r\n      <span [hidden]=\"user.role !== adminRole\">Administrator</span>\r\n      <span [hidden]=\"user.role !== developerRole\">Developer</span>\r\n      <span [hidden]=\"user.role !== maintainerRole\">Maintainer</span>\r\n      <span [hidden]=\"user.role !== readonlyRole\">View Only</span>\r\n    </td>\r\n    <td>{{user.mfa_required}}</td>\r\n    <td>{{user.mfa_enabled}}</td>\r\n    <td style=\"width: 310px;\">\r\n      <div class=\"btn-group\">\r\n        <button [disabled]=\"user.mfa_required\" type=\"button\" class=\"btn btn-warning btn-outline-dark\" (click)=\"requireUserMfa(user.username, true)\">Enforce MFA</button>\r\n        <button [disabled]=\"!user.mfa_enabled\" type=\"button\" class=\"btn btn-warning btn-outline-dark\" (click)=\"resetUserMfa(user.username)\">Reset MFA</button>\r\n        <button type=\"button\" class=\"btn btn-danger btn-outline-dark\" (click)=\"deleteUser(user.username)\">Delete</button>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<h5 class=\"section-divider d-flex mb-4\">Add new user</h5>\r\n\r\n<ngb-alert [type]=\"'secondary'\" class=\"mb-4 alert-permissions\" [dismissible]=\"false\">\r\n  <h6 class=\"alert-title font-weight-bold\">User roles</h6>\r\n  <div class=\"d-flex flex-wrap flex-row\">\r\n    <div class=\"col col-md-3 p-4 flex-fill flex-grow-1\">\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <img class=\"mr-2\" src=\"/static/svg/role-admin.svg\" alt=\"\" width=\"30\" height=\"\">\r\n        <h6 class=\"m-0 font-weight-bold\">Administrator</h6>\r\n      </div>\r\n      <small>\r\n        Owners have complete control over the server, its users and resources.\r\n      </small>\r\n    </div>\r\n\r\n    <div class=\"col col-md-3 p-4 flex-fill flex-grow-1\">\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <img class=\"mr-2\" src=\"/static/svg/role-developer.svg\" alt=\"\" width=\"30\" height=\"\">\r\n        <h6 class=\"m-0 font-weight-bold\">Developer</h6>\r\n      </div>\r\n      <small>\r\n        Like Administrators, Developers have complete control over the server, resources and data. However they cannot add, change or delete console users.\r\n      </small>\r\n    </div>\r\n\r\n    <div class=\"col col-md-3 p-4 flex-fill flex-grow-1\">\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <img class=\"mr-2\" src=\"/static/svg/role-maintainer.svg\" alt=\"\" width=\"30\" height=\"\">\r\n        <h6 class=\"m-0 font-weight-bold\">Maintainer</h6>\r\n      </div>\r\n      <small>\r\n        Maintainers have access to adding, changing and delete client resources such as accounts, storage and leaderboard records. They don't have access to the API Explorer or the console users.\r\n      </small>\r\n    </div>\r\n\r\n    <div class=\"col col-md-3 p-4 flex-fill flex-grow-1\">\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <img class=\"mr-2\" src=\"/static/svg/role-viewonly.svg\" alt=\"\" width=\"30\" height=\"\">\r\n        <h6 class=\"m-0 font-weight-bold\">View Only</h6>\r\n      </div>\r\n      <small>\r\n        View Only users can only view client resources but cannot make any changes to the data whatsoever.\r\n      </small>\r\n    </div>\r\n  </div>\r\n</ngb-alert>\r\n\r\n<ngb-alert *ngIf=\"userCreateError\" type=\"danger\" [dismissible]=\"false\">\r\n  <img src=\"/static/svg/red-triangle.svg\" alt=\"\" width=\"16\" height=\"\" class=\"mr-2\">\r\n  <h6 class=\"mr-2 d-inline font-weight-bold\">An error occurred:</h6>\r\n  <p class=\"mb-0 pl-4\">{{userCreateError}}</p>\r\n</ngb-alert>\r\n\r\n<div class=\"add-border rounded\">\r\n  <form [formGroup]=\"createUserForm\" (ngSubmit)=\"addUser()\">\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col d-flex justify-content-between align-items-center\">\r\n        <div class=\"col-md-3\">\r\n          <label class=\"d-inline\" for=\"email\">Email</label>\r\n        </div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"email@example.com\" required formControlName=\"email\" [ngClass]=\"{'is-invalid': f.email.dirty && f.email.errors}\">\r\n          <div class=\"invalid-tooltip\" [hidden]=\"f.email.disabled || f.email.valid || f.email.pristine\">Email is required</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col d-flex justify-content-between align-items-center\">\r\n        <div class=\"col-md-3\">\r\n          <label class=\"d-inline\" for=\"username\">Username</label>\r\n        </div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Username\" required formControlName=\"username\" [ngClass]=\"{'is-invalid': f.username.dirty && f.username.errors}\">\r\n          <div class=\"invalid-tooltip\" [hidden]=\"f.username.disabled || f.username.valid || f.username.pristine\">Username is required</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col d-flex justify-content-between align-items-center\">\r\n        <div class=\"col-md-3\">\r\n          <label class=\"d-inline\" for=\"password\">Password</label>\r\n        </div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" required formControlName=\"password\" [ngClass]=\"{'is-invalid': f.password.dirty && f.password.errors}\">\r\n          <div class=\"invalid-tooltip\" [hidden]=\"f.password.disabled || f.password.valid || f.password.pristine\">Password is required, must be 8 chars or longer and consist of at least a capital letter, a small letter and a number.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col d-flex justify-content-between align-items-center\">\r\n        <div class=\"col-md-3\">\r\n          <label class=\"d-inline\">Role</label>\r\n        </div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <div class=\"btn-group\">\r\n            <button disabled class=\"btn btn-outline-dark disabled\">\r\n              <span [hidden]=\"f.role.value !== +adminRole\">Administrator</span>\r\n              <span [hidden]=\"f.role.value !== +developerRole\">Developer</span>\r\n              <span [hidden]=\"f.role.value !== +maintainerRole\">Maintainer</span>\r\n              <span [hidden]=\"f.role.value !== +readonlyRole\">View Only</span>\r\n            </button>\r\n            <div class=\"btn-group\" ngbDropdown role=\"group\">\r\n              <button type=\"button\" class=\"btn btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\r\n              <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n                <button type=\"button\" ngbDropdownItem (click)=\"f.role.setValue(+adminRole)\">Administrator</button>\r\n                <button type=\"button\" ngbDropdownItem (click)=\"f.role.setValue(+developerRole)\">Developer</button>\r\n                <button type=\"button\" ngbDropdownItem (click)=\"f.role.setValue(+maintainerRole)\">Maintainer</button>\r\n                <button type=\"button\" ngbDropdownItem (click)=\"f.role.setValue(+readonlyRole)\">View Only</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"invalid-tooltip\" [hidden]=\"f.role.disabled || f.role.valid || f.role.pristine\">Role is required</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col d-flex align-items-center\">\r\n        <div class=\"col-md-3\">\r\n          <label class=\"d-inline\">Require Multi-factor Authentication</label>\r\n        </div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" id=\"mfa\" class=\"custom-control-input mr-2 my-2\" formControlName=\"mfa\"/>\r\n            <label class=\"form-check-label custom-control-label\" for=\"mfa\"></label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row no-gutters add-border-single-row-bottom mb-4\">\r\n      <div class=\"col d-flex align-items-center\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-9 ml-0 p-0\">\r\n          <div class=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" id=\"newsletter\" class=\"custom-control-input mr-2 my-2\" formControlName=\"newsletter\"/>\r\n            <label class=\"form-check-label custom-control-label\" for=\"newsletter\">Subscribe to Heroic Labs' newsletters to receive latest updates to Nakama and other news.</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"\">\r\n      <button type=\"submit\" [disabled]=\"createUserForm.invalid\" class=\"btn btn-primary\">Save</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport {FactoryProvider, InjectionToken} from '@angular/core';\r\n\r\nexport const WINDOW = new InjectionToken<Window>('window');\r\nconst windowProvider: FactoryProvider = {provide: WINDOW, useFactory: () => window};\r\nexport const WINDOW_PROVIDERS = [windowProvider];\r\n\r\ndeclare global {\r\n  interface Window { }\r\n}\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  segment_write_key: 'k23XRwEFKYnaKDk2esbRgEG49sLN6CDV',\r\n  apiBaseUrl: 'http://127.0.0.1:7351',\r\n  nt: false\r\n};\r\n","// Copyright 2020 The Nakama Authors\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));\r\n"],"names":["UserRole","saveAs","i0","AccountComponent","route","router","consoleService","authService","deleteConfirmService","account","error","views","label","path","constructor","ngOnInit","data","subscribe","d","err","deleteAccount","event","recorded","openDeleteConfirmModal","target","disabled","user","id","navigate","banUnbanAccount","disable_time","unbanAccount","banAccount","Date","now","toString","exportAccount","accountExport","fileName","json","JSON","stringify","bytes","TextEncoder","encode","blob","Blob","type","updateAllowed","sessionRole","USER_ROLE_MAINTAINER","exportAllowed","banAllowed","deleteAllowed","selectors","decls","vars","consts","template","AccountResolver","resolve","state","userId","paramMap","get","getAccount","factory","providedIn","AuthenticationComponent","formBuilder","accountForm","updating","updated","group","email","password","selected_device_id_index","parent","f","setValue","devices","length","disable","updateAccount","body","value","dirty","reset","unlinkDeviceId","device_id","unlinkDevice","splice","unlinkCustomID","unlinkCustom","custom_id","unlinkFacebook","facebook_id","unlinkFacebookInstantGames","unlinkFacebookInstantGame","facebook_instant_game_id","unlinkApple","apple_id","unlinkGameCenter","gamecenter_id","unlinkGoogle","google_id","unlinkSteam","steam_id","copyDeviceIdToClipboard","val","selBox","document","createElement","style","position","left","top","opacity","appendChild","focus","select","execCommand","removeChild","controls","ctx","FriendsComponent","friends","push","deleteFriend","i","preventDefault","viewAccount","u","relativeTo","FriendsResolver","getFriends","GroupsComponent","groups","user_groups","deleteGroupUser","g","GroupsResolver","getGroups","Validators","JSONEditor","Mode","toTextContent","ProfileComponent","editor","jsonEditor","username","required","display_name","avatar_url","location","timezone","ngAfterViewInit","nativeElement","props","mode","text","readOnly","content","metadata","e","viewQuery","ApiStoreProvider","PurchasesComponent","purchases","purchasesRowsOpen","nextCursor","prevCursor","limit","transactionId","paramUserId","snapshot","validated_purchases","cursor","prev_cursor","ngOnChanges","changes","firstChange","trim","getPurchase","res","loadData","listPurchases","getStoreText","store","formatStoreText","getRefundText","time","split","map","s","slice","toLowerCase","join","inputs","features","PurchasesResolver","SubscriptionsComponent","subscriptions","subscriptionsRowOpen","originalTransactionId","validated_subscriptions","getSubscription","listSubscriptions","SubscriptionsResolver","WalletComponent","walletLedger","walletLedgerMetadataOpen","userID","items","next_cursor","getWalletLedger","wallet","updateWallet","deleteLedgerItem","w","deleteWalletLedger","WalletLedgerResolver","Subject","takeUntil","AccountListComponent","systemUserId","accountsCount","accounts","searchForm","querySubject","ongoingQuery","filter","filter_type","qp","queryParamMap","search","users","total_count","ngOnDestroy","next","complete","tombstones","listAccounts","pipe","queryParams","queryParamsHandling","cancelQuery","o","USER_ROLE_DEVELOPER","AccountSearchResolver","ApiExplorerComponent","editorReq","editorVars","editorRes","jsonEditorReq","jsonEditorVars","jsonEditorRes","rpcEndpoints","endpoints","endpointCallForm","addVars","method","user_id","valueChanges","newMethod","endpoint","concat","find","updateQueryParam","setupRequestBody","body_template","rpc_endpoints","qpEndpoint","sendRequest","textVars","varsObj","parse","Object","keys","forEach","k","Error","req","session_vars","endpointCall","isRpcEndpoint","callRpcEndpoint","callApiEndpoint","resp","error_message","set","updateProps","addSessionVars","ApiExplorerEndpointsResolver","listApiEndpoints","RouterModule","LoginComponent","LoginGuard","AuthenticationGuard","BaseComponent","PageviewGuard","GraphInitNodesResolver","StatusComponent","ConfigComponent","ConfigResolver","UsersComponent","UsersResolver","RuntimeComponent","RuntimeResolver","StorageCollectionResolver","StorageListComponent","StorageSearchResolver","StorageObjectComponent","StorageObjectResolver","LeaderboardsComponent","LeaderboardListResolver","GroupDetailsComponent","GroupMembersComponent","GroupMembersResolver","MatchesComponent","MatchesResolver","NodesResolver","GroupListComponent","GroupSearchResolver","GroupComponent","GroupResolver","LeaderboardComponent","LeaderboardResolver","LeaderboardDetailsComponent","LeaderboardRecordsComponent","LeaderboardRecordsResolver","ChatListComponent","ChatSearchResolver","PurchasesListComponent","SubscriptionsListComponent","MfaSetupComponent","routes","component","canActivate","canActivateChild","children","redirectTo","pathMatch","runGuardsAndResolvers","AppRoutingModule","forRoot","useHash","imports","exports","AppComponent","BrowserModule","BrowserAnimationsModule","HTTP_INTERCEPTORS","HttpClientModule","WINDOW_PROVIDERS","environment","NgxChartsModule","NgbModule","NoopAnimationsModule","FormsModule","ReactiveFormsModule","NgSelectModule","Globals","SegmentModule","SessionInterceptor","AuthenticationErrorInterceptor","SortNumbersPipe","ConfigParams","NgxFileDropModule","DeleteConfirmDialogComponent","QRCodeModule","AppModule","bootstrap","provide","useValue","host","production","origin","apiBaseUrl","timeout","useClass","multi","apiKey","segment_write_key","debug","loadOnInitialization","nt","declarations","throwError","catchError","authenticationService","intercept","handle","status","logout","stateUrl","routerState","url","_","console","log","message","statusText","session","mfaRequired","BehaviorSubject","EMPTY","tap","WINDOW","SESSION_LOCALSTORAGE_KEY","AuthenticationService","window","segment","http","config","currentSessionSubject","currentSession","restoredSession","localStorage","getItem","segmentIdentify","asObservable","getValue","claims","usn","role","rol","USER_ROLE_ADMIN","USER_ROLE_READONLY","USER_ROLE_UNKNOWN","token","decodeJWT","mfa","mfaToken","mfa_code","mfa_required","login","code","post","observe","response","setItem","authenticateLogout","removeItem","base64Raw","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","mfaSet","payload","authenticateMFASetup","identify","ema","cookie","cki","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","bufferTime","distinctUntilChanged","routerSub","segmentRouterSub","loading","navItem","routerLink","minRole","icon","separator","events","previous","current","nav","page","getSessionRole","getUsername","isMfaEnabled","unsubscribe","onSidebarNavChange","changeEvent","globals","restrictedPages","of","modalService","messages","searchForm1","searchForm2","searchForm3","confirmDeleteForm","deleteError","deleteSuccess","deleting","totalDeleted","activeFilter","filters","messageStatesOpen","group_id","user_id_one","user_id_two","delete","compose","pattern","numberValueControl","title","days","f1","f2","f3","qType","Number","updateMessages","listChannelMessages","encodeURIComponent","postData","params","deleteMessage","deleteChannelMessages","message_id","deleteMessagesAllowed","deleteData","formValue","threshold","retainDays","setDate","getDate","toISOString","total","groupId","userIdOne","userIdTwo","msg","sender_id","dump","FileSaver","delay","httpClient","configError","uploadError","jsonConfig","flatConfig","nakamaVersion","file","uploading","uploadSuccess","apiConfig","server_version","flattenConfig","currPath","result","key","node","Array","isArray","name","isEmpty","exportYaml","dropped","files","fileEntry","isFile","tokens","validExt","includes","uploadFile","formData","FormData","append","headers","Authorization","deleteAllData","getConfig","HttpHeaders","HttpParams","ListChannelMessagesRequestType","StatusHealth","ApiStoreEnvironment","DEFAULT_HOST","DEFAULT_TIMEOUT_MS","timeoutMs","ConsoleService","defaultConfig","deleteAccounts","auth_token","urlPath","encoder","CustomHttpParamEncoder","getTokenAuthHeaders","String","account_id","record_deletion","friend_id","unlinkEmail","wallet_id","authenticate","listGroups","demoteGroupMember","promoteGroupMember","addGroupUsers","deleteGroup","getGroup","updateGroup","exportGroup","getMembers","transaction_id","original_transaction_id","listLeaderboards","deleteLeaderboard","getLeaderboard","deleteLeaderboardRecord","owner_id","listLeaderboardRecords","leaderboard_id","owner_ids","expiry","listMatches","authoritative","min_size","max_size","match_id","query","getMatchState","before","ids","getRuntime","getStatus","deleteStorage","listStorage","collection","listStorageCollections","deleteStorageObject","version","getStorage","writeStorageObject","put","deleteStorageObject2","deleteUser","listUsers","addUser","requireUserMfa","resetUserMfa","getBasicAuthHeaders","btoa","encodeKey","encodeValue","decodeKey","decodeValue","Map","groupForm","description","lang_tag","open","max_count","edge_count","RangeError","groupExport","members","activeState","states","addForm","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","group_users","editionAllowed","demoteGroupUser","promoteGroupUser","add","join_request","groupsCount","viewGroup","orderString","operatorString","leaderboard","leaderboardId","records","recordsMetadataOpen","loadRecords","deleteRecord","r","leaderboards","leaderboardsCount","l","viewLeaderboardEntries","loginForm","submitted","mfaEnabled","returnUrl","minLength","maxLength","onSubmit","invalid","enable","mergeMap","ctx_r22","matches","matchStates","matchStatesOpen","activeType","types","activeNode","nodes","qNode","found","getType","list","tp","t","ix","match","api_match","getMatchPresencesString","ps","service","matchId","n","codeForm","mfaCode","downloadClicked","recoveryCodes","recovery_codes","mfaUrl","mfa_url","downloadRecoveryCodes","codes","v","link","href","URL","createObjectURL","download","click","revokeObjectURL","runtimeInfo","clone","setHeaders","EventEmitter","confirmed","canceled","closeModal","emit","cancel","confirm","valid","outputs","DeleteConfirmService","confirmedCallback","formGroup","modalOptions","backdrop","centered","modalRef","componentInstance","close","timer","showDelta","statusData","rateGraphData","latencyGraphData","inputGraphData","outputGraphData","rangeForm","ranges","rangesKeys","colorScheme","domain","samples","refreshTimer","$refreshTimer","rangeMinutes","nodeNames","initData","refresh","getPeriod","updateData","generateSeries","pointTs","setMilliseconds","timestamps","getTime","reverse","p","names","series","currentData","statusList","updatedData","ts","timestamp","currentNodes","dataNodes","missingNodes","diff","shiftData","newSeries","newData","currentSeries","Math","floor","setRange","setA","setB","difference","Set","elem","from","getTotalSessionCount","reduce","acc","session_count","getMaxSessionCount","max","getMaxPresenceCount","presence_count","getMaxMatchCount","match_count","getTotalMatchCount","getMaxGoroutineCount","goroutine_count","getTotalGorountineCount","styles","transform","sort","a","b","pure","object","objectForm","keyname","permission_read","permission_write","updateObject","deleteObject","collections","objects","objectCount","disableSearch","viewObject","userCreateError","successMessage","createUserForm","adminRole","developerRole","maintainerRole","readonlyRole","newsletter","enforce","userList","setTimeout","newsletter_subscription","InjectionToken","windowProvider","useFactory","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","then","ref","destroy","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}